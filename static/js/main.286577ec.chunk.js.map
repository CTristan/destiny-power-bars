{"version":3,"sources":["bungie-api.ts","bungie-auth.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["bungieAuthedFetch","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","config","accessToken","headers","url","response","wrap","_context","prev","next","localStorage","getItem","ACCESS_TOKEN_STORAGE_KEY","x-api-key","BUNGIE_API_KEY","Authorization","concat","console","log","params","entries","map","_ref2","_ref3","slicedToArray","key","value","encodeURIComponent","fetch","sent","abrupt","json","stop","_x","apply","this","arguments","manifestPropertyWhitelist","getCachedManifestData","_ref4","_callee2","manifestData","_context2","get","getRemoteManifestData","_ref5","_callee3","manifest","version","manifestDataResponse","_context3","jsonWorldContentPaths","en","keys","forEach","includes","set","setItem","_x2","getManifest","_ref6","_callee4","localStorageManifestVersion","_context4","getDestinyManifest","Response","window","location","search","t0","error","clearStorage","removeItem","handleTokenResponse","tokenResponse","data","tokenDuration","expiryTime","bungieMembershipId","destinyMemberships","destinyMembershipId","_args","length","undefined","status","access_token","expires_in","Date","now","membership_id","toString","getMembershipDataById","membershipId","membershipType","fetchAuthToken","authCode","method","cache","credentials","Content-Type","redirect","referrer","body","hasValidAuth","accessTokenExpiryTime","parseInt","auth","codeInQuery","exec","replace","ITEM_SLOTS","kinetic","energy","power","head","gloves","chest","legs","classItem","getOverallPower","powerBySlot","values","reduce","sum","App","_useState","useState","_useState2","isAuthed","setIsAuthed","useEffect","doAuth","_useState3","_useState4","isFetchingManifest","setIsFetchingManifest","_useState5","_useState6","isFetchingCharacterData","setIsFetchingCharacterData","_useState7","_useState8","characterData","setCharacterData","manifestPromise","profile","characters","characterEquipments","characterInventories","profileInventories","itemInstances","classNames","ITEM_TYPE_ARMOR","ITEM_TYPE_WEAPON","mergeItems","allCharacterItems","allCharacterWeapons","_getCharacterData","characterIds","_characterData","finally","getProfile","components","characterEquipment","profileInventory","itemComponents","instances","characterItemMap","allItems","characterItems","items","filter","i","itemDefinition","itemHash","DestinyInventoryItemDefinition","itemType","getCharacterData","id","cData","className","classType","mapAndFilterItems","item","instanceData","itemInstanceId","objectSpread","profileItems","combinedItems","armor","weapons","itemsBySlot","slots","slotName","slotBucketHash","defineProperty","inventory","bucketTypeHash","maxPowerBySlot","Math","max","toConsumableArray","primaryStat","overallPower","equipments","inventories","Bar","_ref7","min","label","range","perc","floor","react_default","createElement","style","width","backgroundColor","height","margin","color","c","maxWidth","_ref8","_ref9","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.286577ec.chunk.js","sourcesContent":["import { get, set } from 'idb-keyval'\n\nimport { BUNGIE_API_KEY, ACCESS_TOKEN_STORAGE_KEY } from './bungie-auth';\nimport { HttpClientConfig, getDestinyManifest, DestinyManifest, DestinyInventoryItemDefinition } from 'bungie-api-ts/destiny2'\n\nexport const bungieAuthedFetch = async (config: HttpClientConfig) => {\n  //const url = `https://www.bungie.net/Platform${path}`\nconst accessToken = localStorage.getItem(ACCESS_TOKEN_STORAGE_KEY)\n  const headers: { [key: string]: string } = { 'x-api-key': BUNGIE_API_KEY }\n  if (accessToken) headers.Authorization = `Bearer ${accessToken}`\n  console.log(config)\n  const url = `${config.url}${\n    config.params\n      ? '?' + Object.entries(config.params).map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value as string)}`)\n      : ''\n    }`\n  const response = await fetch(url, { headers })\n  return response.json()\n}\n\nconst MANIFEST_VERSION_KEY = 'MANIFEST_VERSION'\nconst MANIFEST_IDB_KEY = 'MANIFEST_DATA'\ninterface ManifestData {\n  DestinyInventoryItemDefinition: { [key: string]: DestinyInventoryItemDefinition | undefined }\n}\nconst manifestPropertyWhitelist = ['DestinyInventoryItemDefinition']\n\nconst getCachedManifestData = async () => {\n  console.log('Loading manifest data from IDB')\n  const manifestData = await get(MANIFEST_IDB_KEY)\n  console.log('Finished loading manifest data from IDB')\n  return manifestData as ManifestData\n}\n\nconst getRemoteManifestData = async (manifest: DestinyManifest) => {\n  const version = manifest.version\n  console.log('Fetching fresh manifest data')\n  const manifestDataResponse = await fetch(`https://www.bungie.net${manifest.jsonWorldContentPaths.en}`)\n  const manifestData = await manifestDataResponse.json()\n  console.log('Pruning manifest data')\n  Object.keys(manifestData).forEach(key => {\n    if (!manifestPropertyWhitelist.includes(key)) delete manifestData[key]\n  })\n  console.log('Storing manifest data in IDB')\n  await set(MANIFEST_IDB_KEY, manifestData)\n  localStorage.setItem(MANIFEST_VERSION_KEY, version)\n  return manifestData\n}\n\nexport const getManifest = async (): Promise<ManifestData> => {\n  const manifest = await getDestinyManifest(bungieAuthedFetch)\n  const localStorageManifestVersion = localStorage.getItem(MANIFEST_VERSION_KEY)\n  if (manifest.Response.version === localStorageManifestVersion && !window.location.search.includes('updateManifest')) {\n    try {\n      return await getCachedManifestData()\n    } catch (e) {\n      console.error(e)\n    }\n  }\n  return getRemoteManifestData(manifest.Response)\n}","import { getMembershipDataById, BungieMembershipType } from 'bungie-api-ts/user'\r\nimport { bungieAuthedFetch } from './bungie-api';\r\n\r\nconst isDev = process.env.NODE_ENV === 'development'\r\nexport const BUNGIE_API_KEY = isDev ? 'f7f184669f044a89b560fc5f71ed5d60' : 'd94be1e34632448fafdaf77c7afbb501'\r\nconst BUNGIE_OAUTH_AUTHORIZE_URL = 'https://www.bungie.net/en/OAuth/Authorize'\r\nconst BUNGIE_OAUTH_CLIENT_ID = isDev ? '26087' : '27213'\r\nconst BUNGIE_OAUTH_TOKEN_URL = 'https://www.bungie.net/platform/app/oauth/token/'\r\n\r\nexport const ACCESS_TOKEN_STORAGE_KEY = 'bungieAccessToken'\r\nexport const ACCESS_TOKEN_EXPIRY_STORAGE_KEY = 'bungieAccessTokenExpiryTime'\r\nexport const BUNGIE_MEMBERSHIP_ID_STORAGE_KEY = 'bungieMembershipId'\r\nexport const DESTINY_MEMBERSHIP_ID_STORAGE_KEY = 'destinyMembershipId'\r\n\r\nconst clearStorage = () => {\r\n  localStorage.removeItem(ACCESS_TOKEN_STORAGE_KEY);\r\n  localStorage.removeItem(ACCESS_TOKEN_EXPIRY_STORAGE_KEY);\r\n  localStorage.removeItem(BUNGIE_MEMBERSHIP_ID_STORAGE_KEY);\r\n  localStorage.removeItem(DESTINY_MEMBERSHIP_ID_STORAGE_KEY);\r\n}\r\n\r\nconst getAuthUrl = () => `${BUNGIE_OAUTH_AUTHORIZE_URL}?response_type=code&client_id=${BUNGIE_OAUTH_CLIENT_ID}`\r\n\r\nconst redirectToAuth = () => {\r\n  console.log('Redirect to auth')\r\n  clearStorage()\r\n  window.location.replace(getAuthUrl())\r\n}\r\n\r\nconst handleTokenResponse = async (tokenResponse: Response, redirect: boolean = false) => {\r\n  console.log('handleTokenResponse')\r\n  clearStorage()\r\n  if (tokenResponse.status === 200) {\r\n    const data = await tokenResponse.json()\r\n    console.log(data)\r\n    const accessToken = data.access_token as string\r\n    const tokenDuration = data.expires_in as number\r\n    const expiryTime = Date.now() + (tokenDuration * 1000)\r\n    const bungieMembershipId = data.membership_id as string\r\n\r\n    localStorage.setItem(ACCESS_TOKEN_STORAGE_KEY, accessToken)\r\n    localStorage.setItem(ACCESS_TOKEN_EXPIRY_STORAGE_KEY, expiryTime.toString())\r\n    localStorage.setItem(BUNGIE_MEMBERSHIP_ID_STORAGE_KEY, bungieMembershipId)\r\n\r\n    const destinyMemberships = await getMembershipDataById(bungieAuthedFetch, { membershipId: bungieMembershipId, membershipType: 254 })\r\n    const destinyMembershipId = destinyMemberships.Response.destinyMemberships[0].membershipId\r\n    localStorage.setItem(DESTINY_MEMBERSHIP_ID_STORAGE_KEY, destinyMembershipId)\r\n\r\n    return { accessToken, membershipId: destinyMembershipId }\r\n  } else {\r\n    //return redirectToAuth()\r\n  }\r\n}\r\n\r\nconst fetchAuthToken = async (authCode: string) => {\r\n  console.log('fetchAuthToken', authCode)\r\n  clearStorage()\r\n  const tokenResponse = await fetch(BUNGIE_OAUTH_TOKEN_URL, {\r\n    method: 'POST',\r\n    cache: 'no-cache',\r\n    credentials: 'include',\r\n    headers: {\r\n      'Content-Type': 'application/x-www-form-urlencoded'\r\n    },\r\n    redirect: 'follow',\r\n    referrer: 'no-referrer',\r\n    body: `grant_type=authorization_code&code=${authCode}&client_id=${BUNGIE_OAUTH_CLIENT_ID}`\r\n  })\r\n  return await handleTokenResponse(tokenResponse)\r\n}\r\n\r\nexport const hasValidAuth = () => {\r\n  const accessToken = localStorage.getItem(ACCESS_TOKEN_STORAGE_KEY)\r\n  const accessTokenExpiryTime = parseInt(localStorage.getItem(ACCESS_TOKEN_EXPIRY_STORAGE_KEY) || '-1', 10)\r\n  const bungieMembershipId = localStorage.getItem(BUNGIE_MEMBERSHIP_ID_STORAGE_KEY)\r\n  const destinyMembershipId = localStorage.getItem(DESTINY_MEMBERSHIP_ID_STORAGE_KEY)\r\n  if (!accessToken || Date.now() >= accessTokenExpiryTime || !bungieMembershipId || !destinyMembershipId) return false\r\n  return true\r\n}\r\n\r\nexport const auth = async () => {\r\n  const codeRegex = /code=([a-f0-9]+)/\r\n  const codeInQuery = codeRegex.exec(window.location.search)\r\n  let authCode = codeInQuery && codeInQuery[1]\r\n\r\n  if (authCode && !hasValidAuth()) {\r\n    console.log('Fetching access token with auth code')\r\n    await fetchAuthToken(authCode)\r\n    // window.location.search = ''\r\n  }\r\n\r\n  if (!hasValidAuth()) {\r\n    console.log('Redirecting to fresh authentication for missing or expired access token')\r\n    clearStorage()\r\n    return redirectToAuth()\r\n  }\r\n\r\n  const accessToken = localStorage.getItem(ACCESS_TOKEN_STORAGE_KEY) as string\r\n  const membershipId = localStorage.getItem(DESTINY_MEMBERSHIP_ID_STORAGE_KEY) as string\r\n\r\n  return { accessToken, membershipId }\r\n}","import React, { useState, useEffect } from 'react';\n\nimport {\n  getProfile,\n  searchDestinyPlayer,\n  DestinyItemComponent,\n  DestinyItemInstanceComponent,\n  DestinyInventoryItemDefinition,\n\n} from 'bungie-api-ts/destiny2'\n\nimport { auth, hasValidAuth, DESTINY_MEMBERSHIP_ID_STORAGE_KEY } from './bungie-auth';\nimport { getManifest, bungieAuthedFetch } from './bungie-api';\n\nimport './App.css';\n\ntype JoinedItemDefinition = DestinyItemComponent & {\n  instanceData?: DestinyItemInstanceComponent\n  itemDefinition?: DestinyInventoryItemDefinition\n}\ninterface CharacterData {\n  id: string\n  className: string\n  itemsBySlot: { [key: string]: JoinedItemDefinition[] }\n  maxPowerBySlot: PowerBySlot\n  overallPower: number\n}\ninterface PowerBySlot { [key: string]: number }\n\nconst ITEM_SLOTS = {\n  kinetic: 1498876634,\n  energy: 2465295065,\n  power: 953998645,\n  head: 3448274439,\n  gloves: 3551918588,\n  chest: 14239492,\n  legs: 20886954,\n  classItem: 1585787867,\n}\n\nconst getOverallPower = (powerBySlot: PowerBySlot) =>\n  Object.values(powerBySlot)\n    .reduce((sum, power) => sum + power, 0)\n  / Object.keys(ITEM_SLOTS).length\n\nconst getDropEfficiency = (maxPowerBySlot: PowerBySlot, dropPowerIncrease: number = 0) => {\n  const base = getOverallPower(maxPowerBySlot)\n  const dropPower = Math.floor(base + dropPowerIncrease)\n  const overallPerSlotChanges = Object.keys(ITEM_SLOTS)\n    .reduce((changes, slotName) => ({\n      ...changes,\n      [slotName]: Math.max(0, getOverallPower({ ...maxPowerBySlot, [slotName]: dropPower }) - base),\n    }), {} as PowerBySlot)\n  return getOverallPower(overallPerSlotChanges)\n}\n\nconst App = () => {\n\n  const [isAuthed, setIsAuthed] = useState<boolean>(hasValidAuth())\n  useEffect(() => {\n    const doAuth = async () => {\n      const authResult = await auth()\n      if (authResult) setIsAuthed(true)\n    }\n    if (!isAuthed) doAuth()\n  })\n\n  const [isFetchingManifest, setIsFetchingManifest] = useState<boolean>(false)\n  const [isFetchingCharacterData, setIsFetchingCharacterData] = useState<boolean>(false)\n  const [characterData, setCharacterData] = useState<CharacterData[]>([])\n  useEffect(() => {\n    const getCharacterData = async () => {\n\n      if (!isAuthed) return\n\n      setIsFetchingManifest(true)\n      const manifestPromise = getManifest()\n      manifestPromise.finally(() => setIsFetchingManifest(false))\n\n      setIsFetchingCharacterData(true)\n      const destinyMembershipId = localStorage.getItem(DESTINY_MEMBERSHIP_ID_STORAGE_KEY) as string\n      const profile = await getProfile(bungieAuthedFetch, {\n        membershipType: 4,\n        destinyMembershipId,\n        components: [\n          200, // DestinyComponentType.Characters,\n          205, // DestinyComponentType.CharacterEquipment,\n          201, // DestinyComponentType.CharacterInventories,\n          102, // DestinyComponentType.ProfileInventories,\n          300, // DestinyComponentType.ItemInstances,\n          307, // DestinyComponentType.ItemCommonData\n        ]\n      })\n      setIsFetchingCharacterData(false)\n\n      const characters = profile.Response.characters.data\n      const characterEquipments = profile.Response.characterEquipment.data\n      const characterInventories = profile.Response.characterInventories.data\n      const profileInventories = profile.Response.profileInventory.data\n      const itemInstances = profile.Response.itemComponents.instances.data\n\n      const manifest = await manifestPromise\n\n      const CLASS_TYPE_ALL = 3\n      const classNames = ['titan', 'hunter', 'warlock']\n      const ITEM_TYPE_ARMOR = 2\n      const ITEM_TYPE_WEAPON = 3\n\n      if (characters && characterEquipments && characterInventories && profileInventories && itemInstances && manifest) {\n\n        const mergeItems = <T extends { [key: string]: { items: DestinyItemComponent[] } }>(characterItemMap: T) => {\n          return Object.values(characterItemMap)\n            .reduce((allItems, characterItems) => allItems.concat(characterItems.items), [] as DestinyItemComponent[])\n        }\n\n        const allCharacterItems = mergeItems(characterInventories).concat(mergeItems(characterEquipments))\n        const allCharacterWeapons = allCharacterItems.filter(i => {\n          const itemDefinition = i.itemHash && manifest.DestinyInventoryItemDefinition[i.itemHash]\n          return itemDefinition && itemDefinition.itemType === ITEM_TYPE_WEAPON\n        })\n\n        const getCharacterData = (id: string) => {\n          const cData = characters[id]\n          const className = classNames[cData.classType]\n\n          const mapAndFilterItems = (items: DestinyItemComponent[]) => items\n            .map(item => {\n              const instanceData = item.itemInstanceId ? itemInstances[item.itemInstanceId] : undefined\n              const itemDefinition = manifest.DestinyInventoryItemDefinition[item.itemHash]\n              return {\n                ...item,\n                instanceData,\n                itemDefinition,\n              }\n            })\n            .filter(i => i.instanceData && i.itemDefinition && [ITEM_TYPE_ARMOR, ITEM_TYPE_WEAPON].includes(i.itemDefinition.itemType))\n\n          const characterItems = mapAndFilterItems(\n            characterInventories[id].items\n              .concat(characterEquipments[id].items)\n              .concat(allCharacterWeapons)\n          )\n          const profileItems = mapAndFilterItems(profileInventories.items)\n            .filter(i => i.itemDefinition && (i.itemDefinition.classType === CLASS_TYPE_ALL || i.itemDefinition.classType === cData.classType))\n\n          const combinedItems = characterItems.concat(profileItems)\n          const armor = combinedItems.filter(i => i.itemDefinition && i.itemDefinition.itemType === ITEM_TYPE_ARMOR)\n          const weapons = combinedItems.filter(i => i.itemDefinition && i.itemDefinition.itemType === ITEM_TYPE_WEAPON)\n\n          ;(window as any).weapons = weapons\n          ;(window as any).armor = armor\n\n          const itemsBySlot = Object.entries(ITEM_SLOTS)\n            .reduce((slots, [slotName, slotBucketHash]) => ({\n              ...slots,\n              [slotName]: combinedItems\n                .filter(i => i.itemDefinition && i.itemDefinition.inventory.bucketTypeHash === slotBucketHash)\n            }), {} as { [key: string]: JoinedItemDefinition[] })\n\n          const maxPowerBySlot = Object.entries(itemsBySlot)\n            .reduce((slots, [slotName, items]) => {\n              return {\n                ...slots,\n                [slotName]: Math.max(...items\n                  .map(i => i.instanceData ? i.instanceData.primaryStat.value : 0))\n              }\n            }, {} as { [key: string]: number })\n\n          const overallPower = getOverallPower(maxPowerBySlot)\n\n          return {\n            id,\n            className,\n            itemsBySlot,\n            maxPowerBySlot,\n            overallPower,\n          }\n        }\n\n        const characterIds = Object.keys(characters)\n        console.log({ characters, equipments: characterEquipments, inventories: characterInventories })\n        const characterData = characterIds.map(id => getCharacterData(id))\n        setCharacterData(characterData)\n\n        console.log(characterData)\n      }\n\n    }\n    getCharacterData()\n\n  }, [isAuthed])\n\n  interface BarProps {\n    min: number\n    max: number\n    value: number\n    label: string\n  }\n  const Bar = ({ min, max, value, label }: BarProps) => {\n    const range = max - min\n    const perc = Math.floor(((value - min) / range) * 1000) / 10\n    return <div style={{width: '100%', backgroundColor: '#999'}}>\n      <div style={{width: `${perc}%`, backgroundColor: 'red', height: '20px', margin: '1px', color: 'white'}}>{label}</div>\n    </div>\n  }\n\n  let characterDisplay: JSX.Element | null = null\n  if (characterData && characterData.length > 0) {\n    return <div style={{margin: '2em'}}>\n      {characterData.map(c => (\n        <div style={{maxWidth: '400px'}}>\n          <div>{c.className} ({c.overallPower})</div>\n          {Object.entries(c.maxPowerBySlot).map(([slotName, power]) =>\n            <Bar min={650} max={750} value={power} label={`${slotName} (${power})`} />\n          )}\n        </div>\n      ))}\n    </div>\n  }\n\n  return (\n    <div>\n      <div>{isAuthed ? 'Authed' : 'Not authed'}</div>\n      <div>{isFetchingManifest && 'Fetching manifest...'}</div>\n      <div>{isFetchingCharacterData && 'Fetching character data...'}</div>\n      <div>{characterData && characterData.length > 0 ? `Has character data (${characterData.length})` : 'No character data' }</div>\n\n\n\n    </div>\n  )\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}