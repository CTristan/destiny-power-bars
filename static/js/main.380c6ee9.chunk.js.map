{"version":3,"sources":["components/characterDisplay/PowerBars.module.scss","components/characterDisplay/PowerDetails.module.scss","components/CharacterDisplay.module.scss","components/LoadingSpinner.module.scss","services/ga.ts","services/bungie-api.ts","services/bungie-auth.ts","constants.ts","components/characterDisplay/PowerBar.tsx","components/characterDisplay/PowerBars.tsx","services/vendor-engrams.ts","components/characterDisplay/Power.tsx","components/characterDisplay/PowerDetails.tsx","components/characterDisplay/PowerHints.tsx","components/CharacterDisplay.tsx","components/FetchSpinner.tsx","components/LoadingSpinner.tsx","components/MembershipSelect.tsx","components/VendorDisplay.tsx","services/utils.ts","App.tsx","serviceWorker.ts","index.tsx","components/FetchSpinner.module.scss","App.module.scss","components/MembershipSelect.module.scss","components/characterDisplay/PowerHints.module.scss","components/VendorDisplay.module.scss","components/characterDisplay/Power.module.scss","components/characterDisplay/PowerBar.module.scss"],"names":["module","exports","ReactGA","initialize","debug","process","set","anonymizeIp","pageview","window","location","pathname","search","cachedManifestData","getManifestPromise","bungieAuthedFetch","config","a","accessToken","getAccessToken","headers","BUNGIE_API_KEY","Authorization","url","params","Object","entries","map","key","value","encodeURIComponent","fetch","response","json","console","error","manifestPropertyWhitelist","getCachedManifestData","log","get","manifestData","getRemoteManifestData","manifest","Error","version","jsonWorldContentPaths","en","manifestDataResponse","keys","forEach","includes","localStorage","setItem","getManifest","ga","event","category","action","nonInteraction","getDestinyManifest","localStorageManifestVersion","getItem","Response","every","ErrorStatus","undefined","freshManifestData","getBasicProfile","membershipType","membershipId","getProfile","components","destinyMembershipId","getFullProfile","clearStorage","removeItem","handleTokenResponse","tokenResponse","status","data","access_token","tokenDuration","expires_in","expiryTime","Date","now","bungieMembershipId","membership_id","toString","getMembershipDataById","destinyMembershipsResponse","authSuccess","destinyMemberships","JSON","stringify","length","setSelectedDestinyMembership","fetchAuthToken","authCode","body","cache","credentials","method","redirect","referrer","hasValidAuth","accessTokenExpiryTime","parseInt","getDestinyMemberships","destinyMembershipsString","parse","e","message","getSelectedDestinyMembership","destinyMembershipString","membership","auth","queryParams","URLSearchParams","authResponse","replace","origin","ITEM_SLOT_BUCKETS","ITEM_BUCKET_SLOTS","reduce","buckets","slot","bucket","ORDERED_ITEM_SLOTS","ITEM_TYPE_ARMOR","ITEM_TYPE_WEAPON","CLASS_NAMES","PowerBar","min","max","avgValue","label","icon","range","perc","Math","floor","avgPerc","fullLabelText","fullLabel","className","STYLES","classnames","power","belowAverage","slotName","barWrapper","iconWrapper","src","alt","barContainer","filledBar","style","width","barLine","left","vendorEngramsData","vendorEngramsRefreshTimer","vendorEngramsRefreshPromise","classItemNames","hunter","titan","warlock","PowerBars","powerBySlot","slots","topItemBySlot","instanceData","primaryStat","overallPower","roundedPower","minItemPower","values","minPowerToDisplay","maxItemPower","maxItemPowerGrouping","maxPowerToDisplay","ceil","powerBars","powerRange","minPower","rangeLine","maxPower","bars","bestItem","id","chest","classItem","energy","gloves","head","kinetic","legs","itemDefinition","displayProperties","powerLabel","indicator","Power","children","inlinePowerNumber","PowerDetails","artifactData","bonusPower","details","detailsRow","detailsLabel","defailsValue","detailsInlineIcon","iconPath","name","detailsValue","PowerHints","hints","potentialOverallPower","hint","worldDropHint","hintExtra","hintExtraInner","powerRequiredToReachPotential","powerfulHint","pinnacleHint","CharacterDisplay","text","summableArtifactBonusPower","characterDisplay","backgroundColor","red","green","blue","rgbString","character","emblemColor","header","emblemBackground","emblemBackgroundPath","substr","toUpperCase","content","FetchSpinner","fetchSpinnerContainer","anchor","spinner","spinnerSmall","LoadingSpinner","loadingSpinnerContainer","spinnerLarge","MembershipSelect","onMembershipSelect","PLATFORMS","1","2","3","4","membershipSelect","m","onClick","displayName","VENDOR_DISPLAY_NAMES","devrim","sloane","failsafe","asher","zavala","shaxx","banshee","fanboy","bray","werner","refreshVendorEngramsData","jsonData","updateTimestamp","getVendorEngramsData","setInterval","catch","warn","Vendor","vendorInner","shorthand","vendor","manifestVendor","DestinyVendorDefinition","vendorID","high","drop","low","noData","vendorListDisplay","vendors","vendorList","v","vendorListItem","VendorDisplay","useState","vendorData","setVendorData","attemptRefreshVendorData","then","useInterval","useEffect","vendorsLastCheckedString","setVendorsLastCheckedString","newString","HumanizeDuration","round","largest","highVendors","filter","display","noDataVendors","vendorDisplay","section","description","href","target","rel","characterDataRefreshTimer","getAveragePower","sum","getOverallPower","mergeItems","characterItemMap","allItems","characterItems","concat","items","getBasicCharacterData","pendingBasicProfile","profile","characters","getBasicDataForCharacterId","classType","light","characterIds","characterData","mapAndFilterItems","itemInstances","item","itemInstanceId","DestinyInventoryItemDefinition","itemHash","i","itemType","inventory","bucketTypeHash","canEquip","cannotEquipReason","equipRequiredLevel","baseCharacterLevel","isItemEquippableByCharacter","getItemScore","score","isEquipped","getEquipLabel","equippingBlock","uniqueLabel","getDataForCharacterId","characterInventories","characterEquipments","allCharacterWeapons","profileInventories","relevantProfileItems","itemsBySlot","groupBy","mapValues","maxBy","uniqueEquippedGroups","forIn","uniqueEquippedGroup","validItemCombinations","otherItems","otherItem","isCombinationValid","combination","nonExotics","push","bestCombination","sumBy","getPowerBySlot","artifactItemComponent","flatMap","find","artifactDefinition","potentialPowerBySlot","tempPotentialOverallPower","some","averagePower","getCharacterData","setCharacterData","setIsFetchingCharacterData","returnBasicCharacterData","pendingManifest","destinyMembership","shouldSetBasicCharacterData","pendingBasicCharacterData","basicCharacterData","fullProfile","characterEquipment","profileInventory","itemComponents","instances","allCharacterItems","refreshPage","App","isAuthed","setIsAuthed","hasAuthError","setAuthError","hasMembership","setHasMembership","setManifestData","hasManifestError","setManifestError","isFetchingCharacterData","hasManifestData","setTimeout","doAuth","doGetCharacterData","refreshCharacterData","onSelectMembership","charactersContainer","c","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kHACAA,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,8BAA8B,UAAY,6BAA6B,WAAa,8BAA8B,UAAY,+B,mBCAtMD,EAAOC,QAAU,CAAC,QAAU,8BAA8B,WAAa,iCAAiC,aAAe,mCAAmC,kBAAoB,wCAAwC,aAAe,qC,mBCArOD,EAAOC,QAAU,CAAC,iBAAmB,2CAA2C,OAAS,iCAAiC,iBAAmB,2CAA2C,KAAO,+BAA+B,MAAQ,gCAAgC,QAAU,oC,mBCAhRD,EAAOC,QAAU,CAAC,OAAS,+BAA+B,QAAU,gCAAgC,KAAO,6BAA6B,wBAA0B,gDAAgD,aAAe,qCAAqC,aAAe,qCAAqC,OAAS,iC,yICCnUC,IAAQC,WAAW,iBAAkB,CACnCC,OAAOC,IAITH,IAAQI,IAAI,CAAEC,aAAa,IAC3BL,IAAQM,SAASC,OAAOC,SAASC,SAAWF,OAAOC,SAASE,QAE7CV,IC0EXW,EACAC,E,ED3EWZ,IAAf,E,wBCGaa,EAAiB,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,sEAEvBC,EAAcC,IACdC,EAAqC,CAAE,YAAaC,GACtDH,IACFE,EAAQE,cAAR,iBAAkCJ,IAE9BK,EAPuB,UAOdP,EAAOO,KAPO,OAQ3BP,EAAOQ,OACH,IACAC,OAAOC,QAAQV,EAAOQ,QAAQG,KAC5B,mCAAEC,EAAF,KAAOC,EAAP,qBACKC,mBAAmBF,GADxB,YACgCE,mBAC5BD,OAGN,IAhBuB,SAkBNE,MAAMR,EAAK,CAAEH,YAlBP,cAkBvBY,EAlBuB,iBAmBhBA,EAASC,OAnBO,kFAqB7BC,QAAQC,MAAR,MArB6B,kBAsBtB,IAtBsB,0DAAH,sDAqCxBC,EAA4B,CAChC,iCACA,2BAGIC,EAAqB,uCAAG,4BAAApB,EAAA,6DAC5BiB,QAAQI,IAAI,kCADgB,SAEDC,YAjBJ,iBAeK,cAEtBC,EAFsB,OAG5BN,QAAQI,IAAI,2CAHgB,kBAIrBE,GAJqB,2CAAH,qDAOrBC,EAAqB,uCAAG,WAAOC,GAAP,mBAAAzB,EAAA,yDACvByB,EADuB,sBAEpBC,MAAM,gBAFc,cAItBC,EAAUF,EAASE,QACzBV,QAAQI,IAAI,gCALgB,SAMOP,MAAM,yBAAD,OACbW,EAASG,sBAAsBC,KAP9B,cAMtBC,EANsB,gBASDA,EAAqBd,OATpB,cAStBO,EATsB,OAU5BN,QAAQI,IAAI,yBACZb,OAAOuB,KAAKR,GAAcS,SAAQ,SAAArB,GAC3BQ,EAA0Bc,SAAStB,WAC/BY,EAAaZ,MAGxBM,QAAQI,IAAI,gCAhBgB,UAiBtBhC,YAvCiB,gBAuCKkC,GAjBA,eAkB5BW,aAAaC,QAzCc,mBAyCgBR,GAlBf,kBAmBrBJ,GAnBqB,4CAAH,sDAyBda,EAAW,uCAAG,sBAAApC,EAAA,6DACpBH,IACHA,EAAqB,sBAAC,gCAAAG,EAAA,6DACpBqC,EAAGC,MAAM,CACPC,SAAU,OACVC,OAAQ,wBACRC,gBAAgB,IAJE,SAMGC,6BAAmB5C,GANtB,UAMd2B,EANc,OAOdkB,EAA8BT,aAAaU,QAzD1B,qBA6DrBnB,IACAA,EAASoB,UACTpB,EAASoB,SAASlB,UAAYgB,GAC7BnD,OAAOC,SAASE,OAAOsC,SAAS,kBAdf,oBAgBbrC,EAhBa,iCAiBWwB,IAjBX,OAiBhBxB,EAjBgB,mBAoBhBA,IACAuB,EAA0B2B,OACxB,SAAAnC,GAAG,OAAIf,KAAwBA,EAAmBe,MAtBpC,0CAyBTf,GAzBS,YA6BlB6B,IACAA,EAASsB,aACgB,YAAzBtB,EAASsB,YA/BS,uBAiClBV,EAAGC,MAAM,CACPC,SAAU,SACVC,OAAO,iBAAD,OAAmBf,EAASsB,YAA5B,oCACNN,gBAAgB,IAEZf,MAAM,iBAAD,OACQD,EAASsB,YADjB,qCAtCO,WA0CftB,GAAaA,EAASoB,SA1CP,uBA2CZnB,MAAM,yBA3CM,eA6CpB9B,OAAqBoD,EACrBX,EAAGC,MAAM,CACPC,SAAU,OACVC,OAAQ,wBACRC,gBAAgB,IAjDE,UAmDYjB,EAAsBC,EAASoB,UAnD3C,eAmDdI,EAnDc,OAoDpBrD,EAAqBqD,EApDD,kBAqDbA,GArDa,2CAAD,IAFE,kBA0DlBpD,GA1DkB,2CAAH,qDA6DXqD,EAAkB,SAC7BC,EACAC,GAOA,OALAf,EAAGC,MAAM,CACPC,SAAU,iBACVC,OAAQ,wBACRC,gBAAgB,IAEXY,qBAAWvD,EAAmB,CACnCwD,WAAY,CACV,IACA,KAEFC,oBAAqBH,EACrBD,oBAISK,EAAiB,SAC5BL,EACAC,GAOA,OALAf,EAAGC,MAAM,CACPC,SAAU,iBACVC,OAAQ,qBACRC,gBAAgB,IAEXY,qBAAWvD,EAAmB,CACnCwD,WAAY,CACV,IACA,IACA,IACA,IACA,KAEFC,oBAAqBH,EACrBD,oBCpLS/C,EAET,mCAYEqD,EAAe,WACnBvB,aAAawB,WAPkB,qBAQ/BxB,aAAawB,WAPyB,+BAQtCxB,aAAawB,WAP0B,sBAQvCxB,aAAawB,WAPyB,sBAQtCxB,aAAawB,WAPwB,sBAwBjCC,EAAmB,uCAAG,WAC1BC,GAD0B,uCAAA5D,EAAA,yFAI1BiB,QAAQI,IAAI,uBACZoC,IAC6B,MAAzBG,EAAcC,OANQ,iCAOLD,EAAc5C,OAPT,cAOlB8C,EAPkB,OAQlB7D,EAAc6D,EAAKC,aACnBC,EAAgBF,EAAKG,WACrBC,EAAaC,KAAKC,MAAwB,IAAhBJ,EAC1BK,EAAqBP,EAAKQ,cAEhCpC,aAAaC,QAzCgB,oBAyCkBlC,GAC/CiC,aAAaC,QAzCuB,8BA2ClC+B,EAAWK,YAEbrC,aAAaC,QA5CwB,qBA4CkBkC,GAlB/B,UAqBiBG,gCACvC1E,EACA,CAAEsD,aAAciB,EAAoBlB,eAAgB,MAvB9B,YAqBlBsB,EArBkB,SA4BrBA,EAA2B5B,YAC3B4B,EAA2B1B,aACiB,YAA3C0B,EAA2B1B,aA9BP,wBAgCtBV,EAAGC,MAAM,CACPC,SAAU,SACVC,OAAO,2CAAD,OAA6CiC,EAA2B1B,aAC9EN,gBAAgB,IAnCI,kBAqCf,CACLiC,aAAa,EACbxD,MAAM,eAAD,OAAiBuD,EAA2B1B,YAA5C,gCAvCe,eA2ClB4B,EACJF,EAA2B5B,SAAS8B,mBACtCzC,aAAaC,QAtEuB,qBAwElCyC,KAAKC,UAAUF,IAIiB,IAA9BA,EAAmBG,QACrBC,EAA6BJ,EAAmB,IApD1B,kBAuDjB,CAAE1E,cAAayE,aAAa,IAvDX,WAyDK,MAAzBd,EAAcC,OAzDM,wBA0DtBxB,EAAGC,MAAM,CACPC,SAAU,OACVC,OAAO,eAAD,OAAiBoB,EAAcC,OAA/B,gCACNpB,gBAAgB,IA7DI,kBA+Df,CACLiC,aAAa,EACbxD,MAAM,eAAD,OAAiB0C,EAAcC,OAA/B,kCAjEe,4CAAH,sDAwEnBmB,EAAc,uCAAG,WAAOC,GAAP,eAAAjF,EAAA,6DACrBiB,QAAQI,IAAI,iBAAkB4D,GAC9BxB,IACApB,EAAGC,MAAM,CACPC,SAAU,OACVC,OAAQ,sBACRC,gBAAgB,IANG,SAQO3B,MA9G5B,mDA8G0D,CACxDoE,KAAK,sCAAD,OAAwCD,EAAxC,sBAjHyC,SAkH7CE,MAAO,WACPC,YAAa,UACbjF,QAAS,CACP,eAAgB,qCAElBkF,OAAQ,OACRC,SAAU,SACVC,SAAU,gBAjBS,cAQf3B,EARe,gBAmBRD,EAAoBC,GAnBZ,mFAAH,sDAsBP1D,EAAiB,WAC5B,OAAOgC,aAAaU,QA3HW,sBA8HpB4C,EAAe,WAC1B,IAAMvF,EAAcC,IACduF,EAAwBC,SAC5BxD,aAAaU,QAhIuB,gCAgIqB,KACzD,IAEIyB,EAAqBnC,aAAaU,QAlID,sBAqIvC,SACG3C,GACDkE,KAAKC,OAASqB,IACbpB,IAOQsB,EAAwB,WACnC,IAAMC,EAA2B1D,aAAaU,QA/IR,sBAkJtC,IACE,GAAIgD,EACF,OAAOhB,KAAKiB,MAAMD,GAEpB,MAAOE,GACPzD,EAAGC,MAAM,CACPC,SAAU,OACVC,OAAQ,uDACRC,gBAAgB,IAElBxB,QAAQC,MAAR,oCAAmD4E,EAAEC,WAS5CC,EAA+B,WAC1C,IAAMC,EAA0B/D,aAAaU,QArKR,qBAwKrC,IACE,GAAIqD,EACF,OAAOrB,KAAKiB,MAAMI,GAEpB,MAAOH,GACPzD,EAAGC,MAAM,CACPC,SAAU,OACVC,OAAQ,sDACRC,gBAAgB,IAElBxB,QAAQC,MAAM,mCAAoC4E,EAAEC,WAS3ChB,EAA+B,SAACmB,GAC3ChE,aAAaC,QA5LwB,oBA8LnCyC,KAAKC,UAAUqB,KAINC,EAAI,uCAAG,gCAAAnG,EAAA,yDACZoG,EAAc,IAAIC,gBAAgB7G,OAAOC,SAASE,UAClDsF,EAAWmB,EAAY9E,IAAI,UAEhBkE,IAJC,wBAKhBvE,QAAQI,IAAI,wCALI,SAMW2D,EAAeC,GAN1B,YAMVqB,EANU,UAOiC,IAA7BA,EAAa5B,YAPjB,wBAQdzD,QAAQC,MAAMoF,EAAapF,OARb,mBASP,GATO,WAad+D,GACFzF,OAAOC,SAAS8G,QAAhB,UACK/G,OAAOC,SAAS+G,QADrB,OAC8BhH,OAAOC,SAASC,YAI5C8F,MApDKG,IAiCS,2CAoBT,GApBS,QAuBlBtD,EAAGC,MAAM,CACPC,SAAU,SACVC,OAAQ,oCACRC,gBAAgB,IAElBxB,QAAQI,IACN,2GAEFoC,IAnNAxC,QAAQI,IAAI,oBACZoC,IACApB,EAAGC,MAAM,CACPC,SAAU,OACVC,OAAQ,oBACRC,gBAAgB,IAElBjD,OAAOC,SAAS8G,QAXC,UAnBgB,4CAmBhB,yCAlB8B,UA0M7B,4CAAH,qD,8QCnNV,IASME,GAAiB,mBATG,UAUV,YADO,cARE,SAUV,YAFQ,cAPC,QAUV,WAHS,cANA,OAUV,YAJU,cALE,SAUV,YALQ,cAJC,QAUV,UANS,cAHA,OAUV,UAPU,cAFM,YAUV,YARI,GAWjBC,EAAoBlG,OAAOC,QAAQgG,GAAmBE,QACjE,SAACC,EAAD,0BAAWC,EAAX,KAAiBC,EAAjB,Y,yVAAA,IAAmCF,EAAnC,eAA6CE,EAASD,MACtD,IAgBWE,EAAkB,UAbQ,CAzBN,UACD,SACD,SA4BM,CA3BP,OACE,SACD,QACD,OACM,cAsCvBC,EAAkB,EAClBC,EAAmB,EAQnBC,EAAc,CAJA,QACC,SACC,W,gBCtChBC,EAAW,SAAC,GAOR,IAAD,EANdC,EAMc,EANdA,IACAC,EAKc,EALdA,IACAzG,EAIc,EAJdA,MACA0G,EAGc,EAHdA,SACAC,EAEc,EAFdA,MACAC,EACc,EADdA,KAEMC,EAAQJ,EAAMD,EACdM,EAAOC,KAAKC,OAAQhH,EAAQwG,GAAOK,EAAS,KAAQ,GACpDI,EAAUF,KAAKC,OAAQN,EAAWF,GAAOK,EAAS,KAAQ,GAG1DK,EAAa,UAAMlH,EAAN,YAAe2G,GAC5BQ,EACJ,0BAAMC,UAAWC,IAAOV,OACtB,0BACES,UAAWE,IAAWD,IAAOE,OAAR,mBAClBF,IAAOZ,IAAMzG,GAASyG,GADJ,cAElBY,IAAOG,aAAexH,EAAQ0G,GAFZ,KAKpB1G,GAEH,0BAAMoH,UAAWC,IAAOI,UAAWd,IAGvC,OACE,yBAAKS,UAAWC,IAAOK,YACrB,yBAAKN,UAAWC,IAAOM,aACpBf,GACC,yBACEQ,UAAWC,IAAOT,KAClBgB,IAAG,gCAA2BhB,GAC9BiB,IAAKX,KAIX,yBAAKE,UAAWC,IAAOS,cACrB,yBAAKV,UAAWC,IAAOU,UAAWC,MAAO,CAAEC,MAAM,GAAD,OAAKnB,EAAL,OAC7CK,GAEH,yBAAKC,UAAWC,IAAOa,QAASF,MAAO,CAAEG,KAAK,GAAD,OAAKlB,EAAL,W,gPCjDrD,ICgCImB,GACAC,GACAC,GDlCEC,GAA4C,CAChDC,OAAQ,eACRC,MAAO,aACPC,QAAS,gBAeEC,GAAY,SAACzF,GAExB,IAAM0F,EAAczC,EAAmBJ,QACrC,SAAC8C,EAAOpB,GAAR,O,2VAAA,IACKoB,EADL,eAEGpB,EAAWvE,EAAK4F,cACb5F,EAAK4F,cAAcrB,GAAUsB,aAAaC,YAAYhJ,MACtDkD,EAAK+F,iBAEX,IAGIC,EAAenC,KAAKC,MAAM9D,EAAK+F,cAE/BE,EAAepC,KAAKP,IAAL,MAAAO,KAAI,YAAQnH,OAAOwJ,OAAOR,KACzCS,EAAoBtC,KAAKN,IACG,GAAhCM,KAAKC,MAAMmC,EAAe,IAAW,GACrC,GAEIG,EAAevC,KAAKN,IAAL,MAAAM,KAAI,YAAQnH,OAAOwJ,OAAOR,KACzCW,EAAuBD,GAAgB,IAAM,GAAK,GAClDE,EACJzC,KAAK0C,KAAKH,EAAeC,GAAwBA,EAE7C1C,EAAQ2C,EAAoBH,EAC5BvC,EACJC,KAAKC,OAAQkC,EAAeG,GAAqBxC,EAAS,KAAQ,GAEpE,OACE,yBAAKO,UAAWC,IAAOqC,WACrB,yBAAKtC,UAAWC,IAAOsC,YACrB,yBAAKvC,UAAWC,IAAOuC,UAAWP,GAClC,yBAAKjC,UAAWC,IAAOwC,YACvB,yBAAKzC,UAAWC,IAAOyC,UAAWN,IAEpC,yBAAKpC,UAAWC,IAAO0C,MACpBnK,OAAOC,QAAQ+I,GAAa9I,KAAI,YAAwB,IAjD1CsH,EAiDyC,mBAArBK,EAAqB,KAAXF,EAAW,KAChDyC,EAAW9G,EAAK4F,eAAiB5F,EAAK4F,cAAcrB,GAC1D,OACE,kBAAC,EAAD,CACE1H,IAAG,UAAKmD,EAAK+G,GAAV,YAAgBxC,GACnBjB,IAAK6C,EACL5C,IAAK+C,EACLxJ,MAAOuH,EACPb,SAAUwC,EACVvC,OA1DSS,EA0DYlE,EAAKkE,UA1DiC,CACvE8C,MAAO,cACPC,UAAW5B,GAAenB,GAC1BgD,OAAQ,gBACRC,OAAQ,YACRC,KAAM,SACNC,QAAS,iBACTC,KAAM,YACNjD,MAAO,iBAkD0CE,IAAaA,EAClDb,KACEoD,GACAA,EAASS,gBACTT,EAASS,eAAeC,kBAAkB9D,WAMpD,yBAAKQ,UAAWC,IAAOsD,YACrB,yBAAKvD,UAAWC,IAAOuD,UAAW5C,MAAO,CAAEG,KAAK,GAAD,OAAKrB,EAAL,OAC5CoC,M,wCE3EE2B,GAAQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACnB,0BAAM1D,UAAWC,KAAO0D,mBAAoBD,ICcjCE,GAAe,SAAC9H,GAC3B,IAjBgBlD,EAiBVkJ,EAAenC,KAAKC,MAAM9D,EAAK+F,cAQrC,OAAK/F,EAAK+H,cAAiD,IAAjC/H,EAAK+H,aAAaC,WAK1C,yBAAK9D,UAAWC,KAAO8D,SACrB,yBAAK/D,UAAWC,KAAO+D,YACrB,yBAAKhE,UAAWC,KAAOgE,cAAvB,kCAGA,yBAAKjE,UAAWC,KAAOiE,cACrB,kBAAC,GAAD,KAAQpC,KAGXhG,EAAK+H,aACJ,oCACE,yBAAK7D,UAAWC,KAAO+D,YACrB,yBAAKhE,UAAWC,KAAOgE,cACrB,yBACEjE,UAAWC,KAAOkE,kBAClB3D,IAAG,gCAA2B1E,EAAK+H,aAAaO,UAChD3D,IAAI,KAEL3E,EAAK+H,aAAaQ,KANrB,iBAQA,yBAAKrE,UAAWC,KAAOqE,cACrB,kBAAC,GAAD,MAnDI1L,EAmDakD,EAAK+H,aAAaC,aAlDlC,EACL,IAAN,OAAWlL,GAEP,GAAN,OAAUA,OA0DF,MApCC,M,mBCnBE2L,GAAa,SAACzI,GACzB,OACE,yBAAKkE,UAAWC,KAAOuE,OACpB1I,EAAK2I,uBACN3I,EAAK2I,sBAAwB3I,EAAK+F,aAChC,yBAAK7B,UAAWE,IAAWD,KAAOyE,KAAMzE,KAAO0E,gBAC7C,oFACsD,IACpD,kBAAC,GAAD,KAAQ7I,EAAK2I,wBAEf,yBAAKzE,UAAWC,KAAO2E,WACrB,yBAAK5E,UAAWC,KAAO4E,gBACrB,mJAEsD,IACpD,kBAAC,GAAD,KAAQ/I,EAAK+F,aAAe,GAH9B,MAG4C,IAC1C,kBAAC,GAAD,KAAQ/F,EAAK+F,cAJf,wBAMA,8HAIC/F,EAAKgJ,8BACJ,iDACoB,IAClB,kBAAC,GAAD,KAAQhJ,EAAKgJ,+BAFf,0DAGmD,IACjD,kBAAC,GAAD,KAAQhJ,EAAK2I,uBAJf,KAME,QAIR,KAEH3I,EAAK2I,wBAA0B3I,EAAK+F,cACrC/F,EAAK+F,cAAgB,KACrB/F,EAAK+F,aAAe,IAClB,yBAAK7B,UAAWE,IAAWD,KAAOyE,KAAMzE,KAAO8E,eAC7C,iHAEkB,kBAAC,GAAD,KAAQ,MAE1B,yBAAK/E,UAAWC,KAAO2E,WACrB,yBAAK5E,UAAWC,KAAO4E,gBACrB,0LAG6B,kBAAC,GAAD,KAAQ,KAHrC,KAKA,uHAIA,uHAIA,8GAIA,0LAQJ,KAEH/I,EAAK2I,wBAA0B3I,EAAK+F,cACrC/F,EAAK+F,cAAgB,KACrB/F,EAAK+F,aAAe,IAClB,yBAAK7B,UAAWE,IAAWD,KAAOyE,KAAMzE,KAAO+E,eAC7C,iHAEkB,kBAAC,GAAD,KAAQ,MAE1B,yBAAKhF,UAAWC,KAAO2E,WACrB,yBAAK5E,UAAWC,KAAO4E,gBACrB,2JAE+D,IAC7D,kBAAC,GAAD,KAAQ,KAHV,QAQJ,OCvCKI,GAhDU,SAAC,GAAqC,IAH5CC,EAGSpJ,EAAkC,EAAlCA,KAWpBgG,EAAenC,KAAKC,MAAM9D,EAAK+F,cAE/BsD,EAA6BrJ,EAAK+H,aACpC/H,EAAK+H,aAAaC,WAClB,EAEJ,OACE,yBACE9D,UAAWE,IACTD,IAAOmF,iBACPnF,IAAO,SAAD,OAAUnE,EAAKkE,aAEvBY,MAAO,CAAEyE,gBAtBK,SAAC,GAAD,IAChBC,EADgB,EAChBA,IACAC,EAFgB,EAEhBA,MACAC,EAHgB,EAGhBA,KAHgB,oBAQLF,EARK,YAQEC,EARF,YAQWC,EARX,KAsBYC,CAAU3J,EAAK4J,UAAUC,eAEnD,yBAAK3F,UAAWC,IAAO2F,QACrB,yBACE5F,UAAWC,IAAO4F,iBAClBrF,IAAG,gCAA2B1E,EAAK4J,UAAUI,sBAC7CrF,IAAI,KAEN,yBAAKT,UAAWC,IAAOoE,OAlCZa,EAkC6BpJ,EAAKkE,WAjC9C+F,OAAO,EAAG,GAAGC,cAAgBd,EAAKa,OAAO,IAkCxC,yBAAK/F,UAAWC,IAAOE,OACpB2B,EAAeqD,IAIpB,yBAAKnF,UAAWC,IAAOgG,SACrB,kBAAC,GAAiBnK,GAElB,kBAAC,GAAcA,GAEf,kBAAC,GAAeA,M,oBC7CToK,GATM,kBACnB,yBAAKlG,UAAWC,KAAOkG,uBACrB,yBAAKnG,UAAWC,KAAOmG,QACrB,yBAAKpG,UAAWC,KAAOoG,UACvB,yBAAKrG,UAAWC,KAAOqG,kB,oBCYdC,GAZQ,SAAC,GAAuC,IAArC7C,EAAoC,EAApCA,SACxB,OACE,yBAAK1D,UAAWC,KAAOuG,yBACrB,yBAAKxG,UAAWC,KAAOmG,QACrB,yBAAKpG,UAAWC,KAAOwG,eACvB,yBAAKzG,UAAWC,KAAOqG,eACvB,yBAAKtG,UAAWC,KAAOpE,QAAS6H,M,oBCmCzBgD,GAtCU,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,mBACpBhK,EAAqBgB,IAE3B,IAAKhB,EACH,OAAO,KAGT,GAAkC,IAA9BA,EAAmBG,OACrB,OAAO,wDAGT,IAAM8J,EAAuC,CAC3CC,EAAG,OACHC,EAAG,MACHC,EAAG,QACHC,EAAG,YAGL,OACE,yBAAKhH,UAAWC,KAAOgH,kBACpBtK,EAAmBjE,KAAI,SAAAwO,GACtB,OACE,yBACEvO,IAAKuO,EAAE9L,aACP4E,UAAWE,IACTD,KAAO/B,WACP+B,KAAO,YAAD,OAAa2G,EAAUM,EAAE/L,mBAEjCgM,QAAS,kBAAMR,EAAmBO,KAEjCA,EAAEE,kB,6BPpBTC,GAAwD,CAC5DC,OAAQ,mBACRC,OAAQ,iBACRC,SAAU,oBACVC,MAAO,iBACPC,OAAQ,2BACRC,MAAO,0BACPC,QAAS,+BAGTC,OAAQ,0BACRC,KAAM,kBACNC,OAAQ,sCAYJC,GAAwB,uCAAG,kCAAAhQ,EAAA,sEACRc,MA7CvB,gDA4C+B,cACzBC,EADyB,gBAEPA,EAASC,OAFF,cAEzBiP,EAFyB,OAGzBC,EAAkB/L,KAAKC,MAE7B4E,GADMlF,EAAO,CAAEA,KAAMmM,EAAUC,mBAJA,kBAMxBpM,GANwB,4CAAH,qDASjBqM,GAAoB,uCAAG,sBAAAnQ,EAAA,0DAC9BgJ,GAD8B,yCAEzBA,IAFyB,cAI7BE,KACHA,GAA8B8G,MAE3B/G,KACHA,GAA4BmH,aAAY,WACtCJ,KAA2BK,OAAM,SAAAvK,GAAC,OAChC7E,QAAQqP,KAAK,0CAA2CxK,QArB3B,MAWD,kBAc3BoD,IAd2B,2CAAH,qD,mBQ9B3BqH,GAAS,SAAC,GAA2C,IAAD,EAEpDC,ERS+BC,EQXnBC,EAAwC,EAAxCA,OACVC,EADkD,EAAhCpP,aACYqP,wBAAwBF,EAAOG,UAiBnE,OAdKF,EAGHH,EACE,oCACE,yBACExI,UAAWC,KAAOT,KAClBgB,IAAG,gCAA2BmI,EAAerF,kBAAkB9D,MAC/DiB,IAAI,KAELkI,EAAerF,kBAAkBe,ORHLoE,EQNEC,EAAOD,UAA1CD,EROKnB,GAAqBoB,IAAcA,GQOxC,yBACEzI,UAAWE,IAAWD,KAAOyI,QAAR,mBAClBzI,KAAO6I,KR1BwB,MQ0BjBJ,EAAOK,MADH,cAElB9I,KAAO+I,IR5BuB,MQ4BjBN,EAAOK,MAFF,cAGlB9I,KAAOgJ,OR9B2B,MQ8BlBP,EAAOK,MAHL,KAMpBP,IAKDU,GAAoB,SACxBC,EACA5P,GAEA,OACE,wBAAIyG,UAAWC,KAAOmJ,YACnBD,EAAQzQ,KAAI,SAAA2Q,GAAC,OACZ,wBAAIrJ,UAAWC,KAAOqJ,eAAgB3Q,IAAK0Q,EAAEZ,WAC3C,kBAAC,GAAD,CAAQlP,aAAcA,EAAcmP,OAAQW,UAWzCE,GAAgB,SAAC,GAA0C,IAAxChQ,EAAuC,EAAvCA,aAAuC,EACjCiQ,wBAClCxO,GAFmE,mBAC9DyO,EAD8D,KAClDC,EADkD,KAK/DC,EAA2B,WAC/BxB,KACGyB,MAAK,SAAA9N,GAAI,OAAI4N,EAAc5N,MAC3BuM,OAAM,SAAAvK,GAAC,OAAI7E,QAAQqP,KAAR,sCAAoDxK,OAEpE+L,aAAYF,EAlE4B,KAmExCG,oBAAUH,EAA0B,IAXiC,MAaLH,mBAE9D,MAfmE,mBAa9DO,EAb8D,KAapCC,EAboC,KAiCrE,GAhBAH,cAAY,WACV,GAAKJ,EAAL,CAKA,IAAMQ,EAAYC,KAChBT,EAAWvB,gBAAkB/L,KAAKC,MAClC,CACE+N,OAAO,EACPC,QAAS,IAGbJ,EAA4BC,QAX1BD,EAA4B,QAY7B,MAEEzQ,EACH,OAAO,KAGT,IAAM8Q,EACHZ,GACCA,EAAW3N,KAAKwO,QACd,SAAAjB,GAAC,MR/F+B,MQ+F3BA,EAAEN,MAAmD,MAAdM,EAAEkB,YAElD,GAEIC,EACHf,GACCA,EAAW3N,KAAKwO,QACd,SAAAjB,GAAC,MRxGkC,MQwG9BA,EAAEN,MAAsD,MAAdM,EAAEkB,YAErD,GAEF,OAAKd,EAKH,yBAAKzJ,UAAWC,KAAOwK,eACpBJ,EAAYvN,OAAS,GACpB,yBAAKkD,UAAWC,KAAOyK,SACrB,yBAAK1K,UAAWC,KAAO0K,aAAvB,yJAKCzB,GAAkBmB,EAAa9Q,IAGnCiR,EAAc1N,OAAS,GACtB,yBAAKkD,UAAWC,KAAOyK,SACrB,yBAAK1K,UAAWC,KAAO0K,aAAvB,uCACuC,IACrC,uBACEC,KAAK,gCAELC,OAAO,SACPC,IAAI,YAJN,qBAOK,IATP,mDAYC5B,GAAkBsB,EAAejR,IAItC,yBAAKyG,UAAWC,KAAOyK,SACrB,gDACmB,IACjB,uBACEE,KAAK,gCAELC,OAAO,SACPC,IAAI,YAJN,qBAQCf,GACC,sDAAkBA,EAAlB,YA7CD,M,iqBCzFX,ICZIgB,GDeEC,GAAkB,SAACxJ,GAAD,OACtBhJ,OAAOwJ,OAAOR,GAAa7C,QAAO,SAACsM,EAAK9K,GAAN,OAAgB8K,EAAM9K,IAAO,GAC/D3H,OAAOuB,KAAK0E,GAAmB3B,QAC3BoO,GAAkB,SAAC1J,GAAD,OACtB7B,KAAKC,MAAMoL,GAAgBxJ,KAEvB2J,GAAa,SAGjBC,GAEA,OAAO5S,OAAOwJ,OAAOoJ,GAAkBzM,QACrC,SAAC0M,EAAUC,GAAX,OAA8BD,EAASE,OAAOD,EAAeE,SAC7D,KA2BEC,GAAqB,uCAAG,WAC5BC,GAD4B,uBAAA1T,EAAA,sEAGN0T,EAHM,WAGtBC,EAHsB,SAIXA,EAAQ9Q,UAAa8Q,EAAQ9Q,SAAS+Q,WAJ3B,sDAOtBA,EAAaD,EAAQ9Q,SAAS+Q,WAAW9P,MAPnB,wBAUpB+P,EAA6B,SAAChJ,GAClC,IAAM6C,EAAYkG,EAAW/I,GAE7B,MAAO,CACL6C,YACA1F,UAHgBd,EAAYwG,EAAUoG,WAItCjJ,KACAhB,aAAc6D,EAAUqG,QAItBC,EAAexT,OAAOuB,KAAK6R,GAC3BK,EAAgBD,EAAatT,KAAI,SAAAmK,GAAE,OACvCgJ,EAA2BhJ,MAvBH,kBAyBnBoJ,GAzBmB,4CAAH,sDAiCrBC,GAAoB,SACxBV,EACA/R,EACA0S,EACAzG,GAJwB,OAMxB8F,EACG9S,KAAI,SAAA0T,GAMH,OAAO,MACFA,EADL,CAEEzK,aAPmByK,EAAKC,eACtBF,EAAcC,EAAKC,qBACnBrR,EAMFqI,eAJA5J,EAAS6S,+BAA+BF,EAAKG,eAOhDjC,QACC,SAAAkC,GAAC,OACCA,EAAE7K,cACF6K,EAAEnJ,gBACF,CAACrE,EAAiBC,GAAkBhF,SAASuS,EAAEnJ,eAAeoJ,aAEjE/T,KAAI,SAAA8T,GAAC,aACDA,EADC,CAEJ7K,aAAc6K,EAAE7K,aAChB0B,eAAgBmJ,EAAEnJ,oBAEnB3K,KAAI,SAAA8T,GAAC,aACDA,EADC,CAEJnM,SAAU3B,EAAkB8N,EAAEnJ,eAAeqJ,UAAUC,qBAExDrC,QAAO,SAAAkC,GAAC,OA1FuB,SAClCJ,EACA1G,GAEA,QAAI0G,EAAKzK,aAAaiL,WAGsB,KAAxCR,EAAKzK,aAAakL,qBAGlBT,EAAKzK,aAAamL,mBAAqBpH,EAAUqH,sBZnBzB,IYuB1BX,EAAK/I,eAAeyI,WACpBM,EAAK/I,eAAeyI,YAAcpG,EAAUoG,YA2E/BkB,CAA4BR,EAAG9G,OAE1CuH,GAAe,SAACb,GACpB,IAAKA,IAASA,EAAKzK,eAAiByK,EAAKzK,aAAaC,YACpD,OAAO,EAET,IAAIsL,EAAQd,EAAKzK,aAAaC,YAAYhJ,MAO1C,OANIwT,EAAKzK,aAAawL,aACpBD,GAAS,IAEW,IAAlBd,EAAK3U,WACPyV,GAAS,KAEJA,GAGHE,GAAgB,SAAChB,GAAD,OACpBA,EAAK/I,eAAegK,eAAeC,aAE/BC,GAAwB,SAC5B1K,EACA+I,EACAO,EACA1S,EACA+T,EACAC,EACAC,EACAC,GAEA,IAAMjI,EAAYkG,EAAW/I,GACvB7C,EAAYd,EAAYwG,EAAUoG,WAElCR,EAAiBY,GACrBsB,EAAqB3K,GAAI2I,MACtBD,OAAOkC,EAAoB5K,GAAI2I,OAC/BD,OAAOmC,GACVjU,EACA0S,EACAzG,GAEIkI,EAAuB1B,GAC3ByB,EAAmBnC,MACnB/R,EACA0S,EACAzG,GACA4E,QACA,SAAAkC,GAAC,OZjJyB,IYkJxBA,EAAEnJ,eAAeyI,WACjBU,EAAEnJ,eAAeyI,YAAcpG,EAAUoG,aAGvCT,EAAWC,EAAeC,OAAOqC,GAGjCC,EAAcC,KAAQzC,GAAU,SAAAmB,GAAC,OAAIA,EAAEnM,YAEzCqB,EAAgBqM,KAClBF,GACA,SAAArC,GAAK,OAAIwC,KAAMxC,EAAOyB,OAGlBgB,EAAuBH,KAC3BtV,OAAOwJ,OAAON,GAAe4I,OAAO8C,IACpCA,IAGFc,KAAMD,GAAsB,SAAAE,GAC1B,KAAIA,EAAoBrR,QAAU,GAAlC,CAIA,IAAMsR,EAAsC,GA2B5C,GAzBAD,EAAoBnU,SAAQ,SAAAoS,GAC1B,IAAMiC,EAAaF,EAAoB7D,QACrC,SAAAgE,GAAS,OAAIA,IAAclC,KAEzBmC,GAAqB,EACnBC,EAAW,MAAQ9M,GACzB2M,EAAWrU,SAAQ,SAAAsU,GAEjB,IAAMG,EAAaZ,EAAYS,EAAUjO,UAAUiK,QACjD,SAAAkC,GAAC,OAAKY,GAAcZ,MAElBiC,EAAW3R,OAAS,EAEtB0R,EAAYF,EAAUjO,UAAY2N,KAAMS,EAAYxB,IAGpDsB,GAAqB,KAGrBA,GACFH,EAAsBM,KAAKF,MAK3BJ,EAAsBtR,OAAS,EAAG,CACpC,IAAM6R,EAAkBX,KAAMI,GAAuB,SAAAI,GAAW,OAC9DI,KAAMpW,OAAOwJ,OAAOwM,GAAcvB,OAEpCvL,EAAgBiN,OAOpB,IAOI9K,EAPErC,EA3Ne,SAACqM,GAAD,OACrBE,KAAUF,GAAa,SAAAzB,GAAI,OAAIA,EAAKzK,aAAaC,YAAYhJ,SA0NzCiW,CAAenN,GAC7BG,EAAeqJ,GAAgB1J,GAE/BsN,EAAwBtW,OAAOwJ,OAAOyL,GACzCsB,SAAQ,SAAAvC,GAAC,OAAIA,EAAEhB,SACfwD,MAAK,SAAAxC,GAAC,OZ5M+B,aY4M3BA,EAAED,YAGf,GAAIuC,GAAyBA,EAAsBzC,eAAgB,CACjE,IAAM4C,EAAqBxV,EAAS6S,+BAClCwC,EAAsBvC,UAKxB1I,EAAe,CACbC,WAJuBqI,EACvB2C,EAAsBzC,gBAGOzK,YAAYhJ,MACzCwL,SAAU6K,EAAmB3L,kBAAkB9D,KAC/C6E,KAAM4K,EAAmB3L,kBAAkBe,MAK/C,IADA,IAAM6K,EAAoB,MAAQ1N,GAvGhB,aA6GhB,IAAM2N,EAA4BjE,GAAgBgE,GAClD1W,OAAOuB,KAAKmV,GAAsBlV,SAChC,SAAA6E,GAAI,OACDqQ,EAAqBrQ,GAAQc,KAAKN,IACjC,IACAM,KAAKN,IAAI8P,EAA2BD,EAAqBrQ,SAT/DrG,OAAOwJ,OAAOkN,GAAsBE,MAClC,SAAAjP,GAAK,OAAIA,EAAQ+K,GAAgBgE,IAAyB/O,EAAQ,QAEnE,IAUH,IAAMsE,EAAwByG,GAAgBgE,GAExCG,EAAerE,GAAgBxJ,GAgBrC,MAZkC,CAChCqC,eACA6B,YACA1F,YACA6C,KACAhB,eACA4C,wBACAyK,uBACAxN,gBACAoD,8BAXyC,GAAxCL,EAAwB4K,KAiBhBC,GAAgB,uCAAG,WAC9BC,EACAC,GAF8B,2DAAAxX,EAAA,6DAG9ByX,EAH8B,kDAMLtR,IANK,qEAWtBuR,EAAkBtV,IAExBoV,GAA2B,GAErBG,EAAoB3R,IAfE,0DAuBxB4R,GAA8B,EAE9BH,KACF/D,EAAsBxQ,EACpByU,EAAkBxU,eAClBwU,EAAkBvU,eAEAiN,OAAM,eAGpBwH,EAA4BpE,GAChCC,GACArD,OAAM,SAAAvK,OAGR,sBAAC,4BAAA9F,EAAA,sEACkC6X,EADlC,QACOC,EADP,SAE2BF,GACxBL,EAAiBO,GAHpB,0CAAD,IAtC0B,UA8CFtU,EACxBmU,EAAkBxU,eAClBwU,EAAkBvU,cAhDQ,WA8CtB2U,EA9CsB,OAkD5BP,GAA2B,GAGxBO,GACAA,EAAYlV,UACZkV,EAAYlV,SAAS+Q,YACrBmE,EAAYlV,SAAS+Q,WAAW9P,MAChCiU,EAAYlV,SAASmV,oBACrBD,EAAYlV,SAASmV,mBAAmBlU,MACxCiU,EAAYlV,SAAS2S,sBACrBuC,EAAYlV,SAAS2S,qBAAqB1R,MAC1CiU,EAAYlV,SAASoV,kBACrBF,EAAYlV,SAASoV,iBAAiBnU,MACtCiU,EAAYlV,SAASqV,gBACrBH,EAAYlV,SAASqV,eAAeC,WACpCJ,EAAYlV,SAASqV,eAAeC,UAAUrU,KAjErB,0DAsEtB8P,EAAamE,EAAYlV,SAAS+Q,WAAW9P,KAC7C2R,EAAsBsC,EAAYlV,SAASmV,mBAAmBlU,KAC9D0R,EAAuBuC,EAAYlV,SAAS2S,qBAAqB1R,KACjE6R,EAAqBoC,EAAYlV,SAASoV,iBAAiBnU,KAC3DqQ,EAAgB4D,EAAYlV,SAASqV,eAAeC,UAAUrU,KA1ExC,UA4EL4T,EA5EK,WA4EtBjW,EA5EsB,0DAkFtB2W,EAAoBjF,GAAWqC,GAClCjC,OAAOJ,GAAWsC,IAClBlC,OAAOoC,EAAmBnC,OACvBkC,EAAsB0C,EAAkB9F,QAAO,SAAAkC,GACnD,IAAMnJ,EACJmJ,EAAED,UAAY9S,EAAS6S,+BAA+BE,EAAED,UAC1D,OAAOlJ,GAAkBA,EAAeoJ,WAAaxN,KAGjD+M,EAAexT,OAAOuB,KAAK6R,GAC3BK,EAAgBD,EAAatT,KAAI,SAAAmK,GAAE,OACvC0K,GACE1K,EACA+I,EACAO,EACA1S,EACA+T,EACAC,EACAC,EACAC,MAGJiC,GAA8B,EAC9BL,EAAiBtD,GAzGW,yDA2G5BhT,QAAQC,MAAR,mDACAsW,GAA2B,GA5GC,6EAAH,wD,6BC7RvBa,GAAc,WAClB7Y,OAAOC,SAASE,OAAS,IAyIZ2Y,GAtIH,WAAO,IAAD,EACgB9G,mBAAkBhM,KADlC,mBACT+S,EADS,KACCC,EADD,OAEqBhH,oBAAkB,GAFvC,mBAETiH,EAFS,KAEKC,EAFL,OAG0BlH,qBdqKjCxL,KcxKO,mBAGT2S,EAHS,KAGMC,EAHN,OAMwBpH,wBACtCxO,GAPc,mBAMTzB,EANS,KAMKsX,EANL,OAS6BrH,oBAAkB,GAT/C,mBASTsH,EATS,KASSC,EATT,OAU8CvH,oBAE5D,GAZc,mBAUTwH,EAVS,KAUgBxB,EAVhB,OAa0BhG,wBAExCxO,GAfc,mBAaTiR,EAbS,KAaMsD,EAbN,KAiBV0B,IAAoB1X,EAE1BuQ,qBAAU,WAWHyG,GAVO,uCAAG,sBAAAvY,EAAA,sEACYmG,IADZ,cAGXqS,GAAY,IAEZE,GAAa,GAEbQ,WAAWb,GAjCa,MA0Bb,2CAAH,oDAWVc,KAED,CAACZ,IAEJzG,qBAAU,WACR,sBAAC,4BAAA9R,EAAA,+EAEsBoC,IAFtB,OAES0B,EAFT,OAGG+U,EAAgB/U,GAHnB,gDAKG7C,QAAQC,MAAM,KAAE6E,SAChBgT,GAAiB,GANpB,wDAAD,KASC,IAEHjH,qBAAU,WACR,IAAMsH,EAAqB,WAAgD,IAA/C3B,EAA8C,wDACnEuB,GACH1B,GACEC,EACAC,EACAC,IAIFc,GAAYI,IAAkBK,IAC3BjG,KACHA,GAA4B3C,YAC1BgJ,EAtE2B,MAyE7BA,GAAmB,GAClB5Z,OAAe6Z,qBAAuB,kBAAMD,SAGhD,CAACb,EAAUI,EAAeM,EAAiBD,IAE9C,IAAMM,EAAqB,SAACpT,GAC1B7D,EAAGC,MAAM,CACPC,SAAU,WACVC,OAAQ,kBACR+E,MAAM,oBAAD,OAAsBrB,EAAW/C,kBAExC4B,EAA6BmB,GAC7B0S,GAAiB,IAGf/U,EAA+B,GA6BnC,OA5BI4U,EACF5U,EACE,uDACwB,uBAAG+O,KAAK,KAAR,gBADxB,kBAIOkG,EACTjV,EACE,0DAC2B,uBAAG+O,KAAK,KAAR,gBAD3B,kBAIQ2F,EAEAI,EAEAM,EAEAhF,GAA0C,IAAzBA,EAAcnP,SAEvCjB,EADEmV,EACO,6BAEA,qBALXnV,EAAS,oCAFTA,EAAS,4CAFTA,EAAS,oBAaVrE,OAAeyU,cAAgBA,EAE5BA,GAAiBA,EAAcnP,OAAS,EAExC,yBAAKkD,UAAWC,KAAOqQ,KACrB,kBAAC,GAAD,CAAkB3J,mBAAoB2K,IACtC,yBAAKtR,UAAWC,KAAOsR,qBACrB,yBAAKvR,UAAWC,KAAO2L,YACpBK,EAAcvT,KAAI,SAAA8Y,GAAC,OAClB,kBAAC,GAAD,CAAkB7Y,IAAK6Y,EAAE3O,GAAI/G,KAAM0V,SAIzC,kBAAC,GAAD,CAAejY,aAAcA,IAC5BsC,GAAU,kBAAC,GAAD,KAAiBA,GAC3BmV,GAA2B,kBAAC,GAAD,OAMhC,yBAAKhR,UAAWC,KAAOqQ,KACrB,kBAAC,GAAD,CAAkB3J,mBAAoB2K,IACtC,kBAAC,GAAD,KAAiBzV,K,OCtJH4V,QACW,cAA7Bja,OAAOC,SAASia,UAEe,UAA7Bla,OAAOC,SAASia,UAEhBla,OAAOC,SAASia,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SDmI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtI,MAAK,SAAAuI,GACjCA,EAAaC,iB,mBE1InBrb,EAAOC,QAAU,CAAC,OAAS,6BAA6B,QAAU,8BAA8B,KAAO,2BAA2B,sBAAwB,4CAA4C,aAAe,mCAAmC,YAAc,oC,mBCAtQD,EAAOC,QAAU,CAAC,IAAM,iBAAiB,iBAAmB,8BAA8B,oBAAsB,iCAAiC,WAAa,wBAAwB,cAAgB,6B,mBCAtMD,EAAOC,QAAU,CAAC,iBAAmB,2CAA2C,WAAa,qCAAqC,cAAgB,wCAAwC,aAAe,uCAAuC,eAAiB,yCAAyC,kBAAoB,8C,kBCA9TD,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,KAAO,yBAAyB,cAAgB,kCAAkC,aAAe,iCAAiC,aAAe,iCAAiC,UAAY,8BAA8B,UAAY,8BAA8B,eAAiB,qC,kBCA3UD,EAAOC,QAAU,CAAC,cAAgB,qCAAqC,QAAU,+BAA+B,YAAc,mCAAmC,WAAa,kCAAkC,OAAS,8BAA8B,KAAO,4BAA4B,KAAO,8B,mBCAjSD,EAAOC,QAAU,CAAC,kBAAoB,mC,uDCAtCD,EAAOC,QAAU,CAAC,WAAa,6BAA6B,YAAc,8BAA8B,KAAO,uBAAuB,aAAe,+BAA+B,QAAU,0BAA0B,UAAY,4BAA4B,MAAQ,wBAAwB,MAAQ,wBAAwB,IAAM,sBAAsB,aAAe,kC","file":"static/js/main.380c6ee9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"powerBars\":\"PowerBars_powerBars__33tbb\",\"powerRange\":\"PowerBars_powerRange__te0OD\",\"rangeLine\":\"PowerBars_rangeLine__3sXeP\",\"powerLabel\":\"PowerBars_powerLabel__z9Lm2\",\"indicator\":\"PowerBars_indicator__1UcsC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"details\":\"PowerDetails_details__1vqno\",\"detailsRow\":\"PowerDetails_detailsRow__20lfp\",\"detailsLabel\":\"PowerDetails_detailsLabel__2dvVG\",\"detailsInlineIcon\":\"PowerDetails_detailsInlineIcon__1Pqe3\",\"detailsValue\":\"PowerDetails_detailsValue__3daTt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"characterDisplay\":\"CharacterDisplay_characterDisplay__20O9A\",\"header\":\"CharacterDisplay_header__2fx5d\",\"emblemBackground\":\"CharacterDisplay_emblemBackground__2pAjE\",\"name\":\"CharacterDisplay_name__2j8PA\",\"power\":\"CharacterDisplay_power__1p583\",\"content\":\"CharacterDisplay_content__263Ab\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"anchor\":\"LoadingSpinner_anchor__78Pnm\",\"spinner\":\"LoadingSpinner_spinner__32tWn\",\"spin\":\"LoadingSpinner_spin__3FVoi\",\"loadingSpinnerContainer\":\"LoadingSpinner_loadingSpinnerContainer__2QV5S\",\"spinnerLarge\":\"LoadingSpinner_spinnerLarge__KooL0\",\"spinnerSmall\":\"LoadingSpinner_spinnerSmall__27lWl\",\"status\":\"LoadingSpinner_status__3sgCR\"};","import ReactGA from \"react-ga\";\r\n\r\nReactGA.initialize(\"UA-149614480-1\", {\r\n  debug: process.env.NODE_ENV === \"development\"\r\n});\r\n\r\n// Anonymize IP addresses, yay GDPR\r\nReactGA.set({ anonymizeIp: true });\r\nReactGA.pageview(window.location.pathname + window.location.search);\r\n\r\nexport default ReactGA;\r\n","import { get, set } from \"idb-keyval\";\n\nimport {\n  DestinyInventoryItemDefinition,\n  DestinyManifest,\n  DestinyVendorDefinition,\n  getDestinyManifest,\n  getProfile\n} from \"bungie-api-ts/destiny2\";\nimport { HttpClientConfig } from \"bungie-api-ts/http\";\nimport { BUNGIE_API_KEY, getAccessToken } from \"./bungie-auth\";\nimport ga from \"./ga\";\n\nexport const bungieAuthedFetch = async (config: HttpClientConfig) => {\n  try {\n    const accessToken = getAccessToken();\n    const headers: { [key: string]: string } = { \"x-api-key\": BUNGIE_API_KEY };\n    if (accessToken) {\n      headers.Authorization = `Bearer ${accessToken}`;\n    }\n    const url = `${config.url}${\n      config.params\n        ? \"?\" +\n          Object.entries(config.params).map(\n            ([key, value]) =>\n              `${encodeURIComponent(key)}=${encodeURIComponent(\n                value as string\n              )}`\n          )\n        : \"\"\n    }`;\n    const response = await fetch(url, { headers });\n    return await response.json();\n  } catch (e) {\n    console.error(e);\n    return {};\n  }\n};\n\nconst MANIFEST_VERSION_KEY = \"MANIFEST_VERSION\";\nconst MANIFEST_IDB_KEY = \"MANIFEST_DATA\";\nexport interface ManifestData {\n  [key: string]: any | undefined;\n  DestinyInventoryItemDefinition: {\n    [key: string]: DestinyInventoryItemDefinition | undefined;\n  };\n  DestinyVendorDefinition: {\n    [key: string]: DestinyVendorDefinition | undefined;\n  };\n}\nconst manifestPropertyWhitelist = [\n  \"DestinyInventoryItemDefinition\",\n  \"DestinyVendorDefinition\"\n];\n\nconst getCachedManifestData = async () => {\n  console.log(\"Loading manifest data from IDB\");\n  const manifestData = await get(MANIFEST_IDB_KEY);\n  console.log(\"Finished loading manifest data from IDB\");\n  return manifestData as ManifestData;\n};\n\nconst getRemoteManifestData = async (manifest: DestinyManifest) => {\n  if (!manifest) {\n    throw Error(\"No manifest!\");\n  }\n  const version = manifest.version;\n  console.log(\"Fetching fresh manifest data\");\n  const manifestDataResponse = await fetch(\n    `https://www.bungie.net${manifest.jsonWorldContentPaths.en}`\n  );\n  const manifestData = await manifestDataResponse.json();\n  console.log(\"Pruning manifest data\");\n  Object.keys(manifestData).forEach(key => {\n    if (!manifestPropertyWhitelist.includes(key)) {\n      delete manifestData[key];\n    }\n  });\n  console.log(\"Storing manifest data in IDB\");\n  await set(MANIFEST_IDB_KEY, manifestData);\n  localStorage.setItem(MANIFEST_VERSION_KEY, version);\n  return manifestData;\n};\n\nlet cachedManifestData: ManifestData | undefined;\nlet getManifestPromise: Promise<ManifestData> | undefined;\n\nexport const getManifest = async (): Promise<ManifestData> => {\n  if (!getManifestPromise) {\n    getManifestPromise = (async () => {\n      ga.event({\n        category: \"Data\",\n        action: \"Attempt load manifest\",\n        nonInteraction: true\n      });\n      const manifest = await getDestinyManifest(bungieAuthedFetch);\n      const localStorageManifestVersion = localStorage.getItem(\n        MANIFEST_VERSION_KEY\n      );\n      if (\n        manifest &&\n        manifest.Response &&\n        manifest.Response.version === localStorageManifestVersion &&\n        !window.location.search.includes(\"updateManifest\")\n      ) {\n        if (!cachedManifestData) {\n          cachedManifestData = await getCachedManifestData();\n        }\n        if (\n          cachedManifestData &&\n          manifestPropertyWhitelist.every(\n            key => cachedManifestData && !!cachedManifestData[key]\n          )\n        ) {\n          return cachedManifestData;\n        }\n      }\n      if (\n        manifest &&\n        manifest.ErrorStatus &&\n        manifest.ErrorStatus !== \"Success\"\n      ) {\n        ga.event({\n          category: \"Errors\",\n          action: `Error status \"${manifest.ErrorStatus}\" returned from manifest request`,\n          nonInteraction: true\n        });\n        throw Error(\n          `Error status \"${manifest.ErrorStatus}\" returned from manifest request`\n        );\n      }\n      if (!manifest || !manifest.Response) {\n        throw Error(\"No manifest received!\");\n      }\n      cachedManifestData = undefined;\n      ga.event({\n        category: \"Data\",\n        action: \"Fetch remote manifest\",\n        nonInteraction: true\n      });\n      const freshManifestData = await getRemoteManifestData(manifest.Response);\n      cachedManifestData = freshManifestData;\n      return freshManifestData;\n    })();\n  }\n  return getManifestPromise;\n};\n\nexport const getBasicProfile = (\n  membershipType: number,\n  membershipId: string\n) => {\n  ga.event({\n    category: \"Character Data\",\n    action: \"Fetch minimal profile\",\n    nonInteraction: true\n  });\n  return getProfile(bungieAuthedFetch, {\n    components: [\n      200, // DestinyComponentType.Characters,\n      205 // DestinyComponentType.CharacterEquipment,\n    ],\n    destinyMembershipId: membershipId,\n    membershipType\n  });\n};\n\nexport const getFullProfile = (\n  membershipType: number,\n  membershipId: string\n) => {\n  ga.event({\n    category: \"Character Data\",\n    action: \"Fetch full profile\",\n    nonInteraction: true\n  });\n  return getProfile(bungieAuthedFetch, {\n    components: [\n      200, // DestinyComponentType.Characters,\n      201, // DestinyComponentType.CharacterInventories,\n      205, // DestinyComponentType.CharacterEquipment,\n      102, // DestinyComponentType.ProfileInventories,\n      300 // DestinyComponentType.ItemInstances,\n    ],\n    destinyMembershipId: membershipId,\n    membershipType\n  });\n};\n","import { getMembershipDataById, UserInfoCard } from \"bungie-api-ts/user\";\r\nimport { bungieAuthedFetch } from \"./bungie-api\";\r\nimport ga from \"./ga\";\r\n\r\nconst isDev = process.env.NODE_ENV === \"development\";\r\nexport const BUNGIE_API_KEY = isDev\r\n  ? \"f7f184669f044a89b560fc5f71ed5d60\"\r\n  : \"d94be1e34632448fafdaf77c7afbb501\";\r\nconst BUNGIE_OAUTH_AUTHORIZE_URL = \"https://www.bungie.net/en/OAuth/Authorize\";\r\nconst BUNGIE_OAUTH_CLIENT_ID = isDev ? \"26087\" : \"27213\";\r\nconst BUNGIE_OAUTH_TOKEN_URL =\r\n  \"https://www.bungie.net/platform/app/oauth/token/\";\r\n\r\nconst ACCESS_TOKEN_STORAGE_KEY = \"bungieAccessToken\";\r\nconst ACCESS_TOKEN_EXPIRY_STORAGE_KEY = \"bungieAccessTokenExpiryTime\";\r\nconst BUNGIE_MEMBERSHIP_ID_STORAGE_KEY = \"bungieMembershipId\";\r\nconst DESTINY_MEMBERSHIPS_STORAGE_KEY = \"destinyMemberships\";\r\nconst DESTINY_MEMBERSHIP_STORAGE_KEY = \"destinyMembership\";\r\n\r\nconst clearStorage = () => {\r\n  localStorage.removeItem(ACCESS_TOKEN_STORAGE_KEY);\r\n  localStorage.removeItem(ACCESS_TOKEN_EXPIRY_STORAGE_KEY);\r\n  localStorage.removeItem(BUNGIE_MEMBERSHIP_ID_STORAGE_KEY);\r\n  localStorage.removeItem(DESTINY_MEMBERSHIPS_STORAGE_KEY);\r\n  localStorage.removeItem(DESTINY_MEMBERSHIP_STORAGE_KEY);\r\n};\r\n\r\nconst getAuthUrl = () =>\r\n  `${BUNGIE_OAUTH_AUTHORIZE_URL}?response_type=code&client_id=${BUNGIE_OAUTH_CLIENT_ID}`;\r\n\r\nconst redirectToAuth = () => {\r\n  console.log(\"Redirect to auth\");\r\n  clearStorage();\r\n  ga.event({\r\n    category: \"Auth\",\r\n    action: \"Redirect to oauth\",\r\n    nonInteraction: true\r\n  });\r\n  window.location.replace(getAuthUrl());\r\n};\r\n\r\nconst handleTokenResponse = async (\r\n  tokenResponse: Response,\r\n  redirect: boolean = false\r\n) => {\r\n  console.log(\"handleTokenResponse\");\r\n  clearStorage();\r\n  if (tokenResponse.status === 200) {\r\n    const data = await tokenResponse.json();\r\n    const accessToken = data.access_token as string;\r\n    const tokenDuration = data.expires_in as number;\r\n    const expiryTime = Date.now() + tokenDuration * 1000;\r\n    const bungieMembershipId = data.membership_id as string;\r\n\r\n    localStorage.setItem(ACCESS_TOKEN_STORAGE_KEY, accessToken);\r\n    localStorage.setItem(\r\n      ACCESS_TOKEN_EXPIRY_STORAGE_KEY,\r\n      expiryTime.toString()\r\n    );\r\n    localStorage.setItem(BUNGIE_MEMBERSHIP_ID_STORAGE_KEY, bungieMembershipId);\r\n\r\n    // 254 = all memberships\r\n    const destinyMembershipsResponse = await getMembershipDataById(\r\n      bungieAuthedFetch,\r\n      { membershipId: bungieMembershipId, membershipType: 254 }\r\n    );\r\n\r\n    if (\r\n      !destinyMembershipsResponse ||\r\n      !destinyMembershipsResponse.Response ||\r\n      (destinyMembershipsResponse.ErrorStatus &&\r\n        destinyMembershipsResponse.ErrorStatus !== \"Success\")\r\n    ) {\r\n      ga.event({\r\n        category: \"Errors\",\r\n        action: `Destiny membership fetch error, status: ${destinyMembershipsResponse.ErrorStatus}`,\r\n        nonInteraction: true\r\n      });\r\n      return {\r\n        authSuccess: false,\r\n        error: `Status code ${destinyMembershipsResponse.ErrorStatus} from memberships endpoint`\r\n      };\r\n    }\r\n\r\n    const destinyMemberships =\r\n      destinyMembershipsResponse.Response.destinyMemberships;\r\n    localStorage.setItem(\r\n      DESTINY_MEMBERSHIPS_STORAGE_KEY,\r\n      JSON.stringify(destinyMemberships)\r\n    );\r\n\r\n    // If there is only one membership, select it automatically\r\n    if (destinyMemberships.length === 1) {\r\n      setSelectedDestinyMembership(destinyMemberships[0]);\r\n    }\r\n\r\n    return { accessToken, authSuccess: true };\r\n  } else {\r\n    if (tokenResponse.status !== 200) {\r\n      ga.event({\r\n        category: \"Auth\",\r\n        action: `Status code ${tokenResponse.status} from authentication request`,\r\n        nonInteraction: true\r\n      });\r\n      return {\r\n        authSuccess: false,\r\n        error: `Status code ${tokenResponse.status} from authentication request`\r\n      };\r\n    }\r\n    // return redirectToAuth()\r\n  }\r\n};\r\n\r\nconst fetchAuthToken = async (authCode: string) => {\r\n  console.log(\"fetchAuthToken\", authCode);\r\n  clearStorage();\r\n  ga.event({\r\n    category: \"Auth\",\r\n    action: \"Oauth token request\",\r\n    nonInteraction: true\r\n  });\r\n  const tokenResponse = await fetch(BUNGIE_OAUTH_TOKEN_URL, {\r\n    body: `grant_type=authorization_code&code=${authCode}&client_id=${BUNGIE_OAUTH_CLIENT_ID}`,\r\n    cache: \"no-cache\",\r\n    credentials: \"include\",\r\n    headers: {\r\n      \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n    },\r\n    method: \"POST\",\r\n    redirect: \"follow\",\r\n    referrer: \"no-referrer\"\r\n  });\r\n  return await handleTokenResponse(tokenResponse);\r\n};\r\n\r\nexport const getAccessToken = () => {\r\n  return localStorage.getItem(ACCESS_TOKEN_STORAGE_KEY);\r\n};\r\n\r\nexport const hasValidAuth = () => {\r\n  const accessToken = getAccessToken();\r\n  const accessTokenExpiryTime = parseInt(\r\n    localStorage.getItem(ACCESS_TOKEN_EXPIRY_STORAGE_KEY) || \"-1\",\r\n    10\r\n  );\r\n  const bungieMembershipId = localStorage.getItem(\r\n    BUNGIE_MEMBERSHIP_ID_STORAGE_KEY\r\n  );\r\n  if (\r\n    !accessToken ||\r\n    Date.now() >= accessTokenExpiryTime ||\r\n    !bungieMembershipId\r\n  ) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nexport const getDestinyMemberships = () => {\r\n  const destinyMembershipsString = localStorage.getItem(\r\n    DESTINY_MEMBERSHIPS_STORAGE_KEY\r\n  );\r\n  try {\r\n    if (destinyMembershipsString) {\r\n      return JSON.parse(destinyMembershipsString) as UserInfoCard[];\r\n    }\r\n  } catch (e) {\r\n    ga.event({\r\n      category: \"Data\",\r\n      action: \"Error loading destiny memberships from local storage\",\r\n      nonInteraction: true\r\n    });\r\n    console.error(`Error loading destiny memberships`, e.message);\r\n  }\r\n  return undefined;\r\n};\r\n\r\nexport const hasDestinyMemberships = () => {\r\n  return !!getDestinyMemberships();\r\n};\r\n\r\nexport const getSelectedDestinyMembership = () => {\r\n  const destinyMembershipString = localStorage.getItem(\r\n    DESTINY_MEMBERSHIP_STORAGE_KEY\r\n  );\r\n  try {\r\n    if (destinyMembershipString) {\r\n      return JSON.parse(destinyMembershipString) as UserInfoCard;\r\n    }\r\n  } catch (e) {\r\n    ga.event({\r\n      category: \"Data\",\r\n      action: \"Error loading destiny membership from local storage\",\r\n      nonInteraction: true\r\n    });\r\n    console.error(\"Error loading destiny membership\", e.message);\r\n  }\r\n  return undefined;\r\n};\r\n\r\nexport const hasSelectedDestinyMembership = () => {\r\n  return !!getSelectedDestinyMembership();\r\n};\r\n\r\nexport const setSelectedDestinyMembership = (membership: UserInfoCard) => {\r\n  localStorage.setItem(\r\n    DESTINY_MEMBERSHIP_STORAGE_KEY,\r\n    JSON.stringify(membership)\r\n  );\r\n};\r\n\r\nexport const auth = async () => {\r\n  const queryParams = new URLSearchParams(window.location.search);\r\n  const authCode = queryParams.get(\"code\");\r\n\r\n  if (authCode && !hasValidAuth()) {\r\n    console.log(\"Fetching access token with auth code\");\r\n    const authResponse = await fetchAuthToken(authCode);\r\n    if (authResponse && authResponse.authSuccess === false) {\r\n      console.error(authResponse.error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  if (authCode) {\r\n    window.location.replace(\r\n      `${window.location.origin}${window.location.pathname}`\r\n    );\r\n  }\r\n\r\n  if (hasValidAuth() && hasDestinyMemberships()) {\r\n    return true;\r\n  }\r\n\r\n  ga.event({\r\n    category: \"System\",\r\n    action: \"Redirect for fresh authentication\",\r\n    nonInteraction: true\r\n  });\r\n  console.log(\r\n    \"Redirecting to fresh authentication for missing or expired access token, or missing destiny memberships\"\r\n  );\r\n  clearStorage();\r\n  redirectToAuth();\r\n};\r\n","export const ITEM_SLOT_KINETIC = \"kinetic\";\r\nexport const ITEM_SLOT_ENERGY = \"energy\";\r\nexport const ITEM_SLOT_POWER = \"power\";\r\nexport const ITEM_SLOT_HEAD = \"head\";\r\nexport const ITEM_SLOT_GLOVES = \"gloves\";\r\nexport const ITEM_SLOT_CHEST = \"chest\";\r\nexport const ITEM_SLOT_LEGS = \"legs\";\r\nexport const ITEM_SLOT_CLASS_ITEM = \"classItem\";\r\n\r\nexport const ITEM_SLOT_BUCKETS = {\r\n  [ITEM_SLOT_KINETIC]: 1498876634,\r\n  [ITEM_SLOT_ENERGY]: 2465295065,\r\n  [ITEM_SLOT_POWER]: 953998645,\r\n  [ITEM_SLOT_HEAD]: 3448274439,\r\n  [ITEM_SLOT_GLOVES]: 3551918588,\r\n  [ITEM_SLOT_CHEST]: 14239492,\r\n  [ITEM_SLOT_LEGS]: 20886954,\r\n  [ITEM_SLOT_CLASS_ITEM]: 1585787867\r\n};\r\n\r\nexport const ITEM_BUCKET_SLOTS = Object.entries(ITEM_SLOT_BUCKETS).reduce(\r\n  (buckets, [slot, bucket]) => ({ ...buckets, [bucket]: slot }),\r\n  {} as { [bucket: number]: string }\r\n);\r\n\r\nexport const ITEM_SLOT_GROUP_WEAPONS = [\r\n  ITEM_SLOT_KINETIC,\r\n  ITEM_SLOT_ENERGY,\r\n  ITEM_SLOT_POWER\r\n];\r\nexport const ITEM_SLOT_GROUP_ARMOR = [\r\n  ITEM_SLOT_HEAD,\r\n  ITEM_SLOT_GLOVES,\r\n  ITEM_SLOT_CHEST,\r\n  ITEM_SLOT_LEGS,\r\n  ITEM_SLOT_CLASS_ITEM\r\n];\r\n\r\nexport const ORDERED_ITEM_SLOTS = [\r\n  ...ITEM_SLOT_GROUP_WEAPONS,\r\n  ...ITEM_SLOT_GROUP_ARMOR\r\n];\r\n\r\nexport const ITEM_TIER_TYPE_EXOTIC = 6;\r\n\r\nexport const ITEM_TYPE_ARMOR = 2;\r\nexport const ITEM_TYPE_WEAPON = 3;\r\n\r\nexport const CLASS_TYPE_ALL = 3;\r\n\r\nexport const CLASS_TITAN = \"titan\";\r\nexport const CLASS_HUNTER = \"hunter\";\r\nexport const CLASS_WARLOCK = \"warlock\";\r\n\r\nexport const CLASS_NAMES = [CLASS_TITAN, CLASS_HUNTER, CLASS_WARLOCK];\r\n\r\nexport const ITEM_TYPE_ARTIFACT = 28;\r\nexport const UNDYING_ARTIFACT_ITEM_HASH = 1387688628;\r\n","import classnames from \"classnames\";\nimport React from \"react\";\n\nimport STYLES from \"./PowerBar.module.scss\";\n\ninterface BarProps {\n  min: number;\n  max: number;\n  value: number;\n  avgValue: number;\n  label: string;\n  icon?: string;\n}\n\nexport const PowerBar = ({\n  min,\n  max,\n  value,\n  avgValue,\n  label,\n  icon\n}: BarProps) => {\n  const range = max - min;\n  const perc = Math.floor(((value - min) / range) * 1000) / 10;\n  const avgPerc = Math.floor(((avgValue - min) / range) * 1000) / 10;\n  // const plusTwoPerc = Math.floor(((avgValue + 2 - min) / range) * 1000) / 10\n  // const plusFivePerc = Math.floor(((avgValue + 5 - min) / range) * 1000) / 10\n  const fullLabelText = `${value} ${label}`;\n  const fullLabel = (\n    <span className={STYLES.label}>\n      <span\n        className={classnames(STYLES.power, {\n          [STYLES.max]: value >= max,\n          [STYLES.belowAverage]: value < avgValue\n        })}\n      >\n        {value}\n      </span>\n      <span className={STYLES.slotName}>{label}</span>\n    </span>\n  );\n  return (\n    <div className={STYLES.barWrapper}>\n      <div className={STYLES.iconWrapper}>\n        {icon && (\n          <img\n            className={STYLES.icon}\n            src={`https://www.bungie.net${icon}`}\n            alt={fullLabelText}\n          />\n        )}\n      </div>\n      <div className={STYLES.barContainer}>\n        <div className={STYLES.filledBar} style={{ width: `${perc}%` }}>\n          {fullLabel}\n        </div>\n        <div className={STYLES.barLine} style={{ left: `${avgPerc}%` }} />\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport { ORDERED_ITEM_SLOTS } from \"../../constants\";\nimport { CharacterData, PowerBySlot } from \"../../types\";\nimport { PowerBar } from \"./PowerBar\";\nimport STYLES from \"./PowerBars.module.scss\";\n\nconst classItemNames: { [key: string]: string } = {\n  hunter: \"Hunter Cloak\",\n  titan: \"Titan Mark\",\n  warlock: \"Warlock Bond\"\n};\nconst slotFullNames = (className: string): { [key: string]: string } => ({\n  chest: \"Chest Armor\",\n  classItem: classItemNames[className],\n  energy: \"Energy Weapon\",\n  gloves: \"Gauntlets\",\n  head: \"Helmet\",\n  kinetic: \"Kinetic Weapon\",\n  legs: \"Leg Armor\",\n  power: \"Power Weapon\"\n});\n\ntype PowerBarsProps = CharacterData;\n\nexport const PowerBars = (data: PowerBarsProps) => {\n  // Get power by slot, using overall power if slot data does not exist\n  const powerBySlot = ORDERED_ITEM_SLOTS.reduce(\n    (slots, slotName) => ({\n      ...slots,\n      [slotName]: data.topItemBySlot\n        ? data.topItemBySlot[slotName].instanceData.primaryStat.value\n        : data.overallPower\n    }),\n    {} as PowerBySlot\n  );\n\n  const roundedPower = Math.floor(data.overallPower);\n  // Round to 50s\n  const minItemPower = Math.min(...Object.values(powerBySlot));\n  const minPowerToDisplay = Math.max(\n    Math.floor(minItemPower / 50) * 50 - 50,\n    0\n  );\n  const maxItemPower = Math.max(...Object.values(powerBySlot));\n  const maxItemPowerGrouping = maxItemPower <= 950 ? 50 : 10;\n  const maxPowerToDisplay =\n    Math.ceil(maxItemPower / maxItemPowerGrouping) * maxItemPowerGrouping;\n\n  const range = maxPowerToDisplay - minPowerToDisplay;\n  const perc =\n    Math.floor(((roundedPower - minPowerToDisplay) / range) * 1000) / 10;\n\n  return (\n    <div className={STYLES.powerBars}>\n      <div className={STYLES.powerRange}>\n        <div className={STYLES.minPower}>{minPowerToDisplay}</div>\n        <div className={STYLES.rangeLine} />\n        <div className={STYLES.maxPower}>{maxPowerToDisplay}</div>\n      </div>\n      <div className={STYLES.bars}>\n        {Object.entries(powerBySlot).map(([slotName, power]) => {\n          const bestItem = data.topItemBySlot && data.topItemBySlot[slotName];\n          return (\n            <PowerBar\n              key={`${data.id}_${slotName}`}\n              min={minPowerToDisplay}\n              max={maxPowerToDisplay}\n              value={power}\n              avgValue={roundedPower}\n              label={slotFullNames(data.className)[slotName] || slotName}\n              icon={\n                bestItem &&\n                bestItem.itemDefinition &&\n                bestItem.itemDefinition.displayProperties.icon\n              }\n            />\n          );\n        })}\n      </div>\n      <div className={STYLES.powerLabel}>\n        <div className={STYLES.indicator} style={{ left: `${perc}%` }}>\n          {roundedPower}\n        </div>\n      </div>\n    </div>\n  );\n};\n","const VENDOR_ENGRAMS_API_ENDPOINT =\n  \"https://api.vendorengrams.xyz/getVendorDrops\";\n\nexport interface VendorEngramsVendorData {\n  vendorID: string;\n  display: string;\n  drop: string;\n  shorthand: string;\n  interval: string;\n  nextRefresh: string;\n}\n\nexport interface VendorEngramsData {\n  data: VendorEngramsVendorData[];\n  updateTimestamp: number;\n}\n\nexport const VENDOR_ENGRAMS_DROP_NO_DATA = \"0\";\nexport const VENDOR_ENGRAMS_DROP_LOW = \"1\";\nexport const VENDOR_ENGRAMS_DROP_HIGH = \"2\";\n\nconst VENDOR_DISPLAY_NAMES: { [shorthand: string]: string } = {\n  devrim: \"Devrim Kay (EDZ)\",\n  sloane: \"Sloane (Titan)\",\n  failsafe: \"Failsafe (Nessus)\",\n  asher: \"Asher Mir (Io)\",\n  zavala: \"Zavala (Vanguard, Tower)\",\n  shaxx: \"Shaxx (Crucible, Tower)\",\n  banshee: \"Banshee-44 (Gunsmith, Tower)\",\n  // benedict: \"Benedict\",\n  // saladin: \"Lord Saladin (Iron Banner, Tower)\",\n  fanboy: \"Brother Vance (Mercury)\",\n  bray: \"Ana Bray (Mars)\",\n  werner: \"Werner 99-40 (Tower, Nessus Barge)\"\n};\nexport const getVendorDisplayName = (shorthand: string) => {\n  return VENDOR_DISPLAY_NAMES[shorthand] || shorthand;\n};\n\nlet vendorEngramsData: VendorEngramsData | undefined;\nlet vendorEngramsRefreshTimer: number | NodeJS.Timeout | undefined;\nlet vendorEngramsRefreshPromise: Promise<VendorEngramsData> | undefined;\n\nconst VENDOR_ENGRAMS_REFRESH_DELAY = 5 * 60 * 1000;\n\nconst refreshVendorEngramsData = async () => {\n  const response = await fetch(VENDOR_ENGRAMS_API_ENDPOINT);\n  const jsonData = (await response.json()) as VendorEngramsVendorData[];\n  const updateTimestamp = Date.now();\n  const data = { data: jsonData, updateTimestamp };\n  vendorEngramsData = data;\n  return data;\n};\n\nexport const getVendorEngramsData = async () => {\n  if (vendorEngramsData) {\n    return vendorEngramsData;\n  }\n  if (!vendorEngramsRefreshPromise) {\n    vendorEngramsRefreshPromise = refreshVendorEngramsData();\n  }\n  if (!vendorEngramsRefreshTimer) {\n    vendorEngramsRefreshTimer = setInterval(() => {\n      refreshVendorEngramsData().catch(e =>\n        console.warn(\"Error refreshing vendorengrams.xyz data\", e)\n      );\n    }, VENDOR_ENGRAMS_REFRESH_DELAY);\n  }\n  return vendorEngramsRefreshPromise;\n};\n","import React from \"react\";\n\nimport STYLES from \"./Power.module.scss\";\n\ninterface PowerProps {\n  children: number | string;\n}\nexport const Power = ({ children }: PowerProps) => (\n  <span className={STYLES.inlinePowerNumber}>{children}</span>\n);\n","import React from \"react\";\n\nimport STYLES from \"./PowerDetails.module.scss\";\n\nimport { Power } from \"./Power\";\n\nconst withSign = (value: number) => {\n  if (value >= 0) {\n    return `+${value}`;\n  }\n  return `${value}`;\n};\n\ninterface PowerDetailsProps {\n  overallPower: number;\n  artifactData?: {\n    name: string;\n    iconPath: string;\n    bonusPower: number;\n  };\n}\n\nexport const PowerDetails = (data: PowerDetailsProps) => {\n  const roundedPower = Math.floor(data.overallPower);\n\n  /*\n  const summableArtifactBonusPower = data.artifactData\n    ? data.artifactData.bonusPower\n    : 0;\n    */\n\n  if (!data.artifactData || data.artifactData.bonusPower === 0) {\n    return null;\n  }\n\n  return (\n    <div className={STYLES.details}>\n      <div className={STYLES.detailsRow}>\n        <div className={STYLES.detailsLabel}>\n          Maximum equippable gear power:\n        </div>\n        <div className={STYLES.defailsValue}>\n          <Power>{roundedPower}</Power>\n        </div>\n      </div>\n      {data.artifactData ? (\n        <>\n          <div className={STYLES.detailsRow}>\n            <div className={STYLES.detailsLabel}>\n              <img\n                className={STYLES.detailsInlineIcon}\n                src={`https://www.bungie.net${data.artifactData.iconPath}`}\n                alt=\"\"\n              />\n              {data.artifactData.name} bonus power:\n            </div>\n            <div className={STYLES.detailsValue}>\n              <Power>{withSign(data.artifactData.bonusPower)}</Power>\n            </div>\n          </div>\n\n          {/*<div className={STYLES.detailsRow}>\n            <div className={STYLES.detailsLabel}>Total combined power:</div>\n            <div className={STYLES.detailsValue}>\n              <Power>{roundedPower + summableArtifactBonusPower}</Power>\n            </div>\n      </div>*/}\n        </>\n      ) : null}\n    </div>\n  );\n};\n","import classnames from \"classnames\";\nimport React from \"react\";\n\nimport { Power } from \"./Power\";\n\nimport STYLES from \"./PowerHints.module.scss\";\n\ninterface PowerHintsProps {\n  overallPower: number;\n  potentialOverallPower?: number;\n  powerRequiredToReachPotential?: number;\n}\n\nexport const PowerHints = (data: PowerHintsProps) => {\n  return (\n    <div className={STYLES.hints}>\n      {data.potentialOverallPower &&\n      data.potentialOverallPower > data.overallPower ? (\n        <div className={classnames(STYLES.hint, STYLES.worldDropHint)}>\n          <span>\n            World drops can increase your overall gear power to{\" \"}\n            <Power>{data.potentialOverallPower}</Power>\n          </span>\n          <div className={STYLES.hintExtra}>\n            <div className={STYLES.hintExtraInner}>\n              <div>\n                World drops (from strikes, public events, vendors, non-powerful\n                legendary rewards) can drop with a power level from{\" \"}\n                <Power>{data.overallPower - 3}</Power> to{\" \"}\n                <Power>{data.overallPower}</Power> for this character.\n              </div>\n              <div>\n                Replacing items below your current overall power can increase\n                your power to a higher average.\n              </div>\n              {data.powerRequiredToReachPotential ? (\n                <div>\n                  You need an extra{\" \"}\n                  <Power>{data.powerRequiredToReachPotential}</Power> total\n                  power on your items to reach an overall power of{\" \"}\n                  <Power>{data.potentialOverallPower}</Power>.\n                </div>\n              ) : null}\n            </div>\n          </div>\n        </div>\n      ) : null}\n\n      {data.potentialOverallPower === data.overallPower &&\n      data.overallPower >= 900 &&\n      data.overallPower < 950 ? (\n        <div className={classnames(STYLES.hint, STYLES.powerfulHint)}>\n          <span>\n            Powerful rewards can increase your overall gear power up to the\n            powerful cap of <Power>{950}</Power>\n          </span>\n          <div className={STYLES.hintExtra}>\n            <div className={STYLES.hintExtraInner}>\n              <div>\n                Powerful and pinnacle reward sources (Weekly challenges, Year 3\n                raids) will give you items above your overall gear power, with\n                powerful rewards capped at <Power>{950}</Power>.\n              </div>\n              <div>\n                Powerful rewards (Tier 1) will give items up to 3 levels above\n                your overall gear power\n              </div>\n              <div>\n                Powerful rewards (Tier 2) will give items up to 5 levels above\n                your overall gear power\n              </div>\n              <div>\n                Pinnacle rewards will give items up to 7 levels above your\n                overall gear power\n              </div>\n              <div>\n                After getting a powerful reward, check back here to see if it's\n                beneficial to catch up the rest of your slots with world drops\n                before getting another!\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : null}\n\n      {data.potentialOverallPower === data.overallPower &&\n      data.overallPower >= 950 &&\n      data.overallPower < 960 ? (\n        <div className={classnames(STYLES.hint, STYLES.pinnacleHint)}>\n          <span>\n            Pinnacle rewards can increase your overall gear power up to the\n            pinnacle cap of <Power>{960}</Power>\n          </span>\n          <div className={STYLES.hintExtra}>\n            <div className={STYLES.hintExtraInner}>\n              <div>\n                Pinnacle reward sources (Some weekly challenges, Year 3 raids)\n                will give you items above your overall gear power, capped at{\" \"}\n                <Power>{960}</Power>.\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n","import classnames from \"classnames\";\r\nimport React from \"react\";\r\n\r\nimport { CharacterData } from \"../types\";\r\nimport STYLES from \"./CharacterDisplay.module.scss\";\r\nimport { PowerBars } from \"./characterDisplay/PowerBars\";\r\nimport { PowerDetails } from \"./characterDisplay/PowerDetails\";\r\nimport { PowerHints } from \"./characterDisplay/PowerHints\";\r\n\r\ninterface CharacterDisplayProps {\r\n  data: CharacterData;\r\n}\r\n\r\nconst titleCase = (text: string) =>\r\n  text.substr(0, 1).toUpperCase() + text.substr(1);\r\n\r\nconst CharacterDisplay = ({ data }: CharacterDisplayProps) => {\r\n  const rgbString = ({\r\n    red,\r\n    green,\r\n    blue\r\n  }: {\r\n    red: number;\r\n    green: number;\r\n    blue: number;\r\n  }) => `rgb(${red},${green},${blue})`;\r\n\r\n  const roundedPower = Math.floor(data.overallPower);\r\n\r\n  const summableArtifactBonusPower = data.artifactData\r\n    ? data.artifactData.bonusPower\r\n    : 0;\r\n\r\n  return (\r\n    <div\r\n      className={classnames(\r\n        STYLES.characterDisplay,\r\n        STYLES[`class_${data.className}`]\r\n      )}\r\n      style={{ backgroundColor: rgbString(data.character.emblemColor) }}\r\n    >\r\n      <div className={STYLES.header}>\r\n        <img\r\n          className={STYLES.emblemBackground}\r\n          src={`https://www.bungie.net${data.character.emblemBackgroundPath}`}\r\n          alt=\"\"\r\n        />\r\n        <div className={STYLES.name}>{titleCase(data.className)}</div>\r\n        <div className={STYLES.power}>\r\n          {roundedPower + summableArtifactBonusPower}\r\n        </div>\r\n      </div>\r\n\r\n      <div className={STYLES.content}>\r\n        <PowerDetails {...data} />\r\n\r\n        <PowerBars {...data} />\r\n\r\n        <PowerHints {...data} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterDisplay;\r\n","import React from \"react\";\n\nimport STYLES from \"./FetchSpinner.module.scss\";\n\nconst FetchSpinner = () => (\n  <div className={STYLES.fetchSpinnerContainer}>\n    <div className={STYLES.anchor}>\n      <div className={STYLES.spinner} />\n      <div className={STYLES.spinnerSmall} />\n    </div>\n  </div>\n);\n\nexport default FetchSpinner;\n","import React from \"react\";\n\nimport STYLES from \"./LoadingSpinner.module.scss\";\n\ninterface LoadingSpinnerProps {\n  children: string | JSX.Element;\n}\n\nconst LoadingSpinner = ({ children }: LoadingSpinnerProps) => {\n  return (\n    <div className={STYLES.loadingSpinnerContainer}>\n      <div className={STYLES.anchor}>\n        <div className={STYLES.spinnerLarge} />\n        <div className={STYLES.spinnerSmall} />\n        <div className={STYLES.status}>{children}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import { UserInfoCard } from \"bungie-api-ts/user\";\nimport classnames from \"classnames\";\nimport React from \"react\";\n\nimport { getDestinyMemberships } from \"../services/bungie-auth\";\nimport STYLES from \"./MembershipSelect.module.scss\";\n\ninterface MembershipSelectProps {\n  onMembershipSelect: (membership: UserInfoCard) => any;\n}\n\nconst MembershipSelect = ({ onMembershipSelect }: MembershipSelectProps) => {\n  const destinyMemberships = getDestinyMemberships();\n\n  if (!destinyMemberships) {\n    return null;\n  }\n\n  if (destinyMemberships.length === 0) {\n    return <div>No destiny memberships!</div>;\n  }\n\n  const PLATFORMS: { [key: number]: string } = {\n    1: \"xbox\",\n    2: \"psn\",\n    3: \"steam\",\n    4: \"blizzard\"\n  };\n\n  return (\n    <div className={STYLES.membershipSelect}>\n      {destinyMemberships.map(m => {\n        return (\n          <div\n            key={m.membershipId}\n            className={classnames(\n              STYLES.membership,\n              STYLES[`platform_${PLATFORMS[m.membershipType]}`]\n            )}\n            onClick={() => onMembershipSelect(m)}\n          >\n            {m.displayName}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default MembershipSelect;\n","import useInterval from \"@use-it/interval\";\nimport classnames from \"classnames\";\nimport HumanizeDuration from \"humanize-duration\";\nimport React, { useEffect, useState } from \"react\";\n\nimport {\n  getVendorDisplayName,\n  getVendorEngramsData,\n  VENDOR_ENGRAMS_DROP_HIGH,\n  VENDOR_ENGRAMS_DROP_LOW,\n  VENDOR_ENGRAMS_DROP_NO_DATA,\n  VendorEngramsData,\n  VendorEngramsVendorData\n} from \"../services/vendor-engrams\";\n\nimport { ManifestData } from \"../services/bungie-api\";\nimport STYLES from \"./VendorDisplay.module.scss\";\n\nconst VENDOR_DATA_REFRESH_ATTEMPT_DELAY = 10 * 1000;\n\ninterface VendorProps {\n  vendor: VendorEngramsVendorData;\n  manifestData: ManifestData;\n}\nconst Vendor = ({ vendor, manifestData }: VendorProps) => {\n  const manifestVendor = manifestData.DestinyVendorDefinition[vendor.vendorID];\n  let vendorInner: JSX.Element | string;\n\n  if (!manifestVendor) {\n    vendorInner = getVendorDisplayName(vendor.shorthand);\n  } else {\n    vendorInner = (\n      <>\n        <img\n          className={STYLES.icon}\n          src={`https://www.bungie.net${manifestVendor.displayProperties.icon}`}\n          alt=\"\"\n        />\n        {manifestVendor.displayProperties.name}\n      </>\n    );\n  }\n  return (\n    <div\n      className={classnames(STYLES.vendor, {\n        [STYLES.high]: vendor.drop === VENDOR_ENGRAMS_DROP_HIGH,\n        [STYLES.low]: vendor.drop === VENDOR_ENGRAMS_DROP_LOW,\n        [STYLES.noData]: vendor.drop === VENDOR_ENGRAMS_DROP_NO_DATA\n      })}\n    >\n      {vendorInner}\n    </div>\n  );\n};\n\nconst vendorListDisplay = (\n  vendors: VendorEngramsVendorData[],\n  manifestData: ManifestData\n) => {\n  return (\n    <ul className={STYLES.vendorList}>\n      {vendors.map(v => (\n        <li className={STYLES.vendorListItem} key={v.shorthand}>\n          <Vendor manifestData={manifestData} vendor={v} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\ninterface VendorDisplayProps {\n  manifestData?: ManifestData;\n}\n\nexport const VendorDisplay = ({ manifestData }: VendorDisplayProps) => {\n  const [vendorData, setVendorData] = useState<VendorEngramsData | undefined>(\n    undefined\n  );\n\n  const attemptRefreshVendorData = () => {\n    getVendorEngramsData()\n      .then(data => setVendorData(data))\n      .catch(e => console.warn(`Error fetching vendor engrams data:`, e));\n  };\n  useInterval(attemptRefreshVendorData, VENDOR_DATA_REFRESH_ATTEMPT_DELAY);\n  useEffect(attemptRefreshVendorData, []);\n\n  const [vendorsLastCheckedString, setVendorsLastCheckedString] = useState<\n    string | null\n  >(null);\n\n  useInterval(() => {\n    if (!vendorData) {\n      setVendorsLastCheckedString(null);\n      return;\n    }\n\n    const newString = HumanizeDuration(\n      vendorData.updateTimestamp - Date.now(),\n      {\n        round: true,\n        largest: 1\n      }\n    );\n    setVendorsLastCheckedString(newString);\n  }, 1000);\n\n  if (!manifestData) {\n    return null;\n  }\n\n  const highVendors =\n    (vendorData &&\n      vendorData.data.filter(\n        v => v.drop === VENDOR_ENGRAMS_DROP_HIGH && v.display === \"1\"\n      )) ||\n    [];\n\n  const noDataVendors =\n    (vendorData &&\n      vendorData.data.filter(\n        v => v.drop === VENDOR_ENGRAMS_DROP_NO_DATA && v.display === \"1\"\n      )) ||\n    [];\n\n  if (!vendorData) {\n    return null;\n  }\n\n  return (\n    <div className={STYLES.vendorDisplay}>\n      {highVendors.length > 0 && (\n        <div className={STYLES.section}>\n          <div className={STYLES.description}>\n            These vendors are currently giving at-level engrams which can help\n            you raise the power of slots below your average, or to provide items\n            for infusion:\n          </div>\n          {vendorListDisplay(highVendors, manifestData)}\n        </div>\n      )}\n      {noDataVendors.length > 0 && (\n        <div className={STYLES.section}>\n          <div className={STYLES.description}>\n            Some vendors are missing data, visit{\" \"}\n            <a\n              href=\"https://www.vendorengrams.xyz\"\n              /* eslint-disable-next-line react/jsx-no-target-blank */\n              target=\"_blank\"\n              rel=\"noopener\"\n            >\n              vendorengrams.xyz\n            </a>{\" \"}\n            if you can help provide data for these vendors:\n          </div>\n          {vendorListDisplay(noDataVendors, manifestData)}\n        </div>\n      )}\n\n      <div className={STYLES.section}>\n        <div>\n          Data provided by{\" \"}\n          <a\n            href=\"https://www.vendorengrams.xyz\"\n            /* eslint-disable-next-line react/jsx-no-target-blank */\n            target=\"_blank\"\n            rel=\"noopener\"\n          >\n            vendorengrams.xyz\n          </a>\n          {vendorsLastCheckedString && (\n            <>, last updated {vendorsLastCheckedString} ago.</>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import {\r\n  DestinyCharacterComponent,\r\n  DestinyInventoryComponent,\r\n  DestinyItemComponent,\r\n  DestinyItemInstanceComponent\r\n} from \"bungie-api-ts/destiny2\";\r\n\r\nimport forIn from \"lodash/forIn\";\r\nimport groupBy from \"lodash/groupBy\";\r\nimport mapValues from \"lodash/mapValues\";\r\nimport maxBy from \"lodash/maxBy\";\r\nimport sumBy from \"lodash/sumBy\";\r\n\r\nimport {\r\n  CLASS_NAMES,\r\n  CLASS_TYPE_ALL,\r\n  ITEM_BUCKET_SLOTS,\r\n  ITEM_SLOT_BUCKETS,\r\n  ITEM_TYPE_ARMOR,\r\n  ITEM_TYPE_WEAPON,\r\n  UNDYING_ARTIFACT_ITEM_HASH\r\n} from \"../constants\";\r\nimport {\r\n  CharacterData,\r\n  ItemBySlot,\r\n  JoinedItemDefinition,\r\n  PowerBySlot,\r\n  SeasonalArtifactData\r\n} from \"../types\";\r\nimport {\r\n  getBasicProfile,\r\n  getFullProfile,\r\n  getManifest,\r\n  ManifestData\r\n} from \"./bungie-api\";\r\nimport { auth, getSelectedDestinyMembership } from \"./bungie-auth\";\r\n\r\nconst getPowerBySlot = (itemsBySlot: ItemBySlot): PowerBySlot =>\r\n  mapValues(itemsBySlot, item => item.instanceData.primaryStat.value);\r\n\r\nconst getAveragePower = (powerBySlot: PowerBySlot) =>\r\n  Object.values(powerBySlot).reduce((sum, power) => sum + power, 0) /\r\n  Object.keys(ITEM_SLOT_BUCKETS).length;\r\nconst getOverallPower = (powerBySlot: PowerBySlot) =>\r\n  Math.floor(getAveragePower(powerBySlot));\r\n\r\nconst mergeItems = <\r\n  T extends { [key: string]: { items: DestinyItemComponent[] } }\r\n>(\r\n  characterItemMap: T\r\n) => {\r\n  return Object.values(characterItemMap).reduce(\r\n    (allItems, characterItems) => allItems.concat(characterItems.items),\r\n    [] as DestinyItemComponent[]\r\n  );\r\n};\r\n\r\nconst isItemEquippableByCharacter = (\r\n  item: JoinedItemDefinition,\r\n  character: DestinyCharacterComponent\r\n) => {\r\n  if (item.instanceData.canEquip) {\r\n    return true;\r\n  } // If the game says we can equip it, let's believe it\r\n  if (item.instanceData.cannotEquipReason === 16) {\r\n    return true;\r\n  } // Only reason is that it's in your vault\r\n  if (item.instanceData.equipRequiredLevel > character.baseCharacterLevel) {\r\n    return false;\r\n  }\r\n  if (\r\n    item.itemDefinition.classType !== CLASS_TYPE_ALL &&\r\n    item.itemDefinition.classType !== character.classType\r\n  ) {\r\n    return false;\r\n  }\r\n  // Let's ignore the rest for now\r\n  return true;\r\n};\r\n\r\nconst getBasicCharacterData = async (\r\n  pendingBasicProfile: ReturnType<typeof getBasicProfile>\r\n) => {\r\n  const profile = await pendingBasicProfile;\r\n  if (!profile || !profile.Response || !profile.Response.characters) {\r\n    return;\r\n  }\r\n  const characters = profile.Response.characters.data;\r\n\r\n  if (characters) {\r\n    const getBasicDataForCharacterId = (id: string): CharacterData => {\r\n      const character = characters[id];\r\n      const className = CLASS_NAMES[character.classType];\r\n      return {\r\n        character,\r\n        className,\r\n        id,\r\n        overallPower: character.light\r\n      };\r\n    };\r\n\r\n    const characterIds = Object.keys(characters);\r\n    const characterData = characterIds.map(id =>\r\n      getBasicDataForCharacterId(id)\r\n    );\r\n    return characterData;\r\n  }\r\n};\r\n\r\ninterface ObjectOf<T> {\r\n  [key: string]: T;\r\n}\r\n\r\nconst mapAndFilterItems = (\r\n  items: DestinyItemComponent[],\r\n  manifest: ManifestData,\r\n  itemInstances: ObjectOf<DestinyItemInstanceComponent>,\r\n  character: DestinyCharacterComponent\r\n): JoinedItemDefinition[] =>\r\n  items\r\n    .map(item => {\r\n      const instanceData = item.itemInstanceId\r\n        ? itemInstances[item.itemInstanceId]\r\n        : undefined;\r\n      const itemDefinition =\r\n        manifest.DestinyInventoryItemDefinition[item.itemHash];\r\n      return {\r\n        ...item,\r\n        instanceData,\r\n        itemDefinition\r\n      };\r\n    })\r\n    .filter(\r\n      i =>\r\n        i.instanceData &&\r\n        i.itemDefinition &&\r\n        [ITEM_TYPE_ARMOR, ITEM_TYPE_WEAPON].includes(i.itemDefinition.itemType)\r\n    )\r\n    .map(i => ({\r\n      ...i,\r\n      instanceData: i.instanceData!,\r\n      itemDefinition: i.itemDefinition!\r\n    }))\r\n    .map(i => ({\r\n      ...i,\r\n      slotName: ITEM_BUCKET_SLOTS[i.itemDefinition.inventory.bucketTypeHash]\r\n    }))\r\n    .filter(i => isItemEquippableByCharacter(i, character));\r\n\r\nconst getItemScore = (item: JoinedItemDefinition) => {\r\n  if (!item || !item.instanceData || !item.instanceData.primaryStat) {\r\n    return 0;\r\n  }\r\n  let score = item.instanceData.primaryStat.value;\r\n  if (item.instanceData.isEquipped) {\r\n    score += 0.1;\r\n  }\r\n  if (item.location === 1) {\r\n    score += 0.05;\r\n  }\r\n  return score;\r\n};\r\n\r\nconst getEquipLabel = (item: JoinedItemDefinition) =>\r\n  item.itemDefinition.equippingBlock.uniqueLabel;\r\n\r\nconst getDataForCharacterId = (\r\n  id: string,\r\n  characters: ObjectOf<DestinyCharacterComponent>,\r\n  itemInstances: ObjectOf<DestinyItemInstanceComponent>,\r\n  manifest: ManifestData,\r\n  characterInventories: ObjectOf<DestinyInventoryComponent>,\r\n  characterEquipments: ObjectOf<DestinyInventoryComponent>,\r\n  allCharacterWeapons: DestinyItemComponent[],\r\n  profileInventories: DestinyInventoryComponent\r\n): CharacterData => {\r\n  const character = characters[id];\r\n  const className = CLASS_NAMES[character.classType];\r\n\r\n  const characterItems = mapAndFilterItems(\r\n    characterInventories[id].items\r\n      .concat(characterEquipments[id].items)\r\n      .concat(allCharacterWeapons),\r\n    manifest,\r\n    itemInstances,\r\n    character\r\n  );\r\n  const relevantProfileItems = mapAndFilterItems(\r\n    profileInventories.items,\r\n    manifest,\r\n    itemInstances,\r\n    character\r\n  ).filter(\r\n    i =>\r\n      i.itemDefinition.classType === CLASS_TYPE_ALL ||\r\n      i.itemDefinition.classType === character.classType\r\n  );\r\n\r\n  const allItems = characterItems.concat(relevantProfileItems);\r\n\r\n  // Group by slot\r\n  const itemsBySlot = groupBy(allItems, i => i.slotName);\r\n  // Get max power items per slot\r\n  let topItemBySlot = mapValues(\r\n    itemsBySlot,\r\n    items => maxBy(items, getItemScore)!\r\n  );\r\n  // Get overlaps by equip label\r\n  const uniqueEquippedGroups = groupBy(\r\n    Object.values(topItemBySlot).filter(getEquipLabel),\r\n    getEquipLabel\r\n  );\r\n  // For overlaps with more than one item, generate valid options where all-but-one item is swapped for the next best non-exotic\r\n  forIn(uniqueEquippedGroups, uniqueEquippedGroup => {\r\n    if (uniqueEquippedGroup.length <= 1) {\r\n      return;\r\n    }\r\n\r\n    const validItemCombinations: ItemBySlot[] = [];\r\n\r\n    uniqueEquippedGroup.forEach(item => {\r\n      const otherItems = uniqueEquippedGroup.filter(\r\n        otherItem => otherItem !== item\r\n      );\r\n      let isCombinationValid = true;\r\n      const combination = { ...topItemBySlot };\r\n      otherItems.forEach(otherItem => {\r\n        // Find non-exotics for this slot\r\n        const nonExotics = itemsBySlot[otherItem.slotName].filter(\r\n          i => !getEquipLabel(i)\r\n        );\r\n        if (nonExotics.length > 0) {\r\n          // Select max power from non-exotics\r\n          combination[otherItem.slotName] = maxBy(nonExotics, getItemScore)!;\r\n        } else {\r\n          // No non-exotic options for this slot, so whole combination is invalidaa\r\n          isCombinationValid = false;\r\n        }\r\n      });\r\n      if (isCombinationValid) {\r\n        validItemCombinations.push(combination);\r\n      }\r\n    });\r\n\r\n    // Select highest total scoring valid combination, if alternative item combinations have been generated\r\n    if (validItemCombinations.length > 0) {\r\n      const bestCombination = maxBy(validItemCombinations, combination =>\r\n        sumBy(Object.values(combination), getItemScore)\r\n      )!;\r\n      topItemBySlot = bestCombination;\r\n    }\r\n  });\r\n\r\n  // Mock lower kinetic weapon power level to test display of world drop hints\r\n  // (topItemBySlot.kinetic.instanceData.primaryStat as any).value = 940;\r\n\r\n  const powerBySlot = getPowerBySlot(topItemBySlot);\r\n  const overallPower = getOverallPower(powerBySlot);\r\n\r\n  const artifactItemComponent = Object.values(characterEquipments)\r\n    .flatMap(i => i.items)\r\n    .find(i => i.itemHash === UNDYING_ARTIFACT_ITEM_HASH);\r\n\r\n  let artifactData: SeasonalArtifactData | undefined;\r\n  if (artifactItemComponent && artifactItemComponent.itemInstanceId) {\r\n    const artifactDefinition = manifest.DestinyInventoryItemDefinition[\r\n      artifactItemComponent.itemHash\r\n    ]!;\r\n    const artifactInstance = itemInstances[\r\n      artifactItemComponent.itemInstanceId\r\n    ]!;\r\n    artifactData = {\r\n      bonusPower: artifactInstance.primaryStat.value,\r\n      iconPath: artifactDefinition.displayProperties.icon,\r\n      name: artifactDefinition.displayProperties.name\r\n    };\r\n  }\r\n\r\n  const potentialPowerBySlot = { ...powerBySlot };\r\n  while (\r\n    Object.values(potentialPowerBySlot).some(\r\n      power => power < getOverallPower(potentialPowerBySlot) || power < 900\r\n    )\r\n  ) {\r\n    const tempPotentialOverallPower = getOverallPower(potentialPowerBySlot);\r\n    Object.keys(potentialPowerBySlot).forEach(\r\n      slot =>\r\n        (potentialPowerBySlot[slot] = Math.max(\r\n          900,\r\n          Math.max(tempPotentialOverallPower, potentialPowerBySlot[slot])\r\n        ))\r\n    );\r\n  }\r\n  const potentialOverallPower = getOverallPower(potentialPowerBySlot);\r\n\r\n  const averagePower = getAveragePower(powerBySlot);\r\n  const powerRequiredToReachPotential =\r\n    (potentialOverallPower - averagePower) * 8;\r\n\r\n  const resultData: CharacterData = {\r\n    artifactData,\r\n    character,\r\n    className,\r\n    id,\r\n    overallPower,\r\n    potentialOverallPower,\r\n    potentialPowerBySlot,\r\n    topItemBySlot,\r\n    powerRequiredToReachPotential\r\n  };\r\n\r\n  return resultData;\r\n};\r\n\r\nexport const getCharacterData = async (\r\n  setCharacterData: (state: CharacterData[]) => any,\r\n  setIsFetchingCharacterData: (state: boolean) => any,\r\n  returnBasicCharacterData: boolean = false\r\n) => {\r\n  try {\r\n    const isAuthed = await auth();\r\n    if (!isAuthed) {\r\n      return;\r\n    }\r\n\r\n    const pendingManifest = getManifest();\r\n\r\n    setIsFetchingCharacterData(true);\r\n\r\n    const destinyMembership = getSelectedDestinyMembership();\r\n    if (!destinyMembership) {\r\n      return;\r\n    }\r\n\r\n    let pendingBasicProfile: ReturnType<typeof getBasicProfile> | undefined;\r\n\r\n    // Flag lets this be disabled to prevent setting after full profile is returned\r\n    let shouldSetBasicCharacterData = true;\r\n    // Produce basic data if flag is set\r\n    if (returnBasicCharacterData) {\r\n      pendingBasicProfile = getBasicProfile(\r\n        destinyMembership.membershipType,\r\n        destinyMembership.membershipId\r\n      );\r\n      pendingBasicProfile.catch(() => {\r\n        /* Do nothing */\r\n      });\r\n      const pendingBasicCharacterData = getBasicCharacterData(\r\n        pendingBasicProfile\r\n      ).catch(e => {\r\n        /* Do nothing */\r\n      });\r\n      (async () => {\r\n        const basicCharacterData = await pendingBasicCharacterData;\r\n        if (basicCharacterData && shouldSetBasicCharacterData) {\r\n          setCharacterData(basicCharacterData);\r\n        }\r\n      })();\r\n    }\r\n\r\n    const fullProfile = await getFullProfile(\r\n      destinyMembership.membershipType,\r\n      destinyMembership.membershipId\r\n    );\r\n    setIsFetchingCharacterData(false);\r\n\r\n    if (\r\n      !fullProfile ||\r\n      !fullProfile.Response ||\r\n      !fullProfile.Response.characters ||\r\n      !fullProfile.Response.characters.data ||\r\n      !fullProfile.Response.characterEquipment ||\r\n      !fullProfile.Response.characterEquipment.data ||\r\n      !fullProfile.Response.characterInventories ||\r\n      !fullProfile.Response.characterInventories.data ||\r\n      !fullProfile.Response.profileInventory ||\r\n      !fullProfile.Response.profileInventory.data ||\r\n      !fullProfile.Response.itemComponents ||\r\n      !fullProfile.Response.itemComponents.instances ||\r\n      !fullProfile.Response.itemComponents.instances.data\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const characters = fullProfile.Response.characters.data;\r\n    const characterEquipments = fullProfile.Response.characterEquipment.data;\r\n    const characterInventories = fullProfile.Response.characterInventories.data;\r\n    const profileInventories = fullProfile.Response.profileInventory.data;\r\n    const itemInstances = fullProfile.Response.itemComponents.instances.data;\r\n\r\n    const manifest = await pendingManifest;\r\n\r\n    if (!manifest) {\r\n      return;\r\n    }\r\n\r\n    const allCharacterItems = mergeItems(characterInventories)\r\n      .concat(mergeItems(characterEquipments))\r\n      .concat(profileInventories.items);\r\n    const allCharacterWeapons = allCharacterItems.filter(i => {\r\n      const itemDefinition =\r\n        i.itemHash && manifest.DestinyInventoryItemDefinition[i.itemHash];\r\n      return itemDefinition && itemDefinition.itemType === ITEM_TYPE_WEAPON;\r\n    });\r\n\r\n    const characterIds = Object.keys(characters);\r\n    const characterData = characterIds.map(id =>\r\n      getDataForCharacterId(\r\n        id,\r\n        characters,\r\n        itemInstances,\r\n        manifest,\r\n        characterInventories,\r\n        characterEquipments,\r\n        allCharacterWeapons,\r\n        profileInventories\r\n      )\r\n    );\r\n    shouldSetBasicCharacterData = false;\r\n    setCharacterData(characterData);\r\n  } catch (e) {\r\n    console.error(`Error fetching manifest and character data`, e);\r\n    setIsFetchingCharacterData(false);\r\n    return;\r\n  }\r\n};\r\n","import { UserInfoCard } from \"bungie-api-ts/user\";\nimport React, { useEffect, useState } from \"react\";\nimport ga from \"./services/ga\";\n\nimport {\n  auth,\n  hasSelectedDestinyMembership,\n  hasValidAuth,\n  setSelectedDestinyMembership\n} from \"./services/bungie-auth\";\nimport { CharacterData } from \"./types\";\n\nimport CharacterDisplay from \"./components/CharacterDisplay\";\nimport FetchSpinner from \"./components/FetchSpinner\";\nimport LoadingSpinner from \"./components/LoadingSpinner\";\nimport MembershipSelect from \"./components/MembershipSelect\";\nimport { VendorDisplay } from \"./components/VendorDisplay\";\nimport { getManifest, ManifestData } from \"./services/bungie-api\";\nimport { getCharacterData } from \"./services/utils\";\n\nimport \"normalize.css\";\nimport STYLES from \"./App.module.scss\";\n\nconst CHARACTER_DATA_REFRESH_TIMER = 15000;\n\nlet characterDataRefreshTimer: number | undefined;\n\nconst AUTO_PAGE_REFRESH_DELAY = 5000;\n\nconst refreshPage = () => {\n  window.location.search = \"\";\n};\n\nconst App = () => {\n  const [isAuthed, setIsAuthed] = useState<boolean>(hasValidAuth());\n  const [hasAuthError, setAuthError] = useState<boolean>(false);\n  const [hasMembership, setHasMembership] = useState<boolean>(\n    hasSelectedDestinyMembership()\n  );\n  const [manifestData, setManifestData] = useState<ManifestData | undefined>(\n    undefined\n  );\n  const [hasManifestError, setManifestError] = useState<boolean>(false);\n  const [isFetchingCharacterData, setIsFetchingCharacterData] = useState<\n    boolean\n  >(false);\n  const [characterData, setCharacterData] = useState<\n    CharacterData[] | undefined\n  >(undefined);\n\n  const hasManifestData = !!manifestData;\n\n  useEffect(() => {\n    const doAuth = async () => {\n      const authResult = await auth();\n      if (authResult) {\n        setIsAuthed(true);\n      } else {\n        setAuthError(true);\n        // Refresh automatically in 30s\n        setTimeout(refreshPage, AUTO_PAGE_REFRESH_DELAY);\n      }\n    };\n    if (!isAuthed) {\n      doAuth();\n    }\n  }, [isAuthed]);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const data = await getManifest();\n        setManifestData(data);\n      } catch (e) {\n        console.error(e.message);\n        setManifestError(true);\n      }\n    })();\n  }, []);\n\n  useEffect(() => {\n    const doGetCharacterData = (returnBasicCharacterData: boolean = false) => {\n      if (!isFetchingCharacterData) {\n        getCharacterData(\n          setCharacterData,\n          setIsFetchingCharacterData,\n          returnBasicCharacterData\n        );\n      }\n    };\n    if (isAuthed && hasMembership && !isFetchingCharacterData) {\n      if (!characterDataRefreshTimer) {\n        characterDataRefreshTimer = setInterval(\n          doGetCharacterData,\n          CHARACTER_DATA_REFRESH_TIMER\n        );\n        doGetCharacterData(true);\n        (window as any).refreshCharacterData = () => doGetCharacterData();\n      }\n    }\n  }, [isAuthed, hasMembership, hasManifestData, isFetchingCharacterData]);\n\n  const onSelectMembership = (membership: UserInfoCard) => {\n    ga.event({\n      category: \"Platform\",\n      action: \"Select platform\",\n      label: `Membership type: ${membership.membershipType}`\n    });\n    setSelectedDestinyMembership(membership);\n    setHasMembership(true);\n  };\n\n  let status: string | JSX.Element = \"\";\n  if (hasAuthError) {\n    status = (\n      <span>\n        Authentication error, <a href=\"/\">refresh page</a> to try again!\n      </span>\n    );\n  } else if (hasManifestError) {\n    status = (\n      <span>\n        Error fetching manifest, <a href=\"/\">refresh page</a> to try again!\n      </span>\n    );\n  } else if (!isAuthed) {\n    status = \"Authenticating...\";\n  } else if (!hasMembership) {\n    status = \"Waiting for Destiny platform selection...\";\n  } else if (!hasManifestData) {\n    status = \"Fetching Destiny item manifest...\";\n  } else if (!characterData || characterData.length === 0) {\n    if (isFetchingCharacterData) {\n      status = \"Fetching character data...\";\n    } else {\n      status = \"No character data\";\n    }\n  }\n\n  (window as any).characterData = characterData;\n\n  if (characterData && characterData.length > 0) {\n    return (\n      <div className={STYLES.App}>\n        <MembershipSelect onMembershipSelect={onSelectMembership} />\n        <div className={STYLES.charactersContainer}>\n          <div className={STYLES.characters}>\n            {characterData.map(c => (\n              <CharacterDisplay key={c.id} data={c} />\n            ))}\n          </div>\n        </div>\n        <VendorDisplay manifestData={manifestData} />\n        {status && <LoadingSpinner>{status}</LoadingSpinner>}\n        {isFetchingCharacterData && <FetchSpinner />}\n      </div>\n    );\n  }\n\n  return (\n    <div className={STYLES.App}>\n      <MembershipSelect onMembershipSelect={onSelectMembership} />\n      <LoadingSpinner>{status}</LoadingSpinner>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"anchor\":\"FetchSpinner_anchor__2bpEe\",\"spinner\":\"FetchSpinner_spinner__3uf-_\",\"spin\":\"FetchSpinner_spin__3wMft\",\"fetchSpinnerContainer\":\"FetchSpinner_fetchSpinnerContainer__2f9d4\",\"spinnerSmall\":\"FetchSpinner_spinnerSmall__2pJsX\",\"spinnerTiny\":\"FetchSpinner_spinnerTiny__1LS_-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__15LM-\",\"loadingContainer\":\"App_loadingContainer__1Pa9s\",\"charactersContainer\":\"App_charactersContainer__1RSU_\",\"characters\":\"App_characters__1GhrS\",\"loadingStatus\":\"App_loadingStatus__3QEhd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"membershipSelect\":\"MembershipSelect_membershipSelect__3GbZz\",\"membership\":\"MembershipSelect_membership__3vKKK\",\"platform_xbox\":\"MembershipSelect_platform_xbox__1EgLN\",\"platform_psn\":\"MembershipSelect_platform_psn__2ASN8\",\"platform_steam\":\"MembershipSelect_platform_steam__3zG5m\",\"platform_blizzard\":\"MembershipSelect_platform_blizzard__1zLDb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hints\":\"PowerHints_hints__9HbgH\",\"hint\":\"PowerHints_hint__2zx_C\",\"worldDropHint\":\"PowerHints_worldDropHint__3M_Nv\",\"powerfulHint\":\"PowerHints_powerfulHint__26w25\",\"pinnacleHint\":\"PowerHints_pinnacleHint__c2cdM\",\"separator\":\"PowerHints_separator__1_of2\",\"hintExtra\":\"PowerHints_hintExtra__2TIGc\",\"hintExtraInner\":\"PowerHints_hintExtraInner__2tEbw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"vendorDisplay\":\"VendorDisplay_vendorDisplay__3ggMy\",\"section\":\"VendorDisplay_section__2vxeV\",\"description\":\"VendorDisplay_description__1_SQm\",\"vendorList\":\"VendorDisplay_vendorList__3mO3g\",\"vendor\":\"VendorDisplay_vendor__oSDhY\",\"high\":\"VendorDisplay_high__1YiAA\",\"icon\":\"VendorDisplay_icon__3jZn7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inlinePowerNumber\":\"Power_inlinePowerNumber__28Oqz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"barWrapper\":\"PowerBar_barWrapper__2Er15\",\"iconWrapper\":\"PowerBar_iconWrapper__1k9U_\",\"icon\":\"PowerBar_icon__3zN_u\",\"barContainer\":\"PowerBar_barContainer__KfIri\",\"barLine\":\"PowerBar_barLine__Fc3BR\",\"filledBar\":\"PowerBar_filledBar__3a32S\",\"label\":\"PowerBar_label__32eba\",\"power\":\"PowerBar_power__2ZVuC\",\"max\":\"PowerBar_max__L5cvP\",\"belowAverage\":\"PowerBar_belowAverage__2r-Dj\"};"],"sourceRoot":""}