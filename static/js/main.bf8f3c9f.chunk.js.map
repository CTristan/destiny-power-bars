{"version":3,"sources":["components/characterDisplay/PowerBars.module.scss","components/characterDisplay/PowerDetails.module.scss","components/CharacterDisplay.module.scss","components/LoadingSpinner.module.scss","services/ga.ts","services/bungie-api.ts","services/bungie-auth.ts","constants.ts","components/characterDisplay/PowerBar.tsx","components/characterDisplay/PowerBars.tsx","services/vendor-engrams.ts","components/characterDisplay/Power.tsx","components/characterDisplay/PowerDetails.tsx","components/characterDisplay/PowerHints.tsx","components/CharacterDisplay.tsx","components/FetchSpinner.tsx","components/LoadingSpinner.tsx","components/MembershipSelect.tsx","services/utils.ts","App.tsx","serviceWorker.ts","index.tsx","components/FetchSpinner.module.scss","App.module.scss","components/MembershipSelect.module.scss","components/characterDisplay/PowerHints.module.scss","components/characterDisplay/PowerBar.module.scss","components/characterDisplay/Power.module.scss"],"names":["module","exports","ReactGA","initialize","debug","process","set","anonymizeIp","pageview","window","location","pathname","search","cachedManifestData","getManifestPromise","bungieAuthedFetch","config","a","accessToken","getAccessToken","headers","BUNGIE_API_KEY","Authorization","url","params","Object","entries","map","key","value","encodeURIComponent","fetch","response","json","console","error","manifestPropertyWhitelist","getCachedManifestData","log","get","manifestData","getRemoteManifestData","manifest","Error","version","jsonWorldContentPaths","en","manifestDataResponse","keys","forEach","includes","localStorage","setItem","getManifest","ga","event","category","action","nonInteraction","getDestinyManifest","localStorageManifestVersion","getItem","Response","ErrorStatus","undefined","freshManifestData","getBasicProfile","membershipType","membershipId","getProfile","components","destinyMembershipId","getFullProfile","clearStorage","removeItem","handleTokenResponse","tokenResponse","status","data","access_token","tokenDuration","expires_in","expiryTime","Date","now","bungieMembershipId","membership_id","toString","getMembershipDataById","destinyMembershipsResponse","authSuccess","destinyMemberships","JSON","stringify","length","setSelectedDestinyMembership","fetchAuthToken","authCode","body","cache","credentials","method","redirect","referrer","hasValidAuth","accessTokenExpiryTime","parseInt","getDestinyMemberships","destinyMembershipsString","parse","e","message","getSelectedDestinyMembership","destinyMembershipString","membership","auth","queryParams","URLSearchParams","authResponse","replace","origin","ITEM_SLOT_BUCKETS","ITEM_BUCKET_SLOTS","reduce","buckets","slot","bucket","ORDERED_ITEM_SLOTS","ITEM_TYPE_ARMOR","ITEM_TYPE_WEAPON","CLASS_NAMES","PowerBar","min","max","avgValue","label","icon","range","perc","Math","floor","avgPerc","fullLabelText","fullLabel","className","STYLES","classnames","power","belowAverage","slotName","barWrapper","iconWrapper","src","alt","barContainer","filledBar","style","width","barLine","left","vendorEngramsData","vendorEngramsRefreshTimer","vendorEngramsRefreshPromise","classItemNames","hunter","titan","warlock","PowerBars","powerBySlot","slots","topItemBySlot","instanceData","primaryStat","overallPower","roundedPower","minItemPower","values","minPowerToDisplay","maxItemPower","maxItemPowerGrouping","maxPowerToDisplay","ceil","powerBars","powerRange","minPower","rangeLine","maxPower","bars","bestItem","id","chest","classItem","energy","gloves","head","kinetic","legs","itemDefinition","displayProperties","powerLabel","indicator","Power","children","inlinePowerNumber","PowerDetails","artifactData","bonusPower","details","detailsRow","detailsLabel","defailsValue","detailsInlineIcon","iconPath","name","detailsValue","VENDOR_DISPLAY_NAMES","devrim","sloane","failsafe","asher","zavala","shaxx","banshee","fanboy","bray","werner","refreshVendorEngramsData","jsonData","updateTimestamp","getVendorEngramsData","setInterval","catch","warn","PowerHints","highVendors","vendorData","filter","v","drop","display","useState","vendorStaleTimeString","setVendorStaleTimeString","useEffect","timeStringUpdateTimer","newString","humanizeDuration","round","clearInterval","hints","potentialOverallPower","hint","worldDropHint","hintExtra","hintExtraInner","href","target","rel","shorthand","powerRequiredToReachPotential","powerfulHint","pinnacleHint","CharacterDisplay","text","summableArtifactBonusPower","characterDisplay","backgroundColor","red","green","blue","rgbString","character","emblemColor","header","emblemBackground","emblemBackgroundPath","substr","toUpperCase","content","FetchSpinner","fetchSpinnerContainer","anchor","spinner","spinnerSmall","LoadingSpinner","loadingSpinnerContainer","spinnerLarge","MembershipSelect","onMembershipSelect","PLATFORMS","1","2","3","4","membershipSelect","m","onClick","displayName","characterDataRefreshTimer","getPowerBySlot","itemsBySlot","mapValues","item","getAveragePower","sum","getOverallPower","mergeItems","characterItemMap","allItems","characterItems","concat","items","isItemEquippableByCharacter","canEquip","cannotEquipReason","equipRequiredLevel","baseCharacterLevel","classType","getBasicCharacterData","pendingBasicProfile","profile","characters","getDataForCharacterId","light","characterIds","characterData","getCharacterData","setCharacterData","setIsFetchingCharacterData","returnBasicCharacterData","setVendorData","pendingManifest","destinyMembership","shouldSetBasicCharacterData","pendingBasicCharacterData","basicCharacterData","fullProfile","characterEquipment","characterInventories","profileInventory","itemComponents","instances","characterEquipments","profileInventories","itemInstances","allCharacterItems","allCharacterWeapons","i","itemHash","DestinyInventoryItemDefinition","itemType","mapAndFilterItems","itemInstanceId","inventory","bucketTypeHash","relevantProfileItems","getItemScore","score","isEquipped","getEquipLabel","equippingBlock","uniqueLabel","groupBy","maxBy","uniqueEquippedGroups","forIn","uniqueEquippedGroup","validItemCombinations","otherItems","otherItem","isCombinationValid","combination","nonExotics","push","bestCombination","sumBy","artifactItemComponent","flatMap","find","artifactDefinition","potentialPowerBySlot","tempPotentialOverallPower","some","averagePower","then","refreshPage","App","isAuthed","setIsAuthed","hasAuthError","setAuthError","hasMembership","setHasMembership","hasManifestData","setHasManifestData","hasManifestError","setManifestError","isFetchingCharacterData","setTimeout","doAuth","doGetCharacterData","refreshCharacterData","onSelectMembership","charactersContainer","c","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bf8f3c9f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"powerBars\":\"PowerBars_powerBars__33tbb\",\"powerRange\":\"PowerBars_powerRange__te0OD\",\"rangeLine\":\"PowerBars_rangeLine__3sXeP\",\"powerLabel\":\"PowerBars_powerLabel__z9Lm2\",\"indicator\":\"PowerBars_indicator__1UcsC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"details\":\"PowerDetails_details__1vqno\",\"detailsRow\":\"PowerDetails_detailsRow__20lfp\",\"detailsLabel\":\"PowerDetails_detailsLabel__2dvVG\",\"detailsInlineIcon\":\"PowerDetails_detailsInlineIcon__1Pqe3\",\"detailsValue\":\"PowerDetails_detailsValue__3daTt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"characterDisplay\":\"CharacterDisplay_characterDisplay__20O9A\",\"header\":\"CharacterDisplay_header__2fx5d\",\"emblemBackground\":\"CharacterDisplay_emblemBackground__2pAjE\",\"name\":\"CharacterDisplay_name__2j8PA\",\"power\":\"CharacterDisplay_power__1p583\",\"content\":\"CharacterDisplay_content__263Ab\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"anchor\":\"LoadingSpinner_anchor__78Pnm\",\"spinner\":\"LoadingSpinner_spinner__32tWn\",\"spin\":\"LoadingSpinner_spin__3FVoi\",\"loadingSpinnerContainer\":\"LoadingSpinner_loadingSpinnerContainer__2QV5S\",\"spinnerLarge\":\"LoadingSpinner_spinnerLarge__KooL0\",\"spinnerSmall\":\"LoadingSpinner_spinnerSmall__27lWl\",\"status\":\"LoadingSpinner_status__3sgCR\"};","import ReactGA from \"react-ga\";\r\n\r\nReactGA.initialize(\"UA-149614480-1\", {\r\n  debug: process.env.NODE_ENV === \"development\"\r\n});\r\n\r\n// Anonymize IP addresses, yay GDPR\r\nReactGA.set({ anonymizeIp: true });\r\nReactGA.pageview(window.location.pathname + window.location.search);\r\n\r\nexport default ReactGA;\r\n","import { get, set } from \"idb-keyval\";\n\nimport {\n  DestinyInventoryItemDefinition,\n  DestinyManifest,\n  getDestinyManifest,\n  getProfile\n} from \"bungie-api-ts/destiny2\";\nimport { HttpClientConfig } from \"bungie-api-ts/http\";\nimport { BUNGIE_API_KEY, getAccessToken } from \"./bungie-auth\";\nimport ga from \"./ga\";\n\nexport const bungieAuthedFetch = async (config: HttpClientConfig) => {\n  try {\n    const accessToken = getAccessToken();\n    const headers: { [key: string]: string } = { \"x-api-key\": BUNGIE_API_KEY };\n    if (accessToken) {\n      headers.Authorization = `Bearer ${accessToken}`;\n    }\n    const url = `${config.url}${\n      config.params\n        ? \"?\" +\n          Object.entries(config.params).map(\n            ([key, value]) =>\n              `${encodeURIComponent(key)}=${encodeURIComponent(\n                value as string\n              )}`\n          )\n        : \"\"\n    }`;\n    const response = await fetch(url, { headers });\n    return await response.json();\n  } catch (e) {\n    console.error(e);\n    return {};\n  }\n};\n\nconst MANIFEST_VERSION_KEY = \"MANIFEST_VERSION\";\nconst MANIFEST_IDB_KEY = \"MANIFEST_DATA\";\ninterface ManifestData {\n  DestinyInventoryItemDefinition: {\n    [key: string]: DestinyInventoryItemDefinition | undefined;\n  };\n}\nconst manifestPropertyWhitelist = [\"DestinyInventoryItemDefinition\"];\n\nconst getCachedManifestData = async () => {\n  console.log(\"Loading manifest data from IDB\");\n  const manifestData = await get(MANIFEST_IDB_KEY);\n  console.log(\"Finished loading manifest data from IDB\");\n  return manifestData as ManifestData;\n};\n\nconst getRemoteManifestData = async (manifest: DestinyManifest) => {\n  if (!manifest) {\n    throw Error(\"No manifest!\");\n  }\n  const version = manifest.version;\n  console.log(\"Fetching fresh manifest data\");\n  const manifestDataResponse = await fetch(\n    `https://www.bungie.net${manifest.jsonWorldContentPaths.en}`\n  );\n  const manifestData = await manifestDataResponse.json();\n  console.log(\"Pruning manifest data\");\n  Object.keys(manifestData).forEach(key => {\n    if (!manifestPropertyWhitelist.includes(key)) {\n      delete manifestData[key];\n    }\n  });\n  console.log(\"Storing manifest data in IDB\");\n  await set(MANIFEST_IDB_KEY, manifestData);\n  localStorage.setItem(MANIFEST_VERSION_KEY, version);\n  return manifestData;\n};\n\nlet cachedManifestData: ManifestData | undefined;\nlet getManifestPromise: Promise<ManifestData> | undefined;\n\nexport const getManifest = async (): Promise<ManifestData> => {\n  if (!getManifestPromise) {\n    getManifestPromise = (async () => {\n      ga.event({\n        category: \"Data\",\n        action: \"Attempt load manifest\",\n        nonInteraction: true\n      });\n      const manifest = await getDestinyManifest(bungieAuthedFetch);\n      const localStorageManifestVersion = localStorage.getItem(\n        MANIFEST_VERSION_KEY\n      );\n      if (\n        manifest &&\n        manifest.Response &&\n        manifest.Response.version === localStorageManifestVersion &&\n        !window.location.search.includes(\"updateManifest\")\n      ) {\n        if (!cachedManifestData) {\n          cachedManifestData = await getCachedManifestData();\n        }\n        return cachedManifestData;\n      }\n      if (\n        manifest &&\n        manifest.ErrorStatus &&\n        manifest.ErrorStatus !== \"Success\"\n      ) {\n        ga.event({\n          category: \"Errors\",\n          action: `Error status \"${manifest.ErrorStatus}\" returned from manifest request`,\n          nonInteraction: true\n        });\n        throw Error(\n          `Error status \"${manifest.ErrorStatus}\" returned from manifest request`\n        );\n      }\n      if (!manifest || !manifest.Response) {\n        throw Error(\"No manifest received!\");\n      }\n      cachedManifestData = undefined;\n      ga.event({\n        category: \"Data\",\n        action: \"Fetch remote manifest\",\n        nonInteraction: true\n      });\n      const freshManifestData = await getRemoteManifestData(manifest.Response);\n      cachedManifestData = freshManifestData;\n      return freshManifestData;\n    })();\n  }\n  return getManifestPromise;\n};\n\nexport const getBasicProfile = (\n  membershipType: number,\n  membershipId: string\n) => {\n  ga.event({\n    category: \"Character Data\",\n    action: \"Fetch minimal profile\",\n    nonInteraction: true\n  });\n  return getProfile(bungieAuthedFetch, {\n    components: [\n      200, // DestinyComponentType.Characters,\n      205 // DestinyComponentType.CharacterEquipment,\n    ],\n    destinyMembershipId: membershipId,\n    membershipType\n  });\n};\n\nexport const getFullProfile = (\n  membershipType: number,\n  membershipId: string\n) => {\n  ga.event({\n    category: \"Character Data\",\n    action: \"Fetch full profile\",\n    nonInteraction: true\n  });\n  return getProfile(bungieAuthedFetch, {\n    components: [\n      200, // DestinyComponentType.Characters,\n      201, // DestinyComponentType.CharacterInventories,\n      205, // DestinyComponentType.CharacterEquipment,\n      102, // DestinyComponentType.ProfileInventories,\n      300 // DestinyComponentType.ItemInstances,\n    ],\n    destinyMembershipId: membershipId,\n    membershipType\n  });\n};\n","import { getMembershipDataById, UserInfoCard } from \"bungie-api-ts/user\";\r\nimport { bungieAuthedFetch } from \"./bungie-api\";\r\nimport ga from \"./ga\";\r\n\r\nconst isDev = process.env.NODE_ENV === \"development\";\r\nexport const BUNGIE_API_KEY = isDev\r\n  ? \"f7f184669f044a89b560fc5f71ed5d60\"\r\n  : \"d94be1e34632448fafdaf77c7afbb501\";\r\nconst BUNGIE_OAUTH_AUTHORIZE_URL = \"https://www.bungie.net/en/OAuth/Authorize\";\r\nconst BUNGIE_OAUTH_CLIENT_ID = isDev ? \"26087\" : \"27213\";\r\nconst BUNGIE_OAUTH_TOKEN_URL =\r\n  \"https://www.bungie.net/platform/app/oauth/token/\";\r\n\r\nconst ACCESS_TOKEN_STORAGE_KEY = \"bungieAccessToken\";\r\nconst ACCESS_TOKEN_EXPIRY_STORAGE_KEY = \"bungieAccessTokenExpiryTime\";\r\nconst BUNGIE_MEMBERSHIP_ID_STORAGE_KEY = \"bungieMembershipId\";\r\nconst DESTINY_MEMBERSHIPS_STORAGE_KEY = \"destinyMemberships\";\r\nconst DESTINY_MEMBERSHIP_STORAGE_KEY = \"destinyMembership\";\r\n\r\nconst clearStorage = () => {\r\n  localStorage.removeItem(ACCESS_TOKEN_STORAGE_KEY);\r\n  localStorage.removeItem(ACCESS_TOKEN_EXPIRY_STORAGE_KEY);\r\n  localStorage.removeItem(BUNGIE_MEMBERSHIP_ID_STORAGE_KEY);\r\n  localStorage.removeItem(DESTINY_MEMBERSHIPS_STORAGE_KEY);\r\n  localStorage.removeItem(DESTINY_MEMBERSHIP_STORAGE_KEY);\r\n};\r\n\r\nconst getAuthUrl = () =>\r\n  `${BUNGIE_OAUTH_AUTHORIZE_URL}?response_type=code&client_id=${BUNGIE_OAUTH_CLIENT_ID}`;\r\n\r\nconst redirectToAuth = () => {\r\n  console.log(\"Redirect to auth\");\r\n  clearStorage();\r\n  ga.event({\r\n    category: \"Auth\",\r\n    action: \"Redirect to oauth\",\r\n    nonInteraction: true\r\n  });\r\n  window.location.replace(getAuthUrl());\r\n};\r\n\r\nconst handleTokenResponse = async (\r\n  tokenResponse: Response,\r\n  redirect: boolean = false\r\n) => {\r\n  console.log(\"handleTokenResponse\");\r\n  clearStorage();\r\n  if (tokenResponse.status === 200) {\r\n    const data = await tokenResponse.json();\r\n    const accessToken = data.access_token as string;\r\n    const tokenDuration = data.expires_in as number;\r\n    const expiryTime = Date.now() + tokenDuration * 1000;\r\n    const bungieMembershipId = data.membership_id as string;\r\n\r\n    localStorage.setItem(ACCESS_TOKEN_STORAGE_KEY, accessToken);\r\n    localStorage.setItem(\r\n      ACCESS_TOKEN_EXPIRY_STORAGE_KEY,\r\n      expiryTime.toString()\r\n    );\r\n    localStorage.setItem(BUNGIE_MEMBERSHIP_ID_STORAGE_KEY, bungieMembershipId);\r\n\r\n    // 254 = all memberships\r\n    const destinyMembershipsResponse = await getMembershipDataById(\r\n      bungieAuthedFetch,\r\n      { membershipId: bungieMembershipId, membershipType: 254 }\r\n    );\r\n\r\n    if (\r\n      !destinyMembershipsResponse ||\r\n      !destinyMembershipsResponse.Response ||\r\n      (destinyMembershipsResponse.ErrorStatus &&\r\n        destinyMembershipsResponse.ErrorStatus !== \"Success\")\r\n    ) {\r\n      ga.event({\r\n        category: \"Errors\",\r\n        action: `Destiny membership fetch error, status: ${destinyMembershipsResponse.ErrorStatus}`,\r\n        nonInteraction: true\r\n      });\r\n      return {\r\n        authSuccess: false,\r\n        error: `Status code ${destinyMembershipsResponse.ErrorStatus} from memberships endpoint`\r\n      };\r\n    }\r\n\r\n    const destinyMemberships =\r\n      destinyMembershipsResponse.Response.destinyMemberships;\r\n    localStorage.setItem(\r\n      DESTINY_MEMBERSHIPS_STORAGE_KEY,\r\n      JSON.stringify(destinyMemberships)\r\n    );\r\n\r\n    // If there is only one membership, select it automatically\r\n    if (destinyMemberships.length === 1) {\r\n      setSelectedDestinyMembership(destinyMemberships[0]);\r\n    }\r\n\r\n    return { accessToken, authSuccess: true };\r\n  } else {\r\n    if (tokenResponse.status !== 200) {\r\n      ga.event({\r\n        category: \"Auth\",\r\n        action: `Status code ${tokenResponse.status} from authentication request`,\r\n        nonInteraction: true\r\n      });\r\n      return {\r\n        authSuccess: false,\r\n        error: `Status code ${tokenResponse.status} from authentication request`\r\n      };\r\n    }\r\n    // return redirectToAuth()\r\n  }\r\n};\r\n\r\nconst fetchAuthToken = async (authCode: string) => {\r\n  console.log(\"fetchAuthToken\", authCode);\r\n  clearStorage();\r\n  ga.event({\r\n    category: \"Auth\",\r\n    action: \"Oauth token request\",\r\n    nonInteraction: true\r\n  });\r\n  const tokenResponse = await fetch(BUNGIE_OAUTH_TOKEN_URL, {\r\n    body: `grant_type=authorization_code&code=${authCode}&client_id=${BUNGIE_OAUTH_CLIENT_ID}`,\r\n    cache: \"no-cache\",\r\n    credentials: \"include\",\r\n    headers: {\r\n      \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n    },\r\n    method: \"POST\",\r\n    redirect: \"follow\",\r\n    referrer: \"no-referrer\"\r\n  });\r\n  return await handleTokenResponse(tokenResponse);\r\n};\r\n\r\nexport const getAccessToken = () => {\r\n  return localStorage.getItem(ACCESS_TOKEN_STORAGE_KEY);\r\n};\r\n\r\nexport const hasValidAuth = () => {\r\n  const accessToken = getAccessToken();\r\n  const accessTokenExpiryTime = parseInt(\r\n    localStorage.getItem(ACCESS_TOKEN_EXPIRY_STORAGE_KEY) || \"-1\",\r\n    10\r\n  );\r\n  const bungieMembershipId = localStorage.getItem(\r\n    BUNGIE_MEMBERSHIP_ID_STORAGE_KEY\r\n  );\r\n  if (\r\n    !accessToken ||\r\n    Date.now() >= accessTokenExpiryTime ||\r\n    !bungieMembershipId\r\n  ) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nexport const getDestinyMemberships = () => {\r\n  const destinyMembershipsString = localStorage.getItem(\r\n    DESTINY_MEMBERSHIPS_STORAGE_KEY\r\n  );\r\n  try {\r\n    if (destinyMembershipsString) {\r\n      return JSON.parse(destinyMembershipsString) as UserInfoCard[];\r\n    }\r\n  } catch (e) {\r\n    ga.event({\r\n      category: \"Data\",\r\n      action: \"Error loading destiny memberships from local storage\",\r\n      nonInteraction: true\r\n    });\r\n    console.error(`Error loading destiny memberships`, e.message);\r\n  }\r\n  return undefined;\r\n};\r\n\r\nexport const hasDestinyMemberships = () => {\r\n  return !!getDestinyMemberships();\r\n};\r\n\r\nexport const getSelectedDestinyMembership = () => {\r\n  const destinyMembershipString = localStorage.getItem(\r\n    DESTINY_MEMBERSHIP_STORAGE_KEY\r\n  );\r\n  try {\r\n    if (destinyMembershipString) {\r\n      return JSON.parse(destinyMembershipString) as UserInfoCard;\r\n    }\r\n  } catch (e) {\r\n    ga.event({\r\n      category: \"Data\",\r\n      action: \"Error loading destiny membership from local storage\",\r\n      nonInteraction: true\r\n    });\r\n    console.error(\"Error loading destiny membership\", e.message);\r\n  }\r\n  return undefined;\r\n};\r\n\r\nexport const hasSelectedDestinyMembership = () => {\r\n  return !!getSelectedDestinyMembership();\r\n};\r\n\r\nexport const setSelectedDestinyMembership = (membership: UserInfoCard) => {\r\n  localStorage.setItem(\r\n    DESTINY_MEMBERSHIP_STORAGE_KEY,\r\n    JSON.stringify(membership)\r\n  );\r\n};\r\n\r\nexport const auth = async () => {\r\n  const queryParams = new URLSearchParams(window.location.search);\r\n  const authCode = queryParams.get(\"code\");\r\n\r\n  if (authCode && !hasValidAuth()) {\r\n    console.log(\"Fetching access token with auth code\");\r\n    const authResponse = await fetchAuthToken(authCode);\r\n    if (authResponse && authResponse.authSuccess === false) {\r\n      console.error(authResponse.error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  if (authCode) {\r\n    window.location.replace(\r\n      `${window.location.origin}${window.location.pathname}`\r\n    );\r\n  }\r\n\r\n  if (hasValidAuth() && hasDestinyMemberships()) {\r\n    return true;\r\n  }\r\n\r\n  ga.event({\r\n    category: \"System\",\r\n    action: \"Redirect for fresh authentication\",\r\n    nonInteraction: true\r\n  });\r\n  console.log(\r\n    \"Redirecting to fresh authentication for missing or expired access token, or missing destiny memberships\"\r\n  );\r\n  clearStorage();\r\n  redirectToAuth();\r\n};\r\n","export const ITEM_SLOT_KINETIC = \"kinetic\";\r\nexport const ITEM_SLOT_ENERGY = \"energy\";\r\nexport const ITEM_SLOT_POWER = \"power\";\r\nexport const ITEM_SLOT_HEAD = \"head\";\r\nexport const ITEM_SLOT_GLOVES = \"gloves\";\r\nexport const ITEM_SLOT_CHEST = \"chest\";\r\nexport const ITEM_SLOT_LEGS = \"legs\";\r\nexport const ITEM_SLOT_CLASS_ITEM = \"classItem\";\r\n\r\nexport const ITEM_SLOT_BUCKETS = {\r\n  [ITEM_SLOT_KINETIC]: 1498876634,\r\n  [ITEM_SLOT_ENERGY]: 2465295065,\r\n  [ITEM_SLOT_POWER]: 953998645,\r\n  [ITEM_SLOT_HEAD]: 3448274439,\r\n  [ITEM_SLOT_GLOVES]: 3551918588,\r\n  [ITEM_SLOT_CHEST]: 14239492,\r\n  [ITEM_SLOT_LEGS]: 20886954,\r\n  [ITEM_SLOT_CLASS_ITEM]: 1585787867\r\n};\r\n\r\nexport const ITEM_BUCKET_SLOTS = Object.entries(ITEM_SLOT_BUCKETS).reduce(\r\n  (buckets, [slot, bucket]) => ({ ...buckets, [bucket]: slot }),\r\n  {} as { [bucket: number]: string }\r\n);\r\n\r\nexport const ITEM_SLOT_GROUP_WEAPONS = [\r\n  ITEM_SLOT_KINETIC,\r\n  ITEM_SLOT_ENERGY,\r\n  ITEM_SLOT_POWER\r\n];\r\nexport const ITEM_SLOT_GROUP_ARMOR = [\r\n  ITEM_SLOT_HEAD,\r\n  ITEM_SLOT_GLOVES,\r\n  ITEM_SLOT_CHEST,\r\n  ITEM_SLOT_LEGS,\r\n  ITEM_SLOT_CLASS_ITEM\r\n];\r\n\r\nexport const ORDERED_ITEM_SLOTS = [\r\n  ...ITEM_SLOT_GROUP_WEAPONS,\r\n  ...ITEM_SLOT_GROUP_ARMOR\r\n];\r\n\r\nexport const ITEM_TIER_TYPE_EXOTIC = 6;\r\n\r\nexport const ITEM_TYPE_ARMOR = 2;\r\nexport const ITEM_TYPE_WEAPON = 3;\r\n\r\nexport const CLASS_TYPE_ALL = 3;\r\n\r\nexport const CLASS_TITAN = \"titan\";\r\nexport const CLASS_HUNTER = \"hunter\";\r\nexport const CLASS_WARLOCK = \"warlock\";\r\n\r\nexport const CLASS_NAMES = [CLASS_TITAN, CLASS_HUNTER, CLASS_WARLOCK];\r\n\r\nexport const ITEM_TYPE_ARTIFACT = 28;\r\nexport const UNDYING_ARTIFACT_ITEM_HASH = 1387688628;\r\n","import classnames from \"classnames\";\nimport React from \"react\";\n\nimport STYLES from \"./PowerBar.module.scss\";\n\ninterface BarProps {\n  min: number;\n  max: number;\n  value: number;\n  avgValue: number;\n  label: string;\n  icon?: string;\n}\n\nexport const PowerBar = ({\n  min,\n  max,\n  value,\n  avgValue,\n  label,\n  icon\n}: BarProps) => {\n  const range = max - min;\n  const perc = Math.floor(((value - min) / range) * 1000) / 10;\n  const avgPerc = Math.floor(((avgValue - min) / range) * 1000) / 10;\n  // const plusTwoPerc = Math.floor(((avgValue + 2 - min) / range) * 1000) / 10\n  // const plusFivePerc = Math.floor(((avgValue + 5 - min) / range) * 1000) / 10\n  const fullLabelText = `${value} ${label}`;\n  const fullLabel = (\n    <span className={STYLES.label}>\n      <span\n        className={classnames(STYLES.power, {\n          [STYLES.max]: value >= max,\n          [STYLES.belowAverage]: value < avgValue\n        })}\n      >\n        {value}\n      </span>\n      <span className={STYLES.slotName}>{label}</span>\n    </span>\n  );\n  return (\n    <div className={STYLES.barWrapper}>\n      <div className={STYLES.iconWrapper}>\n        {icon && (\n          <img\n            className={STYLES.icon}\n            src={`https://www.bungie.net${icon}`}\n            alt={fullLabelText}\n          />\n        )}\n      </div>\n      <div className={STYLES.barContainer}>\n        <div className={STYLES.filledBar} style={{ width: `${perc}%` }}>\n          {fullLabel}\n        </div>\n        <div className={STYLES.barLine} style={{ left: `${avgPerc}%` }} />\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport { ORDERED_ITEM_SLOTS } from \"../../constants\";\nimport { CharacterData, PowerBySlot } from \"../../types\";\nimport { PowerBar } from \"./PowerBar\";\nimport STYLES from \"./PowerBars.module.scss\";\n\nconst classItemNames: { [key: string]: string } = {\n  hunter: \"Hunter Cloak\",\n  titan: \"Titan Mark\",\n  warlock: \"Warlock Bond\"\n};\nconst slotFullNames = (className: string): { [key: string]: string } => ({\n  chest: \"Chest Armor\",\n  classItem: classItemNames[className],\n  energy: \"Energy Weapon\",\n  gloves: \"Gauntlets\",\n  head: \"Helmet\",\n  kinetic: \"Kinetic Weapon\",\n  legs: \"Leg Armor\",\n  power: \"Power Weapon\"\n});\n\ntype PowerBarsProps = CharacterData;\n\nexport const PowerBars = (data: PowerBarsProps) => {\n  // Get power by slot, using overall power if slot data does not exist\n  const powerBySlot = ORDERED_ITEM_SLOTS.reduce(\n    (slots, slotName) => ({\n      ...slots,\n      [slotName]: data.topItemBySlot\n        ? data.topItemBySlot[slotName].instanceData.primaryStat.value\n        : data.overallPower\n    }),\n    {} as PowerBySlot\n  );\n\n  const roundedPower = Math.floor(data.overallPower);\n  // Round to 50s\n  const minItemPower = Math.min(...Object.values(powerBySlot));\n  const minPowerToDisplay = Math.max(\n    Math.floor(minItemPower / 50) * 50 - 50,\n    0\n  );\n  const maxItemPower = Math.max(...Object.values(powerBySlot));\n  const maxItemPowerGrouping = maxItemPower <= 950 ? 50 : 10;\n  const maxPowerToDisplay =\n    Math.ceil(maxItemPower / maxItemPowerGrouping) * maxItemPowerGrouping;\n\n  const range = maxPowerToDisplay - minPowerToDisplay;\n  const perc =\n    Math.floor(((roundedPower - minPowerToDisplay) / range) * 1000) / 10;\n\n  return (\n    <div className={STYLES.powerBars}>\n      <div className={STYLES.powerRange}>\n        <div className={STYLES.minPower}>{minPowerToDisplay}</div>\n        <div className={STYLES.rangeLine} />\n        <div className={STYLES.maxPower}>{maxPowerToDisplay}</div>\n      </div>\n      <div className={STYLES.bars}>\n        {Object.entries(powerBySlot).map(([slotName, power]) => {\n          const bestItem = data.topItemBySlot && data.topItemBySlot[slotName];\n          return (\n            <PowerBar\n              key={`${data.id}_${slotName}`}\n              min={minPowerToDisplay}\n              max={maxPowerToDisplay}\n              value={power}\n              avgValue={roundedPower}\n              label={slotFullNames(data.className)[slotName] || slotName}\n              icon={\n                bestItem &&\n                bestItem.itemDefinition &&\n                bestItem.itemDefinition.displayProperties.icon\n              }\n            />\n          );\n        })}\n      </div>\n      <div className={STYLES.powerLabel}>\n        <div className={STYLES.indicator} style={{ left: `${perc}%` }}>\n          {roundedPower}\n        </div>\n      </div>\n    </div>\n  );\n};\n","const VENDOR_ENGRAMS_API_ENDPOINT =\n  \"https://api.vendorengrams.xyz/getVendorDrops\";\n\ninterface VendorEngramsVendorData {\n  vendorID: string;\n  display: string;\n  drop: string;\n  shorthand: string;\n  interval: string;\n  nextRefresh: string;\n}\n\nexport interface VendorEngramsData {\n  data: VendorEngramsVendorData[];\n  updateTimestamp: number;\n}\n\nexport const VENDOR_ENGRAMS_DROP_NO_DATA = \"0\";\nexport const VENDOR_ENGRAMS_DROP_LOW = \"1\";\nexport const VENDOR_ENGRAMS_DROP_HIGH = \"2\";\n\nconst VENDOR_DISPLAY_NAMES: { [shorthand: string]: string } = {\n  devrim: \"Devrim Kay (EDZ)\",\n  sloane: \"Sloane (Titan)\",\n  failsafe: \"Failsafe (Nessus)\",\n  asher: \"Asher Mir (Io)\",\n  zavala: \"Zavala (Vanguard, Tower)\",\n  shaxx: \"Shaxx (Crucible, Tower)\",\n  banshee: \"Banshee-44 (Gunsmith, Tower)\",\n  // benedict: \"Benedict\",\n  // saladin: \"Lord Saladin (Iron Banner, Tower)\",\n  fanboy: \"Brother Vance (Mercury)\",\n  bray: \"Ana Bray (Mars)\",\n  werner: \"Werner 99-40 (Tower, Nessus Barge)\"\n};\nexport const getVendorDisplayName = (shorthand: string) => {\n  return VENDOR_DISPLAY_NAMES[shorthand] || shorthand;\n};\n\nlet vendorEngramsData: VendorEngramsData | undefined;\nlet vendorEngramsRefreshTimer: number | NodeJS.Timeout | undefined;\nlet vendorEngramsRefreshPromise: Promise<VendorEngramsData> | undefined;\n\nconst VENDOR_ENGRAMS_REFRESH_DELAY = 5 * 60 * 1000;\n\nconst refreshVendorEngramsData = async () => {\n  const response = await fetch(VENDOR_ENGRAMS_API_ENDPOINT);\n  const jsonData = (await response.json()) as VendorEngramsVendorData[];\n  const updateTimestamp = Date.now();\n  const data = { data: jsonData, updateTimestamp };\n  vendorEngramsData = data;\n  return data;\n};\n\nexport const getVendorEngramsData = async () => {\n  if (vendorEngramsData) {\n    return vendorEngramsData;\n  }\n  if (!vendorEngramsRefreshPromise) {\n    vendorEngramsRefreshPromise = refreshVendorEngramsData();\n  }\n  if (!vendorEngramsRefreshTimer) {\n    vendorEngramsRefreshTimer = setInterval(() => {\n      refreshVendorEngramsData().catch(e =>\n        console.warn(\"Error refreshing vendorengrams.xyz data\", e)\n      );\n    }, VENDOR_ENGRAMS_REFRESH_DELAY);\n  }\n  return vendorEngramsRefreshPromise;\n};\n","import React from \"react\";\n\nimport STYLES from \"./Power.module.scss\";\n\ninterface PowerProps {\n  children: number | string;\n}\nexport const Power = ({ children }: PowerProps) => (\n  <span className={STYLES.inlinePowerNumber}>{children}</span>\n);\n","import React from \"react\";\n\nimport STYLES from \"./PowerDetails.module.scss\";\n\nimport { Power } from \"./Power\";\n\nconst withSign = (value: number) => {\n  if (value >= 0) {\n    return `+${value}`;\n  }\n  return `${value}`;\n};\n\ninterface PowerDetailsProps {\n  overallPower: number;\n  artifactData?: {\n    name: string;\n    iconPath: string;\n    bonusPower: number;\n  };\n}\n\nexport const PowerDetails = (data: PowerDetailsProps) => {\n  const roundedPower = Math.floor(data.overallPower);\n\n  /*\n  const summableArtifactBonusPower = data.artifactData\n    ? data.artifactData.bonusPower\n    : 0;\n    */\n\n  if (!data.artifactData || data.artifactData.bonusPower === 0) {\n    return null;\n  }\n\n  return (\n    <div className={STYLES.details}>\n      <div className={STYLES.detailsRow}>\n        <div className={STYLES.detailsLabel}>\n          Maximum equippable gear power:\n        </div>\n        <div className={STYLES.defailsValue}>\n          <Power>{roundedPower}</Power>\n        </div>\n      </div>\n      {data.artifactData ? (\n        <>\n          <div className={STYLES.detailsRow}>\n            <div className={STYLES.detailsLabel}>\n              <img\n                className={STYLES.detailsInlineIcon}\n                src={`https://www.bungie.net${data.artifactData.iconPath}`}\n                alt=\"\"\n              />\n              {data.artifactData.name} bonus power:\n            </div>\n            <div className={STYLES.detailsValue}>\n              <Power>{withSign(data.artifactData.bonusPower)}</Power>\n            </div>\n          </div>\n\n          {/*<div className={STYLES.detailsRow}>\n            <div className={STYLES.detailsLabel}>Total combined power:</div>\n            <div className={STYLES.detailsValue}>\n              <Power>{roundedPower + summableArtifactBonusPower}</Power>\n            </div>\n      </div>*/}\n        </>\n      ) : null}\n    </div>\n  );\n};\n","import classnames from \"classnames\";\nimport humanizeDuration from \"humanize-duration\";\nimport React, { useEffect, useState } from \"react\";\n\nimport {\n  getVendorDisplayName,\n  VENDOR_ENGRAMS_DROP_HIGH,\n  VendorEngramsData\n} from \"../../services/vendor-engrams\";\nimport { Power } from \"./Power\";\n\nimport STYLES from \"./PowerHints.module.scss\";\n\ninterface PowerHintsProps {\n  overallPower: number;\n  potentialOverallPower?: number;\n  powerRequiredToReachPotential?: number;\n  vendorData?: VendorEngramsData;\n}\n\nexport const PowerHints = (data: PowerHintsProps) => {\n  const highVendors =\n    (data.vendorData &&\n      data.vendorData.data.filter(\n        v => v.drop === VENDOR_ENGRAMS_DROP_HIGH && v.display === \"1\"\n      )) ||\n    [];\n\n  const [vendorStaleTimeString, setVendorStaleTimeString] = useState(\"\");\n\n  useEffect(() => {\n    const timeStringUpdateTimer = setInterval(() => {\n      if (!data.vendorData) {\n        return \"\";\n      }\n      const newString = humanizeDuration(\n        data.vendorData.updateTimestamp - Date.now(),\n        {\n          round: true\n        }\n      );\n      setVendorStaleTimeString(newString);\n    }, 1000);\n\n    return () => {\n      clearInterval(timeStringUpdateTimer);\n    };\n  });\n\n  return (\n    <div className={STYLES.hints}>\n      {data.potentialOverallPower &&\n      data.potentialOverallPower > data.overallPower ? (\n        <div className={classnames(STYLES.hint, STYLES.worldDropHint)}>\n          <span>\n            World drops can increase your overall gear power to{\" \"}\n            <Power>{data.potentialOverallPower}</Power>\n          </span>\n          <div className={STYLES.hintExtra}>\n            <div className={STYLES.hintExtraInner}>\n              <div>\n                World drops (from strikes, public events, vendors, non-powerful\n                legendary rewards) can drop with a power level from{\" \"}\n                <Power>{data.overallPower - 3}</Power> to{\" \"}\n                <Power>{data.overallPower}</Power> for this character.\n              </div>\n              {highVendors.length > 0 ? (\n                <div>\n                  The following vendors are giving engrams at your maximum\n                  equippable gear power, according to{\" \"}\n                  <a\n                    href=\"https://www.vendorengrams.xyz\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    vendorengrams.xyz\n                  </a>\n                  , last updated {vendorStaleTimeString} ago:\n                  <ul>\n                    {highVendors.map(v => (\n                      <li key={v.shorthand}>\n                        <Power>{getVendorDisplayName(v.shorthand)}</Power>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              ) : null}\n              <div>\n                Replacing items below your current overall power can increase\n                your power to a higher average.\n              </div>\n              {data.powerRequiredToReachPotential ? (\n                <div>\n                  You need an extra{\" \"}\n                  <Power>{data.powerRequiredToReachPotential}</Power> total\n                  power on your items to reach an overall power of{\" \"}\n                  <Power>{data.potentialOverallPower}</Power>.\n                </div>\n              ) : null}\n            </div>\n          </div>\n        </div>\n      ) : null}\n\n      {data.potentialOverallPower === data.overallPower &&\n      data.overallPower >= 900 &&\n      data.overallPower < 950 ? (\n        <div className={classnames(STYLES.hint, STYLES.powerfulHint)}>\n          <span>\n            Powerful rewards can increase your overall gear power up to the\n            powerful cap of <Power>{950}</Power>\n          </span>\n          <div className={STYLES.hintExtra}>\n            <div className={STYLES.hintExtraInner}>\n              <div>\n                Powerful and pinnacle reward sources (Weekly challenges, Year 3\n                raids) will give you items above your overall gear power, with\n                powerful rewards capped at <Power>{950}</Power>.\n              </div>\n              <div>\n                Powerful rewards (Tier 1) will give items up to 3 levels above\n                your overall gear power\n              </div>\n              <div>\n                Powerful rewards (Tier 2) will give items up to 5 levels above\n                your overall gear power\n              </div>\n              <div>\n                Pinnacle rewards will give items up to 7 levels above your\n                overall gear power\n              </div>\n              <div>\n                After getting a powerful reward, check back here to see if it's\n                beneficial to catch up the rest of your slots with world drops\n                before getting another!\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : null}\n\n      {data.potentialOverallPower === data.overallPower &&\n      data.overallPower >= 950 &&\n      data.overallPower < 960 ? (\n        <div className={classnames(STYLES.hint, STYLES.pinnacleHint)}>\n          <span>\n            Pinnacle rewards can increase your overall gear power up to the\n            pinnacle cap of <Power>{960}</Power>\n          </span>\n          <div className={STYLES.hintExtra}>\n            <div className={STYLES.hintExtraInner}>\n              <div>\n                Pinnacle reward sources (Weekly challenges, Year 3 raids) will\n                give you items above your overall gear power, capped at{\" \"}\n                <Power>{960}</Power>.\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n","import classnames from \"classnames\";\r\nimport React from \"react\";\r\n\r\nimport { VendorEngramsData } from \"../services/vendor-engrams\";\r\nimport { CharacterData } from \"../types\";\r\nimport STYLES from \"./CharacterDisplay.module.scss\";\r\nimport { PowerBars } from \"./characterDisplay/PowerBars\";\r\nimport { PowerDetails } from \"./characterDisplay/PowerDetails\";\r\nimport { PowerHints } from \"./characterDisplay/PowerHints\";\r\n\r\ninterface CharacterDisplayProps {\r\n  data: CharacterData;\r\n  vendorData?: VendorEngramsData;\r\n}\r\n\r\nconst titleCase = (text: string) =>\r\n  text.substr(0, 1).toUpperCase() + text.substr(1);\r\n\r\nconst CharacterDisplay = ({ data, vendorData }: CharacterDisplayProps) => {\r\n  const rgbString = ({\r\n    red,\r\n    green,\r\n    blue\r\n  }: {\r\n    red: number;\r\n    green: number;\r\n    blue: number;\r\n  }) => `rgb(${red},${green},${blue})`;\r\n\r\n  const roundedPower = Math.floor(data.overallPower);\r\n\r\n  const summableArtifactBonusPower = data.artifactData\r\n    ? data.artifactData.bonusPower\r\n    : 0;\r\n\r\n  return (\r\n    <div\r\n      className={classnames(\r\n        STYLES.characterDisplay,\r\n        STYLES[`class_${data.className}`]\r\n      )}\r\n      style={{ backgroundColor: rgbString(data.character.emblemColor) }}\r\n    >\r\n      <div className={STYLES.header}>\r\n        <img\r\n          className={STYLES.emblemBackground}\r\n          src={`https://www.bungie.net${data.character.emblemBackgroundPath}`}\r\n          alt=\"\"\r\n        />\r\n        <div className={STYLES.name}>{titleCase(data.className)}</div>\r\n        <div className={STYLES.power}>\r\n          {roundedPower + summableArtifactBonusPower}\r\n        </div>\r\n      </div>\r\n\r\n      <div className={STYLES.content}>\r\n        <PowerDetails {...data} />\r\n\r\n        <PowerBars {...data} />\r\n\r\n        <PowerHints {...data} vendorData={vendorData} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterDisplay;\r\n","import React from \"react\";\n\nimport STYLES from \"./FetchSpinner.module.scss\";\n\nconst FetchSpinner = () => (\n  <div className={STYLES.fetchSpinnerContainer}>\n    <div className={STYLES.anchor}>\n      <div className={STYLES.spinner} />\n      <div className={STYLES.spinnerSmall} />\n    </div>\n  </div>\n);\n\nexport default FetchSpinner;\n","import React from \"react\";\n\nimport STYLES from \"./LoadingSpinner.module.scss\";\n\ninterface LoadingSpinnerProps {\n  children: string | JSX.Element;\n}\n\nconst LoadingSpinner = ({ children }: LoadingSpinnerProps) => {\n  return (\n    <div className={STYLES.loadingSpinnerContainer}>\n      <div className={STYLES.anchor}>\n        <div className={STYLES.spinnerLarge} />\n        <div className={STYLES.spinnerSmall} />\n        <div className={STYLES.status}>{children}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import { UserInfoCard } from \"bungie-api-ts/user\";\nimport classnames from \"classnames\";\nimport React from \"react\";\n\nimport { getDestinyMemberships } from \"../services/bungie-auth\";\nimport STYLES from \"./MembershipSelect.module.scss\";\n\ninterface MembershipSelectProps {\n  onMembershipSelect: (membership: UserInfoCard) => any;\n}\n\nconst MembershipSelect = ({ onMembershipSelect }: MembershipSelectProps) => {\n  const destinyMemberships = getDestinyMemberships();\n\n  if (!destinyMemberships) {\n    return null;\n  }\n\n  if (destinyMemberships.length === 0) {\n    return <div>No destiny memberships!</div>;\n  }\n\n  const PLATFORMS: { [key: number]: string } = {\n    1: \"xbox\",\n    2: \"psn\",\n    3: \"steam\",\n    4: \"blizzard\"\n  };\n\n  return (\n    <div className={STYLES.membershipSelect}>\n      {destinyMemberships.map(m => {\n        return (\n          <div\n            key={m.membershipId}\n            className={classnames(\n              STYLES.membership,\n              STYLES[`platform_${PLATFORMS[m.membershipType]}`]\n            )}\n            onClick={() => onMembershipSelect(m)}\n          >\n            {m.displayName}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default MembershipSelect;\n","import {\r\n  DestinyCharacterComponent,\r\n  DestinyItemComponent\r\n} from \"bungie-api-ts/destiny2\";\r\n\r\nimport forIn from \"lodash/forIn\";\r\nimport groupBy from \"lodash/groupBy\";\r\nimport mapValues from \"lodash/mapValues\";\r\nimport maxBy from \"lodash/maxBy\";\r\nimport sumBy from \"lodash/sumBy\";\r\n\r\nimport {\r\n  CLASS_NAMES,\r\n  CLASS_TYPE_ALL,\r\n  ITEM_BUCKET_SLOTS,\r\n  ITEM_SLOT_BUCKETS,\r\n  ITEM_TYPE_ARMOR,\r\n  ITEM_TYPE_WEAPON,\r\n  UNDYING_ARTIFACT_ITEM_HASH\r\n} from \"../constants\";\r\nimport {\r\n  CharacterData,\r\n  ItemBySlot,\r\n  JoinedItemDefinition,\r\n  PowerBySlot,\r\n  SeasonalArtifactData\r\n} from \"../types\";\r\nimport { getBasicProfile, getFullProfile, getManifest } from \"./bungie-api\";\r\nimport { auth, getSelectedDestinyMembership } from \"./bungie-auth\";\r\nimport { getVendorEngramsData, VendorEngramsData } from \"./vendor-engrams\";\r\n\r\nconst getPowerBySlot = (itemsBySlot: ItemBySlot): PowerBySlot =>\r\n  mapValues(itemsBySlot, item => item.instanceData.primaryStat.value);\r\n\r\nconst getAveragePower = (powerBySlot: PowerBySlot) =>\r\n  Object.values(powerBySlot).reduce((sum, power) => sum + power, 0) /\r\n  Object.keys(ITEM_SLOT_BUCKETS).length;\r\nconst getOverallPower = (powerBySlot: PowerBySlot) =>\r\n  Math.floor(getAveragePower(powerBySlot));\r\n\r\nconst mergeItems = <\r\n  T extends { [key: string]: { items: DestinyItemComponent[] } }\r\n>(\r\n  characterItemMap: T\r\n) => {\r\n  return Object.values(characterItemMap).reduce(\r\n    (allItems, characterItems) => allItems.concat(characterItems.items),\r\n    [] as DestinyItemComponent[]\r\n  );\r\n};\r\n\r\nconst isItemEquippableByCharacter = (\r\n  item: JoinedItemDefinition,\r\n  character: DestinyCharacterComponent\r\n) => {\r\n  if (item.instanceData.canEquip) {\r\n    return true;\r\n  } // If the game says we can equip it, let's believe it\r\n  if (item.instanceData.cannotEquipReason === 16) {\r\n    return true;\r\n  } // Only reason is that it's in your vault\r\n  if (item.instanceData.equipRequiredLevel > character.baseCharacterLevel) {\r\n    return false;\r\n  }\r\n  if (\r\n    item.itemDefinition.classType !== CLASS_TYPE_ALL &&\r\n    item.itemDefinition.classType !== character.classType\r\n  ) {\r\n    return false;\r\n  }\r\n  // Let's ignore the rest for now\r\n  return true;\r\n};\r\n\r\nconst getBasicCharacterData = async (\r\n  pendingBasicProfile: ReturnType<typeof getBasicProfile>\r\n) => {\r\n  const profile = await pendingBasicProfile;\r\n  if (!profile || !profile.Response || !profile.Response.characters) {\r\n    return;\r\n  }\r\n  const characters = profile.Response.characters.data;\r\n\r\n  if (characters) {\r\n    const getDataForCharacterId = (id: string): CharacterData => {\r\n      const character = characters[id];\r\n      const className = CLASS_NAMES[character.classType];\r\n      return {\r\n        character,\r\n        className,\r\n        id,\r\n        overallPower: character.light\r\n      };\r\n    };\r\n\r\n    const characterIds = Object.keys(characters);\r\n    const characterData = characterIds.map(id => getDataForCharacterId(id));\r\n    return characterData;\r\n  }\r\n};\r\n\r\nexport const getCharacterData = async (\r\n  setCharacterData: (state: CharacterData[]) => any,\r\n  setIsFetchingCharacterData: (state: boolean) => any,\r\n  returnBasicCharacterData: boolean = false,\r\n  setVendorData: (state: VendorEngramsData) => any\r\n) => {\r\n  try {\r\n    const isAuthed = await auth();\r\n    if (!isAuthed) {\r\n      return;\r\n    }\r\n\r\n    const pendingManifest = getManifest();\r\n\r\n    setIsFetchingCharacterData(true);\r\n\r\n    const destinyMembership = getSelectedDestinyMembership();\r\n    if (!destinyMembership) {\r\n      return;\r\n    }\r\n\r\n    let pendingBasicProfile: ReturnType<typeof getBasicProfile> | undefined;\r\n\r\n    // Flag lets this be disabled to prevent setting after full profile is returned\r\n    let shouldSetBasicCharacterData = true;\r\n    // Produce basic data if flag is set\r\n    if (returnBasicCharacterData) {\r\n      pendingBasicProfile = getBasicProfile(\r\n        destinyMembership.membershipType,\r\n        destinyMembership.membershipId\r\n      );\r\n      pendingBasicProfile.catch(() => {\r\n        /* Do nothing */\r\n      });\r\n      const pendingBasicCharacterData = getBasicCharacterData(\r\n        pendingBasicProfile\r\n      ).catch(e => {\r\n        /* Do nothing */\r\n      });\r\n      (async () => {\r\n        const basicCharacterData = await pendingBasicCharacterData;\r\n        if (basicCharacterData && shouldSetBasicCharacterData) {\r\n          setCharacterData(basicCharacterData);\r\n        }\r\n      })();\r\n    }\r\n\r\n    const fullProfile = await getFullProfile(\r\n      destinyMembership.membershipType,\r\n      destinyMembership.membershipId\r\n    );\r\n    setIsFetchingCharacterData(false);\r\n\r\n    if (\r\n      !fullProfile ||\r\n      !fullProfile.Response ||\r\n      !fullProfile.Response.characters ||\r\n      !fullProfile.Response.characters.data ||\r\n      !fullProfile.Response.characterEquipment ||\r\n      !fullProfile.Response.characterEquipment.data ||\r\n      !fullProfile.Response.characterInventories ||\r\n      !fullProfile.Response.characterInventories.data ||\r\n      !fullProfile.Response.profileInventory ||\r\n      !fullProfile.Response.profileInventory.data ||\r\n      !fullProfile.Response.itemComponents ||\r\n      !fullProfile.Response.itemComponents.instances ||\r\n      !fullProfile.Response.itemComponents.instances.data\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const characters = fullProfile.Response.characters.data;\r\n    const characterEquipments = fullProfile.Response.characterEquipment.data;\r\n    const characterInventories = fullProfile.Response.characterInventories.data;\r\n    const profileInventories = fullProfile.Response.profileInventory.data;\r\n    const itemInstances = fullProfile.Response.itemComponents.instances.data;\r\n\r\n    const manifest = await pendingManifest;\r\n\r\n    if (!manifest) {\r\n      return;\r\n    }\r\n\r\n    const allCharacterItems = mergeItems(characterInventories)\r\n      .concat(mergeItems(characterEquipments))\r\n      .concat(profileInventories.items);\r\n    const allCharacterWeapons = allCharacterItems.filter(i => {\r\n      const itemDefinition =\r\n        i.itemHash && manifest.DestinyInventoryItemDefinition[i.itemHash];\r\n      return itemDefinition && itemDefinition.itemType === ITEM_TYPE_WEAPON;\r\n    });\r\n\r\n    const getDataForCharacterId = (id: string): CharacterData => {\r\n      const character = characters[id];\r\n      const className = CLASS_NAMES[character.classType];\r\n\r\n      const mapAndFilterItems = (\r\n        items: DestinyItemComponent[]\r\n      ): JoinedItemDefinition[] =>\r\n        items\r\n          .map(item => {\r\n            const instanceData = item.itemInstanceId\r\n              ? itemInstances[item.itemInstanceId]\r\n              : undefined;\r\n            const itemDefinition =\r\n              manifest.DestinyInventoryItemDefinition[item.itemHash];\r\n            return {\r\n              ...item,\r\n              instanceData,\r\n              itemDefinition\r\n            };\r\n          })\r\n          .filter(\r\n            i =>\r\n              i.instanceData &&\r\n              i.itemDefinition &&\r\n              [ITEM_TYPE_ARMOR, ITEM_TYPE_WEAPON].includes(\r\n                i.itemDefinition.itemType\r\n              )\r\n          )\r\n          .map(i => ({\r\n            ...i,\r\n            instanceData: i.instanceData!,\r\n            itemDefinition: i.itemDefinition!\r\n          }))\r\n          .map(i => ({\r\n            ...i,\r\n            slotName:\r\n              ITEM_BUCKET_SLOTS[i.itemDefinition.inventory.bucketTypeHash]\r\n          }))\r\n          .filter(i => isItemEquippableByCharacter(i, character));\r\n\r\n      const characterItems = mapAndFilterItems(\r\n        characterInventories[id].items\r\n          .concat(characterEquipments[id].items)\r\n          .concat(allCharacterWeapons)\r\n      );\r\n      const relevantProfileItems = mapAndFilterItems(\r\n        profileInventories.items\r\n      ).filter(\r\n        i =>\r\n          i.itemDefinition.classType === CLASS_TYPE_ALL ||\r\n          i.itemDefinition.classType === character.classType\r\n      );\r\n\r\n      const allItems = characterItems.concat(relevantProfileItems);\r\n\r\n      const getItemScore = (item: JoinedItemDefinition) => {\r\n        if (!item || !item.instanceData || !item.instanceData.primaryStat) {\r\n          return 0;\r\n        }\r\n        let score = item.instanceData.primaryStat.value;\r\n        if (item.instanceData.isEquipped) {\r\n          score += 0.1;\r\n        }\r\n        if (item.location === 1) {\r\n          score += 0.05;\r\n        }\r\n        return score;\r\n      };\r\n\r\n      const getEquipLabel = (item: JoinedItemDefinition) =>\r\n        item.itemDefinition.equippingBlock.uniqueLabel;\r\n\r\n      // Group by slot\r\n      const itemsBySlot = groupBy(allItems, i => i.slotName);\r\n      // Get max power items per slot\r\n      let topItemBySlot = mapValues(\r\n        itemsBySlot,\r\n        items => maxBy(items, getItemScore)!\r\n      );\r\n      // Get overlaps by equip label\r\n      const uniqueEquippedGroups = groupBy(\r\n        Object.values(topItemBySlot).filter(getEquipLabel),\r\n        getEquipLabel\r\n      );\r\n      // For overlaps with more than one item, generate valid options where all-but-one item is swapped for the next best non-exotic\r\n      forIn(uniqueEquippedGroups, uniqueEquippedGroup => {\r\n        if (uniqueEquippedGroup.length <= 1) {\r\n          return;\r\n        }\r\n\r\n        const validItemCombinations: ItemBySlot[] = [];\r\n\r\n        uniqueEquippedGroup.forEach(item => {\r\n          const otherItems = uniqueEquippedGroup.filter(\r\n            otherItem => otherItem !== item\r\n          );\r\n          let isCombinationValid = true;\r\n          const combination = { ...topItemBySlot };\r\n          otherItems.forEach(otherItem => {\r\n            // Find non-exotics for this slot\r\n            const nonExotics = itemsBySlot[otherItem.slotName].filter(\r\n              i => !getEquipLabel(i)\r\n            );\r\n            if (nonExotics.length > 0) {\r\n              // Select max power from non-exotics\r\n              combination[otherItem.slotName] = maxBy(\r\n                nonExotics,\r\n                getItemScore\r\n              )!;\r\n            } else {\r\n              // No non-exotic options for this slot, so whole combination is invalidaa\r\n              isCombinationValid = false;\r\n            }\r\n          });\r\n          if (isCombinationValid) {\r\n            validItemCombinations.push(combination);\r\n          }\r\n        });\r\n\r\n        // Select highest total scoring valid combination, if alternative item combinations have been generated\r\n        if (validItemCombinations.length > 0) {\r\n          const bestCombination = maxBy(validItemCombinations, combination =>\r\n            sumBy(Object.values(combination), getItemScore)\r\n          )!;\r\n          topItemBySlot = bestCombination;\r\n        }\r\n      });\r\n\r\n      // Mock lower kinetic weapon power level to test display of world drop hints\r\n      // (topItemBySlot.kinetic.instanceData.primaryStat as any).value = 940;\r\n\r\n      const powerBySlot = getPowerBySlot(topItemBySlot);\r\n      const overallPower = getOverallPower(powerBySlot);\r\n\r\n      const artifactItemComponent = Object.values(characterEquipments)\r\n        .flatMap(i => i.items)\r\n        .find(i => i.itemHash === UNDYING_ARTIFACT_ITEM_HASH);\r\n\r\n      let artifactData: SeasonalArtifactData | undefined;\r\n      if (artifactItemComponent && artifactItemComponent.itemInstanceId) {\r\n        const artifactDefinition = manifest.DestinyInventoryItemDefinition[\r\n          artifactItemComponent.itemHash\r\n        ]!;\r\n        const artifactInstance = itemInstances[\r\n          artifactItemComponent.itemInstanceId\r\n        ]!;\r\n        artifactData = {\r\n          bonusPower: artifactInstance.primaryStat.value,\r\n          iconPath: artifactDefinition.displayProperties.icon,\r\n          name: artifactDefinition.displayProperties.name\r\n        };\r\n      }\r\n\r\n      const potentialPowerBySlot = { ...powerBySlot };\r\n      while (\r\n        Object.values(potentialPowerBySlot).some(\r\n          power => power < getOverallPower(potentialPowerBySlot) || power < 900\r\n        )\r\n      ) {\r\n        const tempPotentialOverallPower = getOverallPower(potentialPowerBySlot);\r\n        Object.keys(potentialPowerBySlot).forEach(\r\n          slot =>\r\n            (potentialPowerBySlot[slot] = Math.max(\r\n              900,\r\n              Math.max(tempPotentialOverallPower, potentialPowerBySlot[slot])\r\n            ))\r\n        );\r\n      }\r\n      const potentialOverallPower = getOverallPower(potentialPowerBySlot);\r\n\r\n      const averagePower = getAveragePower(powerBySlot);\r\n      const powerRequiredToReachPotential =\r\n        (potentialOverallPower - averagePower) * 8;\r\n\r\n      const resultData: CharacterData = {\r\n        artifactData,\r\n        character,\r\n        className,\r\n        id,\r\n        overallPower,\r\n        potentialOverallPower,\r\n        potentialPowerBySlot,\r\n        topItemBySlot,\r\n        powerRequiredToReachPotential\r\n      };\r\n\r\n      return resultData;\r\n    };\r\n\r\n    getVendorEngramsData()\r\n      .then(data => setVendorData(data))\r\n      .catch(e => console.warn(`Error fetching vendor engrams data`, e));\r\n\r\n    const characterIds = Object.keys(characters);\r\n    const characterData = characterIds.map(id => getDataForCharacterId(id));\r\n    shouldSetBasicCharacterData = false;\r\n    setCharacterData(characterData);\r\n  } catch (e) {\r\n    console.error(`Error fetching manifest and character data`, e);\r\n    setIsFetchingCharacterData(false);\r\n    return;\r\n  }\r\n};\r\n","import { UserInfoCard } from \"bungie-api-ts/user\";\nimport React, { useEffect, useState } from \"react\";\nimport ga from \"./services/ga\";\n\nimport {\n  auth,\n  hasSelectedDestinyMembership,\n  hasValidAuth,\n  setSelectedDestinyMembership\n} from \"./services/bungie-auth\";\nimport { CharacterData } from \"./types\";\n\nimport CharacterDisplay from \"./components/CharacterDisplay\";\nimport FetchSpinner from \"./components/FetchSpinner\";\nimport LoadingSpinner from \"./components/LoadingSpinner\";\nimport MembershipSelect from \"./components/MembershipSelect\";\nimport { getManifest } from \"./services/bungie-api\";\nimport { getCharacterData } from \"./services/utils\";\nimport { VendorEngramsData } from \"./services/vendor-engrams\";\n\nimport \"normalize.css\";\nimport STYLES from \"./App.module.scss\";\n\nconst CHARACTER_DATA_REFRESH_TIMER = 15000;\n\nlet characterDataRefreshTimer: number | undefined;\n\nconst AUTO_PAGE_REFRESH_DELAY = 5000;\n\nconst refreshPage = () => {\n  window.location.search = \"\";\n};\n\nconst App = () => {\n  const [isAuthed, setIsAuthed] = useState<boolean>(hasValidAuth());\n  const [hasAuthError, setAuthError] = useState<boolean>(false);\n  const [hasMembership, setHasMembership] = useState<boolean>(\n    hasSelectedDestinyMembership()\n  );\n  const [hasManifestData, setHasManifestData] = useState<boolean>(false);\n  const [hasManifestError, setManifestError] = useState<boolean>(false);\n  const [isFetchingCharacterData, setIsFetchingCharacterData] = useState<\n    boolean\n  >(false);\n  const [characterData, setCharacterData] = useState<\n    CharacterData[] | undefined\n  >(undefined);\n  const [vendorData, setVendorData] = useState<VendorEngramsData | undefined>(\n    undefined\n  );\n\n  useEffect(() => {\n    const doAuth = async () => {\n      const authResult = await auth();\n      if (authResult) {\n        setIsAuthed(true);\n      } else {\n        setAuthError(true);\n        // Refresh automatically in 30s\n        setTimeout(refreshPage, AUTO_PAGE_REFRESH_DELAY);\n      }\n    };\n    if (!isAuthed) {\n      doAuth();\n    }\n  });\n\n  useEffect(() => {\n    (async () => {\n      try {\n        await getManifest();\n        setHasManifestData(true);\n      } catch (e) {\n        console.error(e.message);\n        setManifestError(true);\n      }\n    })();\n  });\n\n  useEffect(() => {\n    const doGetCharacterData = (returnBasicCharacterData: boolean = false) => {\n      if (!isFetchingCharacterData) {\n        getCharacterData(\n          setCharacterData,\n          setIsFetchingCharacterData,\n          returnBasicCharacterData,\n          setVendorData\n        );\n      }\n    };\n    if (isAuthed && hasMembership && !isFetchingCharacterData) {\n      if (!characterDataRefreshTimer) {\n        characterDataRefreshTimer = setInterval(\n          doGetCharacterData,\n          CHARACTER_DATA_REFRESH_TIMER\n        );\n        doGetCharacterData(true);\n        (window as any).refreshCharacterData = () => doGetCharacterData();\n      }\n    }\n  }, [isAuthed, hasMembership, hasManifestData, isFetchingCharacterData]);\n\n  const onSelectMembership = (membership: UserInfoCard) => {\n    ga.event({\n      category: \"Platform\",\n      action: \"Select platform\",\n      label: `Membership type: ${membership.membershipType}`\n    });\n    setSelectedDestinyMembership(membership);\n    setHasMembership(true);\n  };\n\n  let status: string | JSX.Element = \"\";\n  if (hasAuthError) {\n    status = (\n      <span>\n        Authentication error, <a href=\"/\">refresh page</a> to try again!\n      </span>\n    );\n  } else if (hasManifestError) {\n    status = (\n      <span>\n        Error fetching manifest, <a href=\"/\">refresh page</a> to try again!\n      </span>\n    );\n  } else if (!isAuthed) {\n    status = \"Authenticating...\";\n  } else if (!hasMembership) {\n    status = \"Waiting for Destiny platform selection...\";\n  } else if (!hasManifestData) {\n    status = \"Fetching Destiny item manifest...\";\n  } else if (!characterData || characterData.length === 0) {\n    if (isFetchingCharacterData) {\n      status = \"Fetching character data...\";\n    } else {\n      status = \"No character data\";\n    }\n  }\n\n  (window as any).characterData = characterData;\n\n  if (characterData && characterData.length > 0) {\n    return (\n      <div className={STYLES.App}>\n        <MembershipSelect onMembershipSelect={onSelectMembership} />\n        <div className={STYLES.charactersContainer}>\n          <div className={STYLES.characters}>\n            {characterData.map(c => (\n              <CharacterDisplay key={c.id} data={c} vendorData={vendorData} />\n            ))}\n          </div>\n        </div>\n        {status && <LoadingSpinner>{status}</LoadingSpinner>}\n        {isFetchingCharacterData && <FetchSpinner />}\n      </div>\n    );\n  }\n\n  return (\n    <div className={STYLES.App}>\n      <MembershipSelect onMembershipSelect={onSelectMembership} />\n      <LoadingSpinner>{status}</LoadingSpinner>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"anchor\":\"FetchSpinner_anchor__2bpEe\",\"spinner\":\"FetchSpinner_spinner__3uf-_\",\"spin\":\"FetchSpinner_spin__3wMft\",\"fetchSpinnerContainer\":\"FetchSpinner_fetchSpinnerContainer__2f9d4\",\"spinnerSmall\":\"FetchSpinner_spinnerSmall__2pJsX\",\"spinnerTiny\":\"FetchSpinner_spinnerTiny__1LS_-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__15LM-\",\"loadingContainer\":\"App_loadingContainer__1Pa9s\",\"charactersContainer\":\"App_charactersContainer__1RSU_\",\"characters\":\"App_characters__1GhrS\",\"loadingStatus\":\"App_loadingStatus__3QEhd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"membershipSelect\":\"MembershipSelect_membershipSelect__3GbZz\",\"membership\":\"MembershipSelect_membership__3vKKK\",\"platform_xbox\":\"MembershipSelect_platform_xbox__1EgLN\",\"platform_psn\":\"MembershipSelect_platform_psn__2ASN8\",\"platform_steam\":\"MembershipSelect_platform_steam__3zG5m\",\"platform_blizzard\":\"MembershipSelect_platform_blizzard__1zLDb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hints\":\"PowerHints_hints__9HbgH\",\"hint\":\"PowerHints_hint__2zx_C\",\"worldDropHint\":\"PowerHints_worldDropHint__3M_Nv\",\"powerfulHint\":\"PowerHints_powerfulHint__26w25\",\"pinnacleHint\":\"PowerHints_pinnacleHint__c2cdM\",\"separator\":\"PowerHints_separator__1_of2\",\"hintExtra\":\"PowerHints_hintExtra__2TIGc\",\"hintExtraInner\":\"PowerHints_hintExtraInner__2tEbw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"barWrapper\":\"PowerBar_barWrapper__2Er15\",\"iconWrapper\":\"PowerBar_iconWrapper__1k9U_\",\"icon\":\"PowerBar_icon__3zN_u\",\"barContainer\":\"PowerBar_barContainer__KfIri\",\"barLine\":\"PowerBar_barLine__Fc3BR\",\"filledBar\":\"PowerBar_filledBar__3a32S\",\"label\":\"PowerBar_label__32eba\",\"power\":\"PowerBar_power__2ZVuC\",\"max\":\"PowerBar_max__L5cvP\",\"belowAverage\":\"PowerBar_belowAverage__2r-Dj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inlinePowerNumber\":\"Power_inlinePowerNumber__28Oqz\"};"],"sourceRoot":""}