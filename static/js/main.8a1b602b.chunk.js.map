{"version":3,"sources":["components/CharacterDisplay.module.scss","components/LoadingSpinner.module.scss","App.module.scss","services/ga.ts","services/bungie-api.ts","services/bungie-auth.ts","constants.ts","components/CharacterDisplay.tsx","components/LoadingSpinner.tsx","components/MembershipSelect.tsx","services/utils.ts","App.tsx","serviceWorker.ts","index.tsx","components/MembershipSelect.module.scss"],"names":["module","exports","characterDisplay","header","emblemBackground","name","power","details","hints","detailsRow","hint","detailsLabel","detailsInlineIcon","detailsValue","inlinePowerNumber","worldDropHint","powerfulHint","pinnacleHint","separator","hintExtra","hintExtraInner","powerBars","powerRange","rangeLine","powerLabel","indicator","barWrapper","iconWrapper","icon","barContainer","barLine","filledBar","label","max","belowAverage","anchor","spinner","spin","loadingSpinnerContainer","spinnerLarge","spinnerSmall","status","App","loadingContainer","charactersContainer","characters","loadingStatus","ReactGA","initialize","debug","process","set","anonymizeIp","pageview","window","location","pathname","search","cachedManifestData","getManifestPromise","bungieAuthedFetch","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","config","accessToken","headers","url","response","wrap","_context","prev","next","getAccessToken","x-api-key","BUNGIE_API_KEY","Authorization","concat","params","entries","map","_ref2","_ref3","slicedToArray","key","value","encodeURIComponent","fetch","sent","json","abrupt","t0","console","error","stop","_x","apply","this","arguments","manifestPropertyWhitelist","getCachedManifestData","_ref4","_callee2","manifestData","_context2","log","get","getRemoteManifestData","_ref5","_callee3","manifest","version","manifestDataResponse","_context3","Error","jsonWorldContentPaths","en","keys","forEach","includes","localStorage","setItem","_x2","getManifest","_ref6","_callee5","_context5","_callee4","localStorageManifestVersion","freshManifestData","_context4","ga","event","category","action","nonInteraction","getDestinyManifest","getItem","Response","ErrorStatus","undefined","getFullProfile","membershipType","membershipId","getProfile","components","destinyMembershipId","clearStorage","removeItem","handleTokenResponse","tokenResponse","data","tokenDuration","expiryTime","bungieMembershipId","destinyMembershipsResponse","destinyMemberships","_args","length","access_token","expires_in","Date","now","membership_id","toString","getMembershipDataById","authSuccess","JSON","stringify","setSelectedDestinyMembership","fetchAuthToken","authCode","body","cache","credentials","Content-Type","method","redirect","referrer","hasValidAuth","accessTokenExpiryTime","parseInt","getDestinyMemberships","destinyMembershipsString","parse","e","message","getSelectedDestinyMembership","destinyMembershipString","membership","auth","queryParams","authResponse","URLSearchParams","replace","origin","ITEM_SLOT_BUCKETS","_ITEM_SLOT_BUCKETS","defineProperty","ITEM_BUCKET_SLOTS","reduce","buckets","slot","bucket","_objectSpread","ORDERED_ITEM_SLOTS","ITEM_TYPE_ARMOR","ITEM_TYPE_WEAPON","CLASS_NAMES","Bar","_classnames","min","avgValue","range","perc","Math","floor","avgPerc","fullLabelText","fullLabel","react_default","createElement","className","STYLES","classnames","slotName","src","alt","style","width","left","Power","children","CharacterDisplay","text","slotFullNames","chest","classItem","hunter","titan","warlock","energy","gloves","head","kinetic","legs","powerBySlot","slots","CharacterDisplay_objectSpread","topItemBySlot","instanceData","primaryStat","overallPower","minItemPower","toConsumableArray","values","minPowerToDisplay","maxItemPower","maxPowerToDisplay","ceil","roundedPower","summableArtifactBonusPower","artifactData","bonusPower","backgroundColor","red","green","blue","rgbString","character","emblemColor","emblemBackgroundPath","substr","toUpperCase","defailsValue","CharacterDisplay_Power","Fragment","iconPath","minPower","maxPower","bars","bestItem","CharacterDisplay_Bar","id","itemDefinition","displayProperties","potentialOverallPower","powerRequiredToReachPotential","LoadingSpinner","MembershipSelect","onMembershipSelect","PLATFORMS","1","2","3","4","membershipSelect","m","onClick","displayName","characterDataRefreshTimer","getPowerBySlot","itemsBySlot","mapValues","item","getAveragePower","sum","getOverallPower","mergeItems","characterItemMap","allItems","characterItems","items","isItemEquippableByCharacter","canEquip","cannotEquipReason","equipRequiredLevel","baseCharacterLevel","classType","getBasicCharacterData","pendingBasicProfile","profile","getDataForCharacterId","characterIds","characterData","light","getCharacterData","setCharacterData","setIsFetchingCharacterData","returnBasicCharacterData","pendingManifest","destinyMembership","shouldSetBasicCharacterData","pendingBasicCharacterData","fullProfile","_characters","characterEquipments","characterInventories","profileInventories","itemInstances","allCharacterItems","allCharacterWeapons","_args3","catch","basicCharacterData","characterEquipment","profileInventory","itemComponents","instances","filter","i","itemHash","DestinyInventoryItemDefinition","itemType","mapAndFilterItems","utils_objectSpread","itemInstanceId","inventory","bucketTypeHash","relevantProfileItems","getItemScore","score","isEquipped","getEquipLabel","equippingBlock","uniqueLabel","groupBy","maxBy","uniqueEquippedGroups","forIn","uniqueEquippedGroup","validItemCombinations","otherItems","otherItem","isCombinationValid","combination","nonExotics","push","bestCombination","sumBy","artifactItemComponent","flatMap","find","artifactDefinition","potentialPowerBySlot","_loop","tempPotentialOverallPower","some","averagePower","_x3","_useState","useState","_useState2","isAuthed","setIsAuthed","_useState3","_useState4","hasAuthError","setAuthError","_useState5","_useState6","hasMembership","setHasMembership","_useState7","_useState8","hasManifestData","setHasManifestData","_useState9","_useState10","hasManifestError","setManifestError","_useState11","_useState12","isFetchingCharacterData","_useState13","_useState14","useEffect","doAuth","doGetCharacterData","setInterval","onSelectMembership","components_MembershipSelect","c","components_CharacterDisplay","components_LoadingSpinner","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","platform_xbox","platform_psn","platform_steam","platform_blizzard"],"mappings":"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","file":"static/js/main.8a1b602b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"characterDisplay\":\"CharacterDisplay_characterDisplay__20O9A\",\"header\":\"CharacterDisplay_header__2fx5d\",\"emblemBackground\":\"CharacterDisplay_emblemBackground__2pAjE\",\"name\":\"CharacterDisplay_name__2j8PA\",\"power\":\"CharacterDisplay_power__1p583\",\"details\":\"CharacterDisplay_details__2ZMpw\",\"hints\":\"CharacterDisplay_hints__6LSq6\",\"detailsRow\":\"CharacterDisplay_detailsRow__QQFTB\",\"hint\":\"CharacterDisplay_hint__37yjz\",\"detailsLabel\":\"CharacterDisplay_detailsLabel__s8ZLQ\",\"detailsInlineIcon\":\"CharacterDisplay_detailsInlineIcon__Wzpbv\",\"detailsValue\":\"CharacterDisplay_detailsValue__3wf4f\",\"inlinePowerNumber\":\"CharacterDisplay_inlinePowerNumber__2hYBV\",\"worldDropHint\":\"CharacterDisplay_worldDropHint__jKU-s\",\"powerfulHint\":\"CharacterDisplay_powerfulHint__3lLnw\",\"pinnacleHint\":\"CharacterDisplay_pinnacleHint__3p81I\",\"separator\":\"CharacterDisplay_separator__k4z6W\",\"hintExtra\":\"CharacterDisplay_hintExtra__2jJV6\",\"hintExtraInner\":\"CharacterDisplay_hintExtraInner__2Qfbj\",\"powerBars\":\"CharacterDisplay_powerBars__3t0B5\",\"powerRange\":\"CharacterDisplay_powerRange__1d86z\",\"rangeLine\":\"CharacterDisplay_rangeLine__358zP\",\"powerLabel\":\"CharacterDisplay_powerLabel__3EDmr\",\"indicator\":\"CharacterDisplay_indicator__3CaQK\",\"barWrapper\":\"CharacterDisplay_barWrapper__2x1f3\",\"iconWrapper\":\"CharacterDisplay_iconWrapper__3hOkU\",\"icon\":\"CharacterDisplay_icon__1e0L7\",\"barContainer\":\"CharacterDisplay_barContainer__1OnNQ\",\"barLine\":\"CharacterDisplay_barLine__2qulu\",\"filledBar\":\"CharacterDisplay_filledBar__3UpB_\",\"label\":\"CharacterDisplay_label__mYBsn\",\"max\":\"CharacterDisplay_max__3m5Pg\",\"belowAverage\":\"CharacterDisplay_belowAverage__1XnJf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"anchor\":\"LoadingSpinner_anchor__78Pnm\",\"spinner\":\"LoadingSpinner_spinner__32tWn\",\"spin\":\"LoadingSpinner_spin__3FVoi\",\"loadingSpinnerContainer\":\"LoadingSpinner_loadingSpinnerContainer__2QV5S\",\"spinnerLarge\":\"LoadingSpinner_spinnerLarge__KooL0\",\"spinnerSmall\":\"LoadingSpinner_spinnerSmall__27lWl\",\"status\":\"LoadingSpinner_status__3sgCR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__15LM-\",\"loadingContainer\":\"App_loadingContainer__1Pa9s\",\"charactersContainer\":\"App_charactersContainer__1RSU_\",\"characters\":\"App_characters__1GhrS\",\"loadingStatus\":\"App_loadingStatus__3QEhd\"};","import ReactGA from \"react-ga\";\r\n\r\nReactGA.initialize(\"UA-149614480-1\", {\r\n  debug: process.env.NODE_ENV === \"development\"\r\n});\r\n\r\n// Anonymize IP addresses, yay GDPR\r\nReactGA.set({ anonymizeIp: true });\r\nReactGA.pageview(window.location.pathname + window.location.search);\r\n\r\nexport default ReactGA;\r\n","import { get, set } from \"idb-keyval\";\n\nimport {\n  DestinyInventoryItemDefinition,\n  DestinyManifest,\n  getDestinyManifest,\n  getProfile\n} from \"bungie-api-ts/destiny2\";\nimport { HttpClientConfig } from \"bungie-api-ts/http\";\nimport { BUNGIE_API_KEY, getAccessToken } from \"./bungie-auth\";\nimport ga from \"./ga\";\n\nexport const bungieAuthedFetch = async (config: HttpClientConfig) => {\n  try {\n    const accessToken = getAccessToken();\n    const headers: { [key: string]: string } = { \"x-api-key\": BUNGIE_API_KEY };\n    if (accessToken) {\n      headers.Authorization = `Bearer ${accessToken}`;\n    }\n    const url = `${config.url}${\n      config.params\n        ? \"?\" +\n          Object.entries(config.params).map(\n            ([key, value]) =>\n              `${encodeURIComponent(key)}=${encodeURIComponent(\n                value as string\n              )}`\n          )\n        : \"\"\n    }`;\n    const response = await fetch(url, { headers });\n    return await response.json();\n  } catch (e) {\n    console.error(e);\n    return {};\n  }\n};\n\nconst MANIFEST_VERSION_KEY = \"MANIFEST_VERSION\";\nconst MANIFEST_IDB_KEY = \"MANIFEST_DATA\";\ninterface ManifestData {\n  DestinyInventoryItemDefinition: {\n    [key: string]: DestinyInventoryItemDefinition | undefined;\n  };\n}\nconst manifestPropertyWhitelist = [\"DestinyInventoryItemDefinition\"];\n\nconst getCachedManifestData = async () => {\n  console.log(\"Loading manifest data from IDB\");\n  const manifestData = await get(MANIFEST_IDB_KEY);\n  console.log(\"Finished loading manifest data from IDB\");\n  return manifestData as ManifestData;\n};\n\nconst getRemoteManifestData = async (manifest: DestinyManifest) => {\n  if (!manifest) {\n    throw Error(\"No manifest!\");\n  }\n  const version = manifest.version;\n  console.log(\"Fetching fresh manifest data\");\n  const manifestDataResponse = await fetch(\n    `https://www.bungie.net${manifest.jsonWorldContentPaths.en}`\n  );\n  const manifestData = await manifestDataResponse.json();\n  console.log(\"Pruning manifest data\");\n  Object.keys(manifestData).forEach(key => {\n    if (!manifestPropertyWhitelist.includes(key)) {\n      delete manifestData[key];\n    }\n  });\n  console.log(\"Storing manifest data in IDB\");\n  await set(MANIFEST_IDB_KEY, manifestData);\n  localStorage.setItem(MANIFEST_VERSION_KEY, version);\n  return manifestData;\n};\n\nlet cachedManifestData: ManifestData | undefined;\nlet getManifestPromise: Promise<ManifestData> | undefined;\n\nexport const getManifest = async (): Promise<ManifestData> => {\n  if (!getManifestPromise) {\n    getManifestPromise = (async () => {\n      ga.event({\n        category: \"Data\",\n        action: \"Attempt load manifest\",\n        nonInteraction: true\n      });\n      const manifest = await getDestinyManifest(bungieAuthedFetch);\n      const localStorageManifestVersion = localStorage.getItem(\n        MANIFEST_VERSION_KEY\n      );\n      if (\n        manifest &&\n        manifest.Response &&\n        manifest.Response.version === localStorageManifestVersion &&\n        !window.location.search.includes(\"updateManifest\")\n      ) {\n        if (!cachedManifestData) {\n          cachedManifestData = await getCachedManifestData();\n        }\n        return cachedManifestData;\n      }\n      if (\n        manifest &&\n        manifest.ErrorStatus &&\n        manifest.ErrorStatus !== \"Success\"\n      ) {\n        ga.event({\n          category: \"Errors\",\n          action: `Error status \"${manifest.ErrorStatus}\" returned from manifest request`,\n          nonInteraction: true\n        });\n        throw Error(\n          `Error status \"${manifest.ErrorStatus}\" returned from manifest request`\n        );\n      }\n      if (!manifest || !manifest.Response) {\n        throw Error(\"No manifest received!\");\n      }\n      cachedManifestData = undefined;\n      ga.event({\n        category: \"Data\",\n        action: \"Fetch remote manifest\",\n        nonInteraction: true\n      });\n      const freshManifestData = await getRemoteManifestData(manifest.Response);\n      cachedManifestData = freshManifestData;\n      return freshManifestData;\n    })();\n  }\n  return getManifestPromise;\n};\n\nexport const getBasicProfile = (\n  membershipType: number,\n  membershipId: string\n) => {\n  ga.event({\n    category: \"Character Data\",\n    action: \"Fetch minimal profile\",\n    nonInteraction: true\n  });\n  return getProfile(bungieAuthedFetch, {\n    components: [\n      200, // DestinyComponentType.Characters,\n      205 // DestinyComponentType.CharacterEquipment,\n    ],\n    destinyMembershipId: membershipId,\n    membershipType\n  });\n};\n\nexport const getFullProfile = (\n  membershipType: number,\n  membershipId: string\n) => {\n  ga.event({\n    category: \"Character Data\",\n    action: \"Fetch full profile\",\n    nonInteraction: true\n  });\n  return getProfile(bungieAuthedFetch, {\n    components: [\n      200, // DestinyComponentType.Characters,\n      201, // DestinyComponentType.CharacterInventories,\n      205, // DestinyComponentType.CharacterEquipment,\n      102, // DestinyComponentType.ProfileInventories,\n      300 // DestinyComponentType.ItemInstances,\n    ],\n    destinyMembershipId: membershipId,\n    membershipType\n  });\n};\n","import { getMembershipDataById, UserInfoCard } from \"bungie-api-ts/user\";\r\nimport { bungieAuthedFetch } from \"./bungie-api\";\r\nimport ga from \"./ga\";\r\n\r\nconst isDev = process.env.NODE_ENV === \"development\";\r\nexport const BUNGIE_API_KEY = isDev\r\n  ? \"f7f184669f044a89b560fc5f71ed5d60\"\r\n  : \"d94be1e34632448fafdaf77c7afbb501\";\r\nconst BUNGIE_OAUTH_AUTHORIZE_URL = \"https://www.bungie.net/en/OAuth/Authorize\";\r\nconst BUNGIE_OAUTH_CLIENT_ID = isDev ? \"26087\" : \"27213\";\r\nconst BUNGIE_OAUTH_TOKEN_URL =\r\n  \"https://www.bungie.net/platform/app/oauth/token/\";\r\n\r\nconst ACCESS_TOKEN_STORAGE_KEY = \"bungieAccessToken\";\r\nconst ACCESS_TOKEN_EXPIRY_STORAGE_KEY = \"bungieAccessTokenExpiryTime\";\r\nconst BUNGIE_MEMBERSHIP_ID_STORAGE_KEY = \"bungieMembershipId\";\r\nconst DESTINY_MEMBERSHIPS_STORAGE_KEY = \"destinyMemberships\";\r\nconst DESTINY_MEMBERSHIP_STORAGE_KEY = \"destinyMembership\";\r\n\r\nconst clearStorage = () => {\r\n  localStorage.removeItem(ACCESS_TOKEN_STORAGE_KEY);\r\n  localStorage.removeItem(ACCESS_TOKEN_EXPIRY_STORAGE_KEY);\r\n  localStorage.removeItem(BUNGIE_MEMBERSHIP_ID_STORAGE_KEY);\r\n  localStorage.removeItem(DESTINY_MEMBERSHIPS_STORAGE_KEY);\r\n  localStorage.removeItem(DESTINY_MEMBERSHIP_STORAGE_KEY);\r\n};\r\n\r\nconst getAuthUrl = () =>\r\n  `${BUNGIE_OAUTH_AUTHORIZE_URL}?response_type=code&client_id=${BUNGIE_OAUTH_CLIENT_ID}`;\r\n\r\nconst redirectToAuth = () => {\r\n  console.log(\"Redirect to auth\");\r\n  clearStorage();\r\n  ga.event({\r\n    category: \"Auth\",\r\n    action: \"Redirect to oauth\",\r\n    nonInteraction: true\r\n  });\r\n  window.location.replace(getAuthUrl());\r\n};\r\n\r\nconst handleTokenResponse = async (\r\n  tokenResponse: Response,\r\n  redirect: boolean = false\r\n) => {\r\n  console.log(\"handleTokenResponse\");\r\n  clearStorage();\r\n  if (tokenResponse.status === 200) {\r\n    const data = await tokenResponse.json();\r\n    const accessToken = data.access_token as string;\r\n    const tokenDuration = data.expires_in as number;\r\n    const expiryTime = Date.now() + tokenDuration * 1000;\r\n    const bungieMembershipId = data.membership_id as string;\r\n\r\n    localStorage.setItem(ACCESS_TOKEN_STORAGE_KEY, accessToken);\r\n    localStorage.setItem(\r\n      ACCESS_TOKEN_EXPIRY_STORAGE_KEY,\r\n      expiryTime.toString()\r\n    );\r\n    localStorage.setItem(BUNGIE_MEMBERSHIP_ID_STORAGE_KEY, bungieMembershipId);\r\n\r\n    // 254 = all memberships\r\n    const destinyMembershipsResponse = await getMembershipDataById(\r\n      bungieAuthedFetch,\r\n      { membershipId: bungieMembershipId, membershipType: 254 }\r\n    );\r\n\r\n    if (\r\n      !destinyMembershipsResponse ||\r\n      !destinyMembershipsResponse.Response ||\r\n      (destinyMembershipsResponse.ErrorStatus &&\r\n        destinyMembershipsResponse.ErrorStatus !== \"Success\")\r\n    ) {\r\n      ga.event({\r\n        category: \"Errors\",\r\n        action: `Destiny membership fetch error, status: ${destinyMembershipsResponse.ErrorStatus}`,\r\n        nonInteraction: true\r\n      });\r\n      return {\r\n        authSuccess: false,\r\n        error: `Status code ${destinyMembershipsResponse.ErrorStatus} from memberships endpoint`\r\n      };\r\n    }\r\n\r\n    const destinyMemberships =\r\n      destinyMembershipsResponse.Response.destinyMemberships;\r\n    localStorage.setItem(\r\n      DESTINY_MEMBERSHIPS_STORAGE_KEY,\r\n      JSON.stringify(destinyMemberships)\r\n    );\r\n\r\n    // If there is only one membership, select it automatically\r\n    if (destinyMemberships.length === 1) {\r\n      setSelectedDestinyMembership(destinyMemberships[0]);\r\n    }\r\n\r\n    return { accessToken, authSuccess: true };\r\n  } else {\r\n    if (tokenResponse.status !== 200) {\r\n      ga.event({\r\n        category: \"Auth\",\r\n        action: `Status code ${tokenResponse.status} from authentication request`,\r\n        nonInteraction: true\r\n      });\r\n      return {\r\n        authSuccess: false,\r\n        error: `Status code ${tokenResponse.status} from authentication request`\r\n      };\r\n    }\r\n    // return redirectToAuth()\r\n  }\r\n};\r\n\r\nconst fetchAuthToken = async (authCode: string) => {\r\n  console.log(\"fetchAuthToken\", authCode);\r\n  clearStorage();\r\n  ga.event({\r\n    category: \"Auth\",\r\n    action: \"Oauth token request\",\r\n    nonInteraction: true\r\n  });\r\n  const tokenResponse = await fetch(BUNGIE_OAUTH_TOKEN_URL, {\r\n    body: `grant_type=authorization_code&code=${authCode}&client_id=${BUNGIE_OAUTH_CLIENT_ID}`,\r\n    cache: \"no-cache\",\r\n    credentials: \"include\",\r\n    headers: {\r\n      \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n    },\r\n    method: \"POST\",\r\n    redirect: \"follow\",\r\n    referrer: \"no-referrer\"\r\n  });\r\n  return await handleTokenResponse(tokenResponse);\r\n};\r\n\r\nexport const getAccessToken = () => {\r\n  return localStorage.getItem(ACCESS_TOKEN_STORAGE_KEY);\r\n};\r\n\r\nexport const hasValidAuth = () => {\r\n  const accessToken = getAccessToken();\r\n  const accessTokenExpiryTime = parseInt(\r\n    localStorage.getItem(ACCESS_TOKEN_EXPIRY_STORAGE_KEY) || \"-1\",\r\n    10\r\n  );\r\n  const bungieMembershipId = localStorage.getItem(\r\n    BUNGIE_MEMBERSHIP_ID_STORAGE_KEY\r\n  );\r\n  if (\r\n    !accessToken ||\r\n    Date.now() >= accessTokenExpiryTime ||\r\n    !bungieMembershipId\r\n  ) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nexport const getDestinyMemberships = () => {\r\n  const destinyMembershipsString = localStorage.getItem(\r\n    DESTINY_MEMBERSHIPS_STORAGE_KEY\r\n  );\r\n  try {\r\n    if (destinyMembershipsString) {\r\n      return JSON.parse(destinyMembershipsString) as UserInfoCard[];\r\n    }\r\n  } catch (e) {\r\n    ga.event({\r\n      category: \"Data\",\r\n      action: \"Error loading destiny memberships from local storage\",\r\n      nonInteraction: true\r\n    });\r\n    console.error(`Error loading destiny memberships`, e.message);\r\n  }\r\n  return undefined;\r\n};\r\n\r\nexport const hasDestinyMemberships = () => {\r\n  return !!getDestinyMemberships();\r\n};\r\n\r\nexport const getSelectedDestinyMembership = () => {\r\n  const destinyMembershipString = localStorage.getItem(\r\n    DESTINY_MEMBERSHIP_STORAGE_KEY\r\n  );\r\n  try {\r\n    if (destinyMembershipString) {\r\n      return JSON.parse(destinyMembershipString) as UserInfoCard;\r\n    }\r\n  } catch (e) {\r\n    ga.event({\r\n      category: \"Data\",\r\n      action: \"Error loading destiny membership from local storage\",\r\n      nonInteraction: true\r\n    });\r\n    console.error(\"Error loading destiny membership\", e.message);\r\n  }\r\n  return undefined;\r\n};\r\n\r\nexport const hasSelectedDestinyMembership = () => {\r\n  return !!getSelectedDestinyMembership();\r\n};\r\n\r\nexport const setSelectedDestinyMembership = (membership: UserInfoCard) => {\r\n  localStorage.setItem(\r\n    DESTINY_MEMBERSHIP_STORAGE_KEY,\r\n    JSON.stringify(membership)\r\n  );\r\n};\r\n\r\nexport const auth = async () => {\r\n  const queryParams = new URLSearchParams(window.location.search);\r\n  const authCode = queryParams.get(\"code\");\r\n\r\n  if (authCode && !hasValidAuth()) {\r\n    console.log(\"Fetching access token with auth code\");\r\n    const authResponse = await fetchAuthToken(authCode);\r\n    if (authResponse && authResponse.authSuccess === false) {\r\n      console.error(authResponse.error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  if (authCode) {\r\n    window.location.replace(\r\n      `${window.location.origin}${window.location.pathname}`\r\n    );\r\n  }\r\n\r\n  if (hasValidAuth() && hasDestinyMemberships()) {\r\n    return true;\r\n  }\r\n\r\n  ga.event({\r\n    category: \"System\",\r\n    action: \"Redirect for fresh authentication\",\r\n    nonInteraction: true\r\n  });\r\n  console.log(\r\n    \"Redirecting to fresh authentication for missing or expired access token, or missing destiny memberships\"\r\n  );\r\n  clearStorage();\r\n  redirectToAuth();\r\n};\r\n","export const ITEM_SLOT_KINETIC = \"kinetic\";\r\nexport const ITEM_SLOT_ENERGY = \"energy\";\r\nexport const ITEM_SLOT_POWER = \"power\";\r\nexport const ITEM_SLOT_HEAD = \"head\";\r\nexport const ITEM_SLOT_GLOVES = \"gloves\";\r\nexport const ITEM_SLOT_CHEST = \"chest\";\r\nexport const ITEM_SLOT_LEGS = \"legs\";\r\nexport const ITEM_SLOT_CLASS_ITEM = \"classItem\";\r\n\r\nexport const ITEM_SLOT_BUCKETS = {\r\n  [ITEM_SLOT_KINETIC]: 1498876634,\r\n  [ITEM_SLOT_ENERGY]: 2465295065,\r\n  [ITEM_SLOT_POWER]: 953998645,\r\n  [ITEM_SLOT_HEAD]: 3448274439,\r\n  [ITEM_SLOT_GLOVES]: 3551918588,\r\n  [ITEM_SLOT_CHEST]: 14239492,\r\n  [ITEM_SLOT_LEGS]: 20886954,\r\n  [ITEM_SLOT_CLASS_ITEM]: 1585787867\r\n};\r\n\r\nexport const ITEM_BUCKET_SLOTS = Object.entries(ITEM_SLOT_BUCKETS).reduce(\r\n  (buckets, [slot, bucket]) => ({ ...buckets, [bucket]: slot }),\r\n  {} as { [bucket: number]: string }\r\n);\r\n\r\nexport const ITEM_SLOT_GROUP_WEAPONS = [\r\n  ITEM_SLOT_KINETIC,\r\n  ITEM_SLOT_ENERGY,\r\n  ITEM_SLOT_POWER\r\n];\r\nexport const ITEM_SLOT_GROUP_ARMOR = [\r\n  ITEM_SLOT_HEAD,\r\n  ITEM_SLOT_GLOVES,\r\n  ITEM_SLOT_CHEST,\r\n  ITEM_SLOT_LEGS,\r\n  ITEM_SLOT_CLASS_ITEM\r\n];\r\n\r\nexport const ORDERED_ITEM_SLOTS = [\r\n  ...ITEM_SLOT_GROUP_WEAPONS,\r\n  ...ITEM_SLOT_GROUP_ARMOR\r\n];\r\n\r\nexport const ITEM_TIER_TYPE_EXOTIC = 6;\r\n\r\nexport const ITEM_TYPE_ARMOR = 2;\r\nexport const ITEM_TYPE_WEAPON = 3;\r\n\r\nexport const CLASS_TYPE_ALL = 3;\r\n\r\nexport const CLASS_TITAN = \"titan\";\r\nexport const CLASS_HUNTER = \"hunter\";\r\nexport const CLASS_WARLOCK = \"warlock\";\r\n\r\nexport const CLASS_NAMES = [CLASS_TITAN, CLASS_HUNTER, CLASS_WARLOCK];\r\n\r\nexport const ITEM_TYPE_ARTIFACT = 28;\r\nexport const UNDYING_ARTIFACT_ITEM_HASH = 1387688628;\r\n","import classnames from \"classnames\";\r\nimport React from \"react\";\r\n\r\nimport { CharacterData } from \"../types\";\r\n\r\nimport { ORDERED_ITEM_SLOTS } from \"../constants\";\r\nimport STYLES from \"./CharacterDisplay.module.scss\";\r\n\r\ninterface CharacterDisplayProps {\r\n  data: CharacterData;\r\n}\r\n\r\nconst titleCase = (text: string) =>\r\n  text.substr(0, 1).toUpperCase() + text.substr(1);\r\n\r\ninterface BarProps {\r\n  min: number;\r\n  max: number;\r\n  value: number;\r\n  avgValue: number;\r\n  label: string;\r\n  icon?: string;\r\n}\r\nconst Bar = ({ min, max, value, avgValue, label, icon }: BarProps) => {\r\n  const range = max - min;\r\n  const perc = Math.floor(((value - min) / range) * 1000) / 10;\r\n  const avgPerc = Math.floor(((avgValue - min) / range) * 1000) / 10;\r\n  // const plusTwoPerc = Math.floor(((avgValue + 2 - min) / range) * 1000) / 10\r\n  // const plusFivePerc = Math.floor(((avgValue + 5 - min) / range) * 1000) / 10\r\n  const fullLabelText = `${value} ${label}`;\r\n  const fullLabel = (\r\n    <span className={STYLES.label}>\r\n      <span\r\n        className={classnames(STYLES.power, {\r\n          [STYLES.max]: value >= max,\r\n          [STYLES.belowAverage]: value < avgValue\r\n        })}\r\n      >\r\n        {value}\r\n      </span>\r\n      <span className={STYLES.slotName}>{label}</span>\r\n    </span>\r\n  );\r\n  return (\r\n    <div className={STYLES.barWrapper}>\r\n      <div className={STYLES.iconWrapper}>\r\n        {icon && (\r\n          <img\r\n            className={STYLES.icon}\r\n            src={`https://www.bungie.net${icon}`}\r\n            alt={fullLabelText}\r\n          />\r\n        )}\r\n      </div>\r\n      <div className={STYLES.barContainer}>\r\n        <div className={STYLES.filledBar} style={{ width: `${perc}%` }}>\r\n          {fullLabel}\r\n        </div>\r\n        <div className={STYLES.barLine} style={{ left: `${avgPerc}%` }} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface InlinePowerNumberProps {\r\n  children: number | string;\r\n}\r\nconst Power = ({ children }: InlinePowerNumberProps) => (\r\n  <span className={STYLES.inlinePowerNumber}>{children}</span>\r\n);\r\n\r\nconst CharacterDisplay = ({ data }: CharacterDisplayProps) => {\r\n  const classItemNames: { [key: string]: string } = {\r\n    hunter: \"Hunter Cloak\",\r\n    titan: \"Titan Mark\",\r\n    warlock: \"Warlock Bond\"\r\n  };\r\n  const slotFullNames: { [key: string]: string } = {\r\n    chest: \"Chest Armor\",\r\n    classItem: classItemNames[data.className],\r\n    energy: \"Energy Weapon\",\r\n    gloves: \"Gauntlets\",\r\n    head: \"Helmet\",\r\n    kinetic: \"Kinetic Weapon\",\r\n    legs: \"Leg Armor\",\r\n    power: \"Power Weapon\"\r\n  };\r\n\r\n  const rgbString = ({\r\n    red,\r\n    green,\r\n    blue\r\n  }: {\r\n    red: number;\r\n    green: number;\r\n    blue: number;\r\n  }) => `rgb(${red},${green},${blue})`;\r\n\r\n  interface PowerBySlot {\r\n    [slotName: string]: number;\r\n  }\r\n\r\n  // Get power by slot, using overall power if slot data does not exist\r\n  const powerBySlot = ORDERED_ITEM_SLOTS.reduce(\r\n    (slots, slotName) => ({\r\n      ...slots,\r\n      [slotName]: data.topItemBySlot\r\n        ? data.topItemBySlot[slotName].instanceData.primaryStat.value\r\n        : data.overallPower\r\n    }),\r\n    {} as PowerBySlot\r\n  );\r\n\r\n  // Round to 50s\r\n  const minItemPower = Math.min(...Object.values(powerBySlot));\r\n  const minPowerToDisplay = Math.max(\r\n    Math.floor(minItemPower / 50) * 50 - 50,\r\n    0\r\n  );\r\n  const maxItemPower = Math.max(...Object.values(powerBySlot));\r\n  const maxPowerToDisplay =\r\n    data.maxItemPower || Math.ceil(maxItemPower / 50) * 50;\r\n\r\n  const roundedPower = Math.floor(data.overallPower);\r\n\r\n  const range = maxPowerToDisplay - minPowerToDisplay;\r\n  const perc =\r\n    Math.floor(((roundedPower - minPowerToDisplay) / range) * 1000) / 10;\r\n\r\n  const withSign = (value: number) => {\r\n    if (value >= 0) {\r\n      return `+${value}`;\r\n    }\r\n    return `${value}`;\r\n  };\r\n\r\n  const summableArtifactBonusPower = data.artifactData\r\n    ? data.artifactData.bonusPower\r\n    : 0;\r\n\r\n  return (\r\n    <div\r\n      className={classnames(\r\n        STYLES.characterDisplay,\r\n        STYLES[`class_${data.className}`]\r\n      )}\r\n      style={{ backgroundColor: rgbString(data.character.emblemColor) }}\r\n    >\r\n      <div className={STYLES.header}>\r\n        <img\r\n          className={STYLES.emblemBackground}\r\n          src={`https://www.bungie.net${data.character.emblemBackgroundPath}`}\r\n          alt=\"\"\r\n        />\r\n        <div className={STYLES.name}>{titleCase(data.className)}</div>\r\n        <div className={STYLES.power}>\r\n          {roundedPower + summableArtifactBonusPower}\r\n        </div>\r\n      </div>\r\n      <div className={STYLES.details}>\r\n        <div className={STYLES.detailsRow}>\r\n          <div className={STYLES.detailsLabel}>Max equippable gear power:</div>\r\n          <div className={STYLES.defailsValue}>\r\n            <Power>{roundedPower}</Power>\r\n          </div>\r\n        </div>\r\n        {data.artifactData ? (\r\n          <>\r\n            <div className={STYLES.detailsRow}>\r\n              <div className={STYLES.detailsLabel}>\r\n                <img\r\n                  className={STYLES.detailsInlineIcon}\r\n                  src={`https://www.bungie.net${data.artifactData.iconPath}`}\r\n                  alt=\"\"\r\n                />\r\n                {data.artifactData.name} bonus power:\r\n              </div>\r\n              <div className={STYLES.detailsValue}>\r\n                <Power>{withSign(data.artifactData.bonusPower)}</Power>\r\n              </div>\r\n            </div>\r\n\r\n            <div className={STYLES.detailsRow}>\r\n              <div className={STYLES.detailsLabel}>Total combined power:</div>\r\n              <div className={STYLES.detailsValue}>\r\n                <Power>{roundedPower + summableArtifactBonusPower}</Power>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : null}\r\n      </div>\r\n      <div className={STYLES.powerBars}>\r\n        <div className={STYLES.powerRange}>\r\n          <div className={STYLES.minPower}>{minPowerToDisplay}</div>\r\n          <div className={STYLES.rangeLine} />\r\n          <div className={STYLES.maxPower}>{maxPowerToDisplay}</div>\r\n        </div>\r\n        <div className={STYLES.bars}>\r\n          {Object.entries(powerBySlot).map(([slotName, power]) => {\r\n            const bestItem = data.topItemBySlot && data.topItemBySlot[slotName];\r\n            return (\r\n              <Bar\r\n                key={`${data.id}_${slotName}`}\r\n                min={minPowerToDisplay}\r\n                max={maxPowerToDisplay}\r\n                value={power}\r\n                avgValue={roundedPower}\r\n                label={slotFullNames[slotName] || slotName}\r\n                icon={\r\n                  bestItem &&\r\n                  bestItem.itemDefinition &&\r\n                  bestItem.itemDefinition.displayProperties.icon\r\n                }\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n        <div className={STYLES.powerLabel}>\r\n          <div className={STYLES.indicator} style={{ left: `${perc}%` }}>\r\n            {roundedPower}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={STYLES.hints}>\r\n        {data.potentialOverallPower &&\r\n        data.potentialOverallPower > data.overallPower ? (\r\n          <div className={classnames(STYLES.hint, STYLES.worldDropHint)}>\r\n            <span>\r\n              World drops can increase your overall gear power to{\" \"}\r\n              <Power>{data.potentialOverallPower}</Power>\r\n            </span>\r\n            <div className={STYLES.hintExtra}>\r\n              <div className={STYLES.hintExtraInner}>\r\n                <p>\r\n                  World drops (from strikes, public events, vendors,\r\n                  non-powerful legendary rewards) can drop with a power level\r\n                  from <Power>{data.overallPower - 3}</Power> to{\" \"}\r\n                  <Power>{data.overallPower}</Power> for this character.\r\n                </p>\r\n                <p>\r\n                  Replacing items below your current overall power can increase\r\n                  your power to a higher average.\r\n                </p>\r\n                {data.powerRequiredToReachPotential ? (\r\n                  <p>\r\n                    You need an extra{\" \"}\r\n                    <Power>{data.powerRequiredToReachPotential}</Power> total\r\n                    power on your items to reach an overall power of{\" \"}\r\n                    <Power>{data.potentialOverallPower}</Power>.\r\n                  </p>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n\r\n        {data.potentialOverallPower === data.overallPower &&\r\n        data.overallPower >= 900 &&\r\n        data.overallPower < 950 ? (\r\n          <div className={classnames(STYLES.hint, STYLES.powerfulHint)}>\r\n            <span>\r\n              Powerful rewards can increase your overall gear power up to the\r\n              powerful cap of <Power>{950}</Power>\r\n            </span>\r\n            <div className={STYLES.hintExtra}>\r\n              <div className={STYLES.hintExtraInner}>\r\n                <p>\r\n                  Powerful and pinnacle reward sources (Weekly challenges, Year\r\n                  3 raids) will give you items above your overall gear power,\r\n                  with powerful rewards capped at <Power>{950}</Power>.\r\n                </p>\r\n                <p>\r\n                  Powerful rewards (Tier 1) will give items up to 3 levels above\r\n                  your overall gear power\r\n                </p>\r\n                <p>\r\n                  Powerful rewards (Tier 2) will give items up to 5 levels above\r\n                  your overall gear power\r\n                </p>\r\n                <p>\r\n                  Pinnacle rewards will give items up to 8 levels above your\r\n                  overall gear power\r\n                </p>\r\n                <p>\r\n                  After getting a powerful reward, check back here to see if\r\n                  it's beneficial to catch up the rest of your slots with world\r\n                  drops before getting another!\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n\r\n        {data.potentialOverallPower === data.overallPower &&\r\n        data.overallPower >= 950 &&\r\n        data.overallPower < 960 ? (\r\n          <div className={classnames(STYLES.hint, STYLES.pinnacleHint)}>\r\n            <span>\r\n              Pinnacle rewards can increase your overall gear power up to the\r\n              pinnacle cap of 960\r\n            </span>\r\n            <div className={STYLES.hintExtra}>\r\n              <p>\r\n                Pinnacle reward sources (Weekly challenges, Year 3 raids) will\r\n                give you items above your overall gear power, capped at 960.\r\n              </p>\r\n              <p>\r\n                Pinnacle rewards will give items up to 8 levels above your\r\n                overall gear power\r\n              </p>\r\n              <p>\r\n                After getting a pinnacle reward, check back here to see if it's\r\n                beneficial to catch up the rest of your slots with world drops\r\n                before getting another!\r\n              </p>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterDisplay;\r\n","import React from \"react\";\n\nimport STYLES from \"./LoadingSpinner.module.scss\";\n\ninterface LoadingSpinnerProps {\n  status: string;\n}\n\nconst LoadingSpinner = ({ status }: LoadingSpinnerProps) => {\n  return (\n    <div className={STYLES.loadingSpinnerContainer}>\n      <div className={STYLES.anchor}>\n        <div className={STYLES.spinnerLarge} />\n        <div className={STYLES.spinnerSmall} />\n        <div className={STYLES.status}>{status}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import { UserInfoCard } from \"bungie-api-ts/user\";\nimport classnames from \"classnames\";\nimport React from \"react\";\n\nimport { getDestinyMemberships } from \"../services/bungie-auth\";\nimport STYLES from \"./MembershipSelect.module.scss\";\n\ninterface MembershipSelectProps {\n  onMembershipSelect: (membership: UserInfoCard) => any;\n}\n\nconst MembershipSelect = ({ onMembershipSelect }: MembershipSelectProps) => {\n  const destinyMemberships = getDestinyMemberships();\n\n  if (!destinyMemberships) {\n    return null;\n  }\n\n  if (destinyMemberships.length === 0) {\n    return <div>No destiny memberships!</div>;\n  }\n\n  const PLATFORMS: { [key: number]: string } = {\n    1: \"xbox\",\n    2: \"psn\",\n    3: \"steam\",\n    4: \"blizzard\"\n  };\n\n  return (\n    <div className={STYLES.membershipSelect}>\n      {destinyMemberships.map(m => {\n        return (\n          <div\n            key={m.membershipId}\n            className={classnames(\n              STYLES.membership,\n              STYLES[`platform_${PLATFORMS[m.membershipType]}`]\n            )}\n            onClick={() => onMembershipSelect(m)}\n          >\n            {m.displayName}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default MembershipSelect;\n","import {\r\n  DestinyCharacterComponent,\r\n  DestinyItemComponent\r\n} from \"bungie-api-ts/destiny2\";\r\n\r\nimport forIn from \"lodash/forIn\";\r\nimport groupBy from \"lodash/groupBy\";\r\nimport mapValues from \"lodash/mapValues\";\r\nimport maxBy from \"lodash/maxBy\";\r\nimport sumBy from \"lodash/sumBy\";\r\n\r\nimport {\r\n  CLASS_NAMES,\r\n  CLASS_TYPE_ALL,\r\n  ITEM_BUCKET_SLOTS,\r\n  ITEM_SLOT_BUCKETS,\r\n  ITEM_TYPE_ARMOR,\r\n  ITEM_TYPE_WEAPON,\r\n  UNDYING_ARTIFACT_ITEM_HASH\r\n} from \"../constants\";\r\nimport {\r\n  CharacterData,\r\n  ItemBySlot,\r\n  JoinedItemDefinition,\r\n  PowerBySlot,\r\n  SeasonalArtifactData\r\n} from \"../types\";\r\nimport { getBasicProfile, getFullProfile, getManifest } from \"./bungie-api\";\r\nimport { auth, getSelectedDestinyMembership } from \"./bungie-auth\";\r\n\r\nconst getPowerBySlot = (itemsBySlot: ItemBySlot): PowerBySlot =>\r\n  mapValues(itemsBySlot, item => item.instanceData.primaryStat.value);\r\n\r\nconst getAveragePower = (powerBySlot: PowerBySlot) =>\r\n  Object.values(powerBySlot).reduce((sum, power) => sum + power, 0) /\r\n  Object.keys(ITEM_SLOT_BUCKETS).length;\r\nconst getOverallPower = (powerBySlot: PowerBySlot) =>\r\n  Math.floor(getAveragePower(powerBySlot));\r\n\r\nconst mergeItems = <\r\n  T extends { [key: string]: { items: DestinyItemComponent[] } }\r\n>(\r\n  characterItemMap: T\r\n) => {\r\n  return Object.values(characterItemMap).reduce(\r\n    (allItems, characterItems) => allItems.concat(characterItems.items),\r\n    [] as DestinyItemComponent[]\r\n  );\r\n};\r\n\r\nconst isItemEquippableByCharacter = (\r\n  item: JoinedItemDefinition,\r\n  character: DestinyCharacterComponent\r\n) => {\r\n  if (item.instanceData.canEquip) {\r\n    return true;\r\n  } // If the game says we can equip it, let's believe it\r\n  if (item.instanceData.cannotEquipReason === 16) {\r\n    return true;\r\n  } // Only reason is that it's in your vault\r\n  if (item.instanceData.equipRequiredLevel > character.baseCharacterLevel) {\r\n    return false;\r\n  }\r\n  if (\r\n    item.itemDefinition.classType !== CLASS_TYPE_ALL &&\r\n    item.itemDefinition.classType !== character.classType\r\n  ) {\r\n    return false;\r\n  }\r\n  // Let's ignore the rest for now\r\n  return true;\r\n};\r\n\r\nconst getBasicCharacterData = async (\r\n  pendingBasicProfile: ReturnType<typeof getBasicProfile>\r\n) => {\r\n  const profile = await pendingBasicProfile;\r\n  if (!profile || !profile.Response || !profile.Response.characters) {\r\n    return;\r\n  }\r\n  const characters = profile.Response.characters.data;\r\n\r\n  if (characters) {\r\n    const getDataForCharacterId = (id: string): CharacterData => {\r\n      const character = characters[id];\r\n      const className = CLASS_NAMES[character.classType];\r\n      return {\r\n        character,\r\n        className,\r\n        id,\r\n        overallPower: character.light\r\n      };\r\n    };\r\n\r\n    const characterIds = Object.keys(characters);\r\n    const characterData = characterIds.map(id => getDataForCharacterId(id));\r\n    return characterData;\r\n  }\r\n};\r\n\r\nexport const getCharacterData = async (\r\n  setCharacterData: (state: CharacterData[]) => any,\r\n  setIsFetchingCharacterData: (state: boolean) => any,\r\n  returnBasicCharacterData: boolean = false\r\n) => {\r\n  try {\r\n    const isAuthed = await auth();\r\n    if (!isAuthed) {\r\n      return;\r\n    }\r\n\r\n    const pendingManifest = getManifest();\r\n\r\n    setIsFetchingCharacterData(true);\r\n\r\n    const destinyMembership = getSelectedDestinyMembership();\r\n    if (!destinyMembership) {\r\n      return;\r\n    }\r\n\r\n    let pendingBasicProfile: ReturnType<typeof getBasicProfile> | undefined;\r\n\r\n    // Flag lets this be disabled to prevent setting after full profile is returned\r\n    let shouldSetBasicCharacterData = true;\r\n    // Produce basic data if flag is set\r\n    if (returnBasicCharacterData) {\r\n      pendingBasicProfile = getBasicProfile(\r\n        destinyMembership.membershipType,\r\n        destinyMembership.membershipId\r\n      );\r\n      pendingBasicProfile.catch(() => {\r\n        /* Do nothing */\r\n      });\r\n      const pendingBasicCharacterData = getBasicCharacterData(\r\n        pendingBasicProfile\r\n      ).catch(e => {\r\n        /* Do nothing */\r\n      });\r\n      (async () => {\r\n        const basicCharacterData = await pendingBasicCharacterData;\r\n        if (basicCharacterData && shouldSetBasicCharacterData) {\r\n          setCharacterData(basicCharacterData);\r\n        }\r\n      })();\r\n    }\r\n\r\n    const fullProfile = await getFullProfile(\r\n      destinyMembership.membershipType,\r\n      destinyMembership.membershipId\r\n    );\r\n    setIsFetchingCharacterData(false);\r\n\r\n    if (\r\n      !fullProfile ||\r\n      !fullProfile.Response ||\r\n      !fullProfile.Response.characters ||\r\n      !fullProfile.Response.characters.data ||\r\n      !fullProfile.Response.characterEquipment ||\r\n      !fullProfile.Response.characterEquipment.data ||\r\n      !fullProfile.Response.characterInventories ||\r\n      !fullProfile.Response.characterInventories.data ||\r\n      !fullProfile.Response.profileInventory ||\r\n      !fullProfile.Response.profileInventory.data ||\r\n      !fullProfile.Response.itemComponents ||\r\n      !fullProfile.Response.itemComponents.instances ||\r\n      !fullProfile.Response.itemComponents.instances.data\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const characters = fullProfile.Response.characters.data;\r\n    const characterEquipments = fullProfile.Response.characterEquipment.data;\r\n    const characterInventories = fullProfile.Response.characterInventories.data;\r\n    const profileInventories = fullProfile.Response.profileInventory.data;\r\n    const itemInstances = fullProfile.Response.itemComponents.instances.data;\r\n\r\n    const manifest = await pendingManifest;\r\n\r\n    if (!manifest) {\r\n      return;\r\n    }\r\n\r\n    const allCharacterItems = mergeItems(characterInventories)\r\n      .concat(mergeItems(characterEquipments))\r\n      .concat(profileInventories.items);\r\n    const allCharacterWeapons = allCharacterItems.filter(i => {\r\n      const itemDefinition =\r\n        i.itemHash && manifest.DestinyInventoryItemDefinition[i.itemHash];\r\n      return itemDefinition && itemDefinition.itemType === ITEM_TYPE_WEAPON;\r\n    });\r\n\r\n    const getDataForCharacterId = (id: string): CharacterData => {\r\n      const character = characters[id];\r\n      const className = CLASS_NAMES[character.classType];\r\n\r\n      const mapAndFilterItems = (\r\n        items: DestinyItemComponent[]\r\n      ): JoinedItemDefinition[] =>\r\n        items\r\n          .map(item => {\r\n            const instanceData = item.itemInstanceId\r\n              ? itemInstances[item.itemInstanceId]\r\n              : undefined;\r\n            const itemDefinition =\r\n              manifest.DestinyInventoryItemDefinition[item.itemHash];\r\n            return {\r\n              ...item,\r\n              instanceData,\r\n              itemDefinition\r\n            };\r\n          })\r\n          .filter(\r\n            i =>\r\n              i.instanceData &&\r\n              i.itemDefinition &&\r\n              [ITEM_TYPE_ARMOR, ITEM_TYPE_WEAPON].includes(\r\n                i.itemDefinition.itemType\r\n              )\r\n          )\r\n          .map(i => ({\r\n            ...i,\r\n            instanceData: i.instanceData!,\r\n            itemDefinition: i.itemDefinition!\r\n          }))\r\n          .map(i => ({\r\n            ...i,\r\n            slotName:\r\n              ITEM_BUCKET_SLOTS[i.itemDefinition.inventory.bucketTypeHash]\r\n          }))\r\n          .filter(i => isItemEquippableByCharacter(i, character));\r\n\r\n      const characterItems = mapAndFilterItems(\r\n        characterInventories[id].items\r\n          .concat(characterEquipments[id].items)\r\n          .concat(allCharacterWeapons)\r\n      );\r\n      const relevantProfileItems = mapAndFilterItems(\r\n        profileInventories.items\r\n      ).filter(\r\n        i =>\r\n          i.itemDefinition.classType === CLASS_TYPE_ALL ||\r\n          i.itemDefinition.classType === character.classType\r\n      );\r\n\r\n      const allItems = characterItems.concat(relevantProfileItems);\r\n\r\n      const getItemScore = (item: JoinedItemDefinition) => {\r\n        if (!item || !item.instanceData || !item.instanceData.primaryStat) {\r\n          return 0;\r\n        }\r\n        let score = item.instanceData.primaryStat.value;\r\n        if (item.instanceData.isEquipped) {\r\n          score += 0.1;\r\n        }\r\n        if (item.location === 1) {\r\n          score += 0.05;\r\n        }\r\n        return score;\r\n      };\r\n\r\n      const getEquipLabel = (item: JoinedItemDefinition) =>\r\n        item.itemDefinition.equippingBlock.uniqueLabel;\r\n\r\n      // Group by slot\r\n      const itemsBySlot = groupBy(allItems, i => i.slotName);\r\n      // Get max power items per slot\r\n      let topItemBySlot = mapValues(\r\n        itemsBySlot,\r\n        items => maxBy(items, getItemScore)!\r\n      );\r\n      // Get overlaps by equip label\r\n      const uniqueEquippedGroups = groupBy(\r\n        Object.values(topItemBySlot).filter(getEquipLabel),\r\n        getEquipLabel\r\n      );\r\n      // For overlaps with more than one item, generate valid options where all-but-one item is swapped for the next best non-exotic\r\n      forIn(uniqueEquippedGroups, uniqueEquippedGroup => {\r\n        if (uniqueEquippedGroup.length <= 1) {\r\n          return;\r\n        }\r\n\r\n        const validItemCombinations: ItemBySlot[] = [];\r\n\r\n        uniqueEquippedGroup.forEach(item => {\r\n          const otherItems = uniqueEquippedGroup.filter(\r\n            otherItem => otherItem !== item\r\n          );\r\n          let isCombinationValid = true;\r\n          const combination = { ...topItemBySlot };\r\n          otherItems.forEach(otherItem => {\r\n            // Find non-exotics for this slot\r\n            const nonExotics = itemsBySlot[otherItem.slotName].filter(\r\n              i => !getEquipLabel(i)\r\n            );\r\n            if (nonExotics.length > 0) {\r\n              // Select max power from non-exotics\r\n              combination[otherItem.slotName] = maxBy(\r\n                nonExotics,\r\n                getItemScore\r\n              )!;\r\n            } else {\r\n              // No non-exotic options for this slot, so whole combination is invalidaa\r\n              isCombinationValid = false;\r\n            }\r\n          });\r\n          if (isCombinationValid) {\r\n            validItemCombinations.push(combination);\r\n          }\r\n        });\r\n\r\n        // Select highest total scoring valid combination, if alternative item combinations have been generated\r\n        if (validItemCombinations.length > 0) {\r\n          const bestCombination = maxBy(validItemCombinations, combination =>\r\n            sumBy(Object.values(combination), getItemScore)\r\n          )!;\r\n          topItemBySlot = bestCombination;\r\n        }\r\n      });\r\n\r\n      const powerBySlot = getPowerBySlot(topItemBySlot);\r\n      const overallPower = getOverallPower(powerBySlot);\r\n\r\n      const artifactItemComponent = Object.values(characterEquipments)\r\n        .flatMap(i => i.items)\r\n        .find(i => i.itemHash === UNDYING_ARTIFACT_ITEM_HASH);\r\n\r\n      let artifactData: SeasonalArtifactData | undefined;\r\n      if (artifactItemComponent && artifactItemComponent.itemInstanceId) {\r\n        const artifactDefinition = manifest.DestinyInventoryItemDefinition[\r\n          artifactItemComponent.itemHash\r\n        ]!;\r\n        const artifactInstance = itemInstances[\r\n          artifactItemComponent.itemInstanceId\r\n        ]!;\r\n        artifactData = {\r\n          bonusPower: artifactInstance.primaryStat.value,\r\n          iconPath: artifactDefinition.displayProperties.icon,\r\n          name: artifactDefinition.displayProperties.name\r\n        };\r\n      }\r\n\r\n      const potentialPowerBySlot = { ...powerBySlot };\r\n      while (\r\n        Object.values(potentialPowerBySlot).some(\r\n          power => power < getOverallPower(potentialPowerBySlot) || power < 900\r\n        )\r\n      ) {\r\n        const tempPotentialOverallPower = getOverallPower(potentialPowerBySlot);\r\n        Object.keys(potentialPowerBySlot).forEach(\r\n          slot =>\r\n            (potentialPowerBySlot[slot] = Math.max(\r\n              900,\r\n              Math.max(tempPotentialOverallPower, potentialPowerBySlot[slot])\r\n            ))\r\n        );\r\n      }\r\n      const potentialOverallPower = getOverallPower(potentialPowerBySlot);\r\n\r\n      const averagePower = getAveragePower(powerBySlot);\r\n      const powerRequiredToReachPotential =\r\n        (potentialOverallPower - averagePower) * 8;\r\n\r\n      const resultData: CharacterData = {\r\n        artifactData,\r\n        character,\r\n        className,\r\n        id,\r\n        overallPower,\r\n        potentialOverallPower,\r\n        potentialPowerBySlot,\r\n        topItemBySlot,\r\n        powerRequiredToReachPotential\r\n      };\r\n\r\n      return resultData;\r\n    };\r\n\r\n    const characterIds = Object.keys(characters);\r\n    const characterData = characterIds.map(id => getDataForCharacterId(id));\r\n    shouldSetBasicCharacterData = false;\r\n    setCharacterData(characterData);\r\n  } catch (e) {\r\n    console.error(`Error fetching manifest and character data`, e);\r\n    setIsFetchingCharacterData(false);\r\n    return;\r\n  }\r\n};\r\n","import { UserInfoCard } from \"bungie-api-ts/user\";\nimport React, { useEffect, useState } from \"react\";\nimport ga from \"./services/ga\";\n\nimport {\n  auth,\n  hasSelectedDestinyMembership,\n  hasValidAuth,\n  setSelectedDestinyMembership\n} from \"./services/bungie-auth\";\nimport { CharacterData } from \"./types\";\n\nimport CharacterDisplay from \"./components/CharacterDisplay\";\nimport LoadingSpinner from \"./components/LoadingSpinner\";\nimport MembershipSelect from \"./components/MembershipSelect\";\nimport { getManifest } from \"./services/bungie-api\";\nimport { getCharacterData } from \"./services/utils\";\n\nimport \"normalize.css\";\nimport STYLES from \"./App.module.scss\";\n\nlet characterDataRefreshTimer: number | undefined;\n\nconst App = () => {\n  const [isAuthed, setIsAuthed] = useState<boolean>(hasValidAuth());\n  const [hasAuthError, setAuthError] = useState<boolean>(false);\n  const [hasMembership, setHasMembership] = useState<boolean>(\n    hasSelectedDestinyMembership()\n  );\n  const [hasManifestData, setHasManifestData] = useState<boolean>(false);\n  const [hasManifestError, setManifestError] = useState<boolean>(false);\n  const [isFetchingCharacterData, setIsFetchingCharacterData] = useState<\n    boolean\n  >(false);\n  const [characterData, setCharacterData] = useState<\n    CharacterData[] | undefined\n  >(undefined);\n\n  useEffect(() => {\n    const doAuth = async () => {\n      const authResult = await auth();\n      if (authResult) {\n        setIsAuthed(true);\n      } else {\n        setAuthError(true);\n      }\n    };\n    if (!isAuthed) {\n      doAuth();\n    }\n  });\n\n  useEffect(() => {\n    (async () => {\n      try {\n        await getManifest();\n        setHasManifestData(true);\n      } catch (e) {\n        console.error(e.message);\n        setManifestError(true);\n      }\n    })();\n  });\n\n  useEffect(() => {\n    const doGetCharacterData = (returnBasicCharacterData: boolean = false) =>\n      getCharacterData(\n        setCharacterData,\n        setIsFetchingCharacterData,\n        returnBasicCharacterData\n      );\n    if (isAuthed && hasMembership && !isFetchingCharacterData) {\n      if (!characterDataRefreshTimer) {\n        characterDataRefreshTimer = setInterval(doGetCharacterData, 10000);\n        doGetCharacterData(true);\n      }\n    }\n  }, [isAuthed, hasMembership, hasManifestData, isFetchingCharacterData]);\n\n  const onSelectMembership = (membership: UserInfoCard) => {\n    ga.event({\n      category: \"Platform\",\n      action: \"Select platform\",\n      label: `Membership type: ${membership.membershipType}`\n    });\n    setSelectedDestinyMembership(membership);\n    setHasMembership(true);\n  };\n\n  let status = \"\";\n  if (hasAuthError) {\n    status = \"Authentication error, refresh page to try again!\";\n  } else if (hasManifestError) {\n    status = \"Error fetching manifest, refresh page to try again!\";\n  } else if (!isAuthed) {\n    status = \"Authenticating...\";\n  } else if (!hasMembership) {\n    status = \"Waiting for Destiny platform selection...\";\n  } else if (!hasManifestData) {\n    status = \"Fetching Destiny item manifest...\";\n  } else if (!characterData || characterData.length === 0) {\n    if (isFetchingCharacterData) {\n      status = \"Fetching character data...\";\n    } else {\n      status = \"No character data\";\n    }\n  }\n\n  (window as any).characterData = characterData;\n\n  if (characterData && characterData.length > 0) {\n    return (\n      <div className={STYLES.App}>\n        <MembershipSelect onMembershipSelect={onSelectMembership} />\n        <div className={STYLES.charactersContainer}>\n          <div className={STYLES.characters}>\n            {characterData.map(c => (\n              <CharacterDisplay key={c.id} data={c} />\n            ))}\n          </div>\n        </div>\n        {status && <LoadingSpinner status={status} />}\n      </div>\n    );\n  }\n\n  return (\n    <div className={STYLES.App}>\n      <LoadingSpinner status={status} />\n      <MembershipSelect onMembershipSelect={onSelectMembership} />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"membershipSelect\":\"MembershipSelect_membershipSelect__3GbZz\",\"membership\":\"MembershipSelect_membership__3vKKK\",\"platform_xbox\":\"MembershipSelect_platform_xbox__1EgLN\",\"platform_psn\":\"MembershipSelect_platform_psn__2ASN8\",\"platform_steam\":\"MembershipSelect_platform_steam__3zG5m\",\"platform_blizzard\":\"MembershipSelect_platform_blizzard__1zLDb\"};"],"sourceRoot":""}