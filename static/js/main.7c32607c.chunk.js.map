{"version":3,"sources":["components/characterDisplay/PowerBars.module.scss","components/characterDisplay/PowerDetails.module.scss","components/CharacterDisplay.module.scss","components/LoadingSpinner.module.scss","services/ga.ts","services/bungie-api.ts","services/bungie-auth.ts","constants.ts","components/characterDisplay/PowerBar.tsx","components/characterDisplay/PowerBars.tsx","components/characterDisplay/Power.tsx","components/characterDisplay/PowerDetails.tsx","components/characterDisplay/PowerHints.tsx","components/CharacterDisplay.tsx","components/LoadingSpinner.tsx","components/MembershipSelect.tsx","services/utils.ts","App.tsx","components/FetchSpinner.tsx","serviceWorker.ts","index.tsx","App.module.scss","components/FetchSpinner.module.scss","components/MembershipSelect.module.scss","components/characterDisplay/PowerHints.module.scss","components/characterDisplay/PowerBar.module.scss","components/characterDisplay/Power.module.scss"],"names":["module","exports","powerBars","powerRange","rangeLine","powerLabel","indicator","details","detailsRow","detailsLabel","detailsInlineIcon","detailsValue","characterDisplay","header","emblemBackground","name","power","content","anchor","spinner","spin","loadingSpinnerContainer","spinnerLarge","spinnerSmall","status","ReactGA","initialize","debug","process","set","anonymizeIp","pageview","window","location","pathname","search","cachedManifestData","getManifestPromise","bungieAuthedFetch","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","config","accessToken","headers","url","response","wrap","_context","prev","next","getAccessToken","x-api-key","BUNGIE_API_KEY","Authorization","concat","params","entries","map","_ref2","_ref3","slicedToArray","key","value","encodeURIComponent","fetch","sent","json","abrupt","t0","console","error","stop","_x","apply","this","arguments","manifestPropertyWhitelist","getCachedManifestData","_ref4","_callee2","manifestData","_context2","log","get","getRemoteManifestData","_ref5","_callee3","manifest","version","manifestDataResponse","_context3","Error","jsonWorldContentPaths","en","keys","forEach","includes","localStorage","setItem","_x2","getManifest","_ref6","_callee5","_context5","_callee4","localStorageManifestVersion","freshManifestData","_context4","ga","event","category","action","nonInteraction","getDestinyManifest","getItem","Response","ErrorStatus","undefined","getFullProfile","membershipType","membershipId","getProfile","components","destinyMembershipId","clearStorage","removeItem","handleTokenResponse","tokenResponse","data","tokenDuration","expiryTime","bungieMembershipId","destinyMembershipsResponse","destinyMemberships","_args","length","access_token","expires_in","Date","now","membership_id","toString","getMembershipDataById","authSuccess","JSON","stringify","setSelectedDestinyMembership","fetchAuthToken","authCode","body","cache","credentials","Content-Type","method","redirect","referrer","hasValidAuth","accessTokenExpiryTime","parseInt","getDestinyMemberships","destinyMembershipsString","parse","e","message","getSelectedDestinyMembership","destinyMembershipString","membership","auth","queryParams","authResponse","URLSearchParams","replace","origin","ITEM_SLOT_BUCKETS","_ITEM_SLOT_BUCKETS","defineProperty","ITEM_BUCKET_SLOTS","reduce","buckets","slot","bucket","_objectSpread","ORDERED_ITEM_SLOTS","ITEM_TYPE_ARMOR","ITEM_TYPE_WEAPON","CLASS_NAMES","PowerBar","_classnames","min","max","avgValue","label","icon","range","perc","Math","floor","avgPerc","fullLabelText","fullLabel","react_default","createElement","className","STYLES","classnames","belowAverage","slotName","barWrapper","iconWrapper","src","alt","barContainer","filledBar","style","width","barLine","left","classItemNames","hunter","titan","warlock","PowerBars","powerBySlot","slots","PowerBars_objectSpread","topItemBySlot","instanceData","primaryStat","overallPower","roundedPower","minItemPower","toConsumableArray","values","minPowerToDisplay","maxItemPower","maxItemPowerGrouping","maxPowerToDisplay","ceil","minPower","maxPower","bars","bestItem","PowerBar_PowerBar","id","chest","classItem","energy","gloves","head","kinetic","legs","itemDefinition","displayProperties","Power","children","inlinePowerNumber","PowerDetails","artifactData","bonusPower","defailsValue","Power_Power","Fragment","iconPath","PowerHints","hints","potentialOverallPower","hint","worldDropHint","hintExtra","hintExtraInner","powerRequiredToReachPotential","powerfulHint","pinnacleHint","CharacterDisplay","text","summableArtifactBonusPower","backgroundColor","red","green","blue","rgbString","character","emblemColor","emblemBackgroundPath","substr","toUpperCase","PowerDetails_PowerDetails","PowerBars_PowerBars","PowerHints_PowerHints","LoadingSpinner","MembershipSelect","onMembershipSelect","PLATFORMS","1","2","3","4","membershipSelect","m","onClick","displayName","characterDataRefreshTimer","getPowerBySlot","itemsBySlot","mapValues","item","getAveragePower","sum","getOverallPower","mergeItems","characterItemMap","allItems","characterItems","items","isItemEquippableByCharacter","canEquip","cannotEquipReason","equipRequiredLevel","baseCharacterLevel","classType","getBasicCharacterData","pendingBasicProfile","profile","characters","getDataForCharacterId","characterIds","characterData","light","getCharacterData","setCharacterData","setIsFetchingCharacterData","returnBasicCharacterData","pendingManifest","destinyMembership","shouldSetBasicCharacterData","pendingBasicCharacterData","fullProfile","_characters","characterEquipments","characterInventories","profileInventories","itemInstances","allCharacterItems","allCharacterWeapons","_args3","catch","basicCharacterData","characterEquipment","profileInventory","itemComponents","instances","filter","i","itemHash","DestinyInventoryItemDefinition","itemType","mapAndFilterItems","utils_objectSpread","itemInstanceId","inventory","bucketTypeHash","relevantProfileItems","getItemScore","score","isEquipped","getEquipLabel","equippingBlock","uniqueLabel","groupBy","maxBy","uniqueEquippedGroups","forIn","uniqueEquippedGroup","validItemCombinations","otherItems","otherItem","isCombinationValid","combination","nonExotics","push","bestCombination","sumBy","artifactItemComponent","flatMap","find","artifactDefinition","potentialPowerBySlot","_loop","tempPotentialOverallPower","some","averagePower","_x3","FetchSpinner","fetchSpinnerContainer","refreshPage","App","_useState","useState","_useState2","isAuthed","setIsAuthed","_useState3","_useState4","hasAuthError","setAuthError","_useState5","_useState6","hasMembership","setHasMembership","_useState7","_useState8","hasManifestData","setHasManifestData","_useState9","_useState10","hasManifestError","setManifestError","_useState11","_useState12","isFetchingCharacterData","_useState13","_useState14","useEffect","setTimeout","doAuth","doGetCharacterData","setInterval","refreshCharacterData","onSelectMembership","href","components_MembershipSelect","charactersContainer","c","components_CharacterDisplay","components_LoadingSpinner","components_FetchSpinner","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","loadingContainer","loadingStatus","spinnerTiny","platform_xbox","platform_psn","platform_steam","platform_blizzard","separator"],"mappings":"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","file":"static/js/main.7c32607c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"powerBars\":\"PowerBars_powerBars__3OF16\",\"powerRange\":\"PowerBars_powerRange__3aluJ\",\"rangeLine\":\"PowerBars_rangeLine__2pL4f\",\"powerLabel\":\"PowerBars_powerLabel__3SEfj\",\"indicator\":\"PowerBars_indicator__e-FBm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"details\":\"PowerDetails_details__2GySY\",\"detailsRow\":\"PowerDetails_detailsRow__2cwCP\",\"detailsLabel\":\"PowerDetails_detailsLabel__2J09s\",\"detailsInlineIcon\":\"PowerDetails_detailsInlineIcon__6tpW-\",\"detailsValue\":\"PowerDetails_detailsValue__2GoPV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"characterDisplay\":\"CharacterDisplay_characterDisplay__3LJ6S\",\"header\":\"CharacterDisplay_header__16L7B\",\"emblemBackground\":\"CharacterDisplay_emblemBackground__2jqgs\",\"name\":\"CharacterDisplay_name__3Aw12\",\"power\":\"CharacterDisplay_power__EMI5z\",\"content\":\"CharacterDisplay_content__ziCgu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"anchor\":\"LoadingSpinner_anchor__3S34b\",\"spinner\":\"LoadingSpinner_spinner__2W4P9\",\"spin\":\"LoadingSpinner_spin__1qIkq\",\"loadingSpinnerContainer\":\"LoadingSpinner_loadingSpinnerContainer__2OZbs\",\"spinnerLarge\":\"LoadingSpinner_spinnerLarge__3zeAT\",\"spinnerSmall\":\"LoadingSpinner_spinnerSmall__25yaq\",\"status\":\"LoadingSpinner_status__33FO4\"};","import ReactGA from \"react-ga\";\r\n\r\nReactGA.initialize(\"UA-149614480-1\", {\r\n  debug: process.env.NODE_ENV === \"development\"\r\n});\r\n\r\n// Anonymize IP addresses, yay GDPR\r\nReactGA.set({ anonymizeIp: true });\r\nReactGA.pageview(window.location.pathname + window.location.search);\r\n\r\nexport default ReactGA;\r\n","import { get, set } from \"idb-keyval\";\n\nimport {\n  DestinyInventoryItemDefinition,\n  DestinyManifest,\n  getDestinyManifest,\n  getProfile\n} from \"bungie-api-ts/destiny2\";\nimport { HttpClientConfig } from \"bungie-api-ts/http\";\nimport { BUNGIE_API_KEY, getAccessToken } from \"./bungie-auth\";\nimport ga from \"./ga\";\n\nexport const bungieAuthedFetch = async (config: HttpClientConfig) => {\n  try {\n    const accessToken = getAccessToken();\n    const headers: { [key: string]: string } = { \"x-api-key\": BUNGIE_API_KEY };\n    if (accessToken) {\n      headers.Authorization = `Bearer ${accessToken}`;\n    }\n    const url = `${config.url}${\n      config.params\n        ? \"?\" +\n          Object.entries(config.params).map(\n            ([key, value]) =>\n              `${encodeURIComponent(key)}=${encodeURIComponent(\n                value as string\n              )}`\n          )\n        : \"\"\n    }`;\n    const response = await fetch(url, { headers });\n    return await response.json();\n  } catch (e) {\n    console.error(e);\n    return {};\n  }\n};\n\nconst MANIFEST_VERSION_KEY = \"MANIFEST_VERSION\";\nconst MANIFEST_IDB_KEY = \"MANIFEST_DATA\";\ninterface ManifestData {\n  DestinyInventoryItemDefinition: {\n    [key: string]: DestinyInventoryItemDefinition | undefined;\n  };\n}\nconst manifestPropertyWhitelist = [\"DestinyInventoryItemDefinition\"];\n\nconst getCachedManifestData = async () => {\n  console.log(\"Loading manifest data from IDB\");\n  const manifestData = await get(MANIFEST_IDB_KEY);\n  console.log(\"Finished loading manifest data from IDB\");\n  return manifestData as ManifestData;\n};\n\nconst getRemoteManifestData = async (manifest: DestinyManifest) => {\n  if (!manifest) {\n    throw Error(\"No manifest!\");\n  }\n  const version = manifest.version;\n  console.log(\"Fetching fresh manifest data\");\n  const manifestDataResponse = await fetch(\n    `https://www.bungie.net${manifest.jsonWorldContentPaths.en}`\n  );\n  const manifestData = await manifestDataResponse.json();\n  console.log(\"Pruning manifest data\");\n  Object.keys(manifestData).forEach(key => {\n    if (!manifestPropertyWhitelist.includes(key)) {\n      delete manifestData[key];\n    }\n  });\n  console.log(\"Storing manifest data in IDB\");\n  await set(MANIFEST_IDB_KEY, manifestData);\n  localStorage.setItem(MANIFEST_VERSION_KEY, version);\n  return manifestData;\n};\n\nlet cachedManifestData: ManifestData | undefined;\nlet getManifestPromise: Promise<ManifestData> | undefined;\n\nexport const getManifest = async (): Promise<ManifestData> => {\n  if (!getManifestPromise) {\n    getManifestPromise = (async () => {\n      ga.event({\n        category: \"Data\",\n        action: \"Attempt load manifest\",\n        nonInteraction: true\n      });\n      const manifest = await getDestinyManifest(bungieAuthedFetch);\n      const localStorageManifestVersion = localStorage.getItem(\n        MANIFEST_VERSION_KEY\n      );\n      if (\n        manifest &&\n        manifest.Response &&\n        manifest.Response.version === localStorageManifestVersion &&\n        !window.location.search.includes(\"updateManifest\")\n      ) {\n        if (!cachedManifestData) {\n          cachedManifestData = await getCachedManifestData();\n        }\n        return cachedManifestData;\n      }\n      if (\n        manifest &&\n        manifest.ErrorStatus &&\n        manifest.ErrorStatus !== \"Success\"\n      ) {\n        ga.event({\n          category: \"Errors\",\n          action: `Error status \"${manifest.ErrorStatus}\" returned from manifest request`,\n          nonInteraction: true\n        });\n        throw Error(\n          `Error status \"${manifest.ErrorStatus}\" returned from manifest request`\n        );\n      }\n      if (!manifest || !manifest.Response) {\n        throw Error(\"No manifest received!\");\n      }\n      cachedManifestData = undefined;\n      ga.event({\n        category: \"Data\",\n        action: \"Fetch remote manifest\",\n        nonInteraction: true\n      });\n      const freshManifestData = await getRemoteManifestData(manifest.Response);\n      cachedManifestData = freshManifestData;\n      return freshManifestData;\n    })();\n  }\n  return getManifestPromise;\n};\n\nexport const getBasicProfile = (\n  membershipType: number,\n  membershipId: string\n) => {\n  ga.event({\n    category: \"Character Data\",\n    action: \"Fetch minimal profile\",\n    nonInteraction: true\n  });\n  return getProfile(bungieAuthedFetch, {\n    components: [\n      200, // DestinyComponentType.Characters,\n      205 // DestinyComponentType.CharacterEquipment,\n    ],\n    destinyMembershipId: membershipId,\n    membershipType\n  });\n};\n\nexport const getFullProfile = (\n  membershipType: number,\n  membershipId: string\n) => {\n  ga.event({\n    category: \"Character Data\",\n    action: \"Fetch full profile\",\n    nonInteraction: true\n  });\n  return getProfile(bungieAuthedFetch, {\n    components: [\n      200, // DestinyComponentType.Characters,\n      201, // DestinyComponentType.CharacterInventories,\n      205, // DestinyComponentType.CharacterEquipment,\n      102, // DestinyComponentType.ProfileInventories,\n      300 // DestinyComponentType.ItemInstances,\n    ],\n    destinyMembershipId: membershipId,\n    membershipType\n  });\n};\n","import { getMembershipDataById, UserInfoCard } from \"bungie-api-ts/user\";\r\nimport { bungieAuthedFetch } from \"./bungie-api\";\r\nimport ga from \"./ga\";\r\n\r\nconst isDev = process.env.NODE_ENV === \"development\";\r\nexport const BUNGIE_API_KEY = isDev\r\n  ? \"f7f184669f044a89b560fc5f71ed5d60\"\r\n  : \"d94be1e34632448fafdaf77c7afbb501\";\r\nconst BUNGIE_OAUTH_AUTHORIZE_URL = \"https://www.bungie.net/en/OAuth/Authorize\";\r\nconst BUNGIE_OAUTH_CLIENT_ID = isDev ? \"26087\" : \"27213\";\r\nconst BUNGIE_OAUTH_TOKEN_URL =\r\n  \"https://www.bungie.net/platform/app/oauth/token/\";\r\n\r\nconst ACCESS_TOKEN_STORAGE_KEY = \"bungieAccessToken\";\r\nconst ACCESS_TOKEN_EXPIRY_STORAGE_KEY = \"bungieAccessTokenExpiryTime\";\r\nconst BUNGIE_MEMBERSHIP_ID_STORAGE_KEY = \"bungieMembershipId\";\r\nconst DESTINY_MEMBERSHIPS_STORAGE_KEY = \"destinyMemberships\";\r\nconst DESTINY_MEMBERSHIP_STORAGE_KEY = \"destinyMembership\";\r\n\r\nconst clearStorage = () => {\r\n  localStorage.removeItem(ACCESS_TOKEN_STORAGE_KEY);\r\n  localStorage.removeItem(ACCESS_TOKEN_EXPIRY_STORAGE_KEY);\r\n  localStorage.removeItem(BUNGIE_MEMBERSHIP_ID_STORAGE_KEY);\r\n  localStorage.removeItem(DESTINY_MEMBERSHIPS_STORAGE_KEY);\r\n  localStorage.removeItem(DESTINY_MEMBERSHIP_STORAGE_KEY);\r\n};\r\n\r\nconst getAuthUrl = () =>\r\n  `${BUNGIE_OAUTH_AUTHORIZE_URL}?response_type=code&client_id=${BUNGIE_OAUTH_CLIENT_ID}`;\r\n\r\nconst redirectToAuth = () => {\r\n  console.log(\"Redirect to auth\");\r\n  clearStorage();\r\n  ga.event({\r\n    category: \"Auth\",\r\n    action: \"Redirect to oauth\",\r\n    nonInteraction: true\r\n  });\r\n  window.location.replace(getAuthUrl());\r\n};\r\n\r\nconst handleTokenResponse = async (\r\n  tokenResponse: Response,\r\n  redirect: boolean = false\r\n) => {\r\n  console.log(\"handleTokenResponse\");\r\n  clearStorage();\r\n  if (tokenResponse.status === 200) {\r\n    const data = await tokenResponse.json();\r\n    const accessToken = data.access_token as string;\r\n    const tokenDuration = data.expires_in as number;\r\n    const expiryTime = Date.now() + tokenDuration * 1000;\r\n    const bungieMembershipId = data.membership_id as string;\r\n\r\n    localStorage.setItem(ACCESS_TOKEN_STORAGE_KEY, accessToken);\r\n    localStorage.setItem(\r\n      ACCESS_TOKEN_EXPIRY_STORAGE_KEY,\r\n      expiryTime.toString()\r\n    );\r\n    localStorage.setItem(BUNGIE_MEMBERSHIP_ID_STORAGE_KEY, bungieMembershipId);\r\n\r\n    // 254 = all memberships\r\n    const destinyMembershipsResponse = await getMembershipDataById(\r\n      bungieAuthedFetch,\r\n      { membershipId: bungieMembershipId, membershipType: 254 }\r\n    );\r\n\r\n    if (\r\n      !destinyMembershipsResponse ||\r\n      !destinyMembershipsResponse.Response ||\r\n      (destinyMembershipsResponse.ErrorStatus &&\r\n        destinyMembershipsResponse.ErrorStatus !== \"Success\")\r\n    ) {\r\n      ga.event({\r\n        category: \"Errors\",\r\n        action: `Destiny membership fetch error, status: ${destinyMembershipsResponse.ErrorStatus}`,\r\n        nonInteraction: true\r\n      });\r\n      return {\r\n        authSuccess: false,\r\n        error: `Status code ${destinyMembershipsResponse.ErrorStatus} from memberships endpoint`\r\n      };\r\n    }\r\n\r\n    const destinyMemberships =\r\n      destinyMembershipsResponse.Response.destinyMemberships;\r\n    localStorage.setItem(\r\n      DESTINY_MEMBERSHIPS_STORAGE_KEY,\r\n      JSON.stringify(destinyMemberships)\r\n    );\r\n\r\n    // If there is only one membership, select it automatically\r\n    if (destinyMemberships.length === 1) {\r\n      setSelectedDestinyMembership(destinyMemberships[0]);\r\n    }\r\n\r\n    return { accessToken, authSuccess: true };\r\n  } else {\r\n    if (tokenResponse.status !== 200) {\r\n      ga.event({\r\n        category: \"Auth\",\r\n        action: `Status code ${tokenResponse.status} from authentication request`,\r\n        nonInteraction: true\r\n      });\r\n      return {\r\n        authSuccess: false,\r\n        error: `Status code ${tokenResponse.status} from authentication request`\r\n      };\r\n    }\r\n    // return redirectToAuth()\r\n  }\r\n};\r\n\r\nconst fetchAuthToken = async (authCode: string) => {\r\n  console.log(\"fetchAuthToken\", authCode);\r\n  clearStorage();\r\n  ga.event({\r\n    category: \"Auth\",\r\n    action: \"Oauth token request\",\r\n    nonInteraction: true\r\n  });\r\n  const tokenResponse = await fetch(BUNGIE_OAUTH_TOKEN_URL, {\r\n    body: `grant_type=authorization_code&code=${authCode}&client_id=${BUNGIE_OAUTH_CLIENT_ID}`,\r\n    cache: \"no-cache\",\r\n    credentials: \"include\",\r\n    headers: {\r\n      \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n    },\r\n    method: \"POST\",\r\n    redirect: \"follow\",\r\n    referrer: \"no-referrer\"\r\n  });\r\n  return await handleTokenResponse(tokenResponse);\r\n};\r\n\r\nexport const getAccessToken = () => {\r\n  return localStorage.getItem(ACCESS_TOKEN_STORAGE_KEY);\r\n};\r\n\r\nexport const hasValidAuth = () => {\r\n  const accessToken = getAccessToken();\r\n  const accessTokenExpiryTime = parseInt(\r\n    localStorage.getItem(ACCESS_TOKEN_EXPIRY_STORAGE_KEY) || \"-1\",\r\n    10\r\n  );\r\n  const bungieMembershipId = localStorage.getItem(\r\n    BUNGIE_MEMBERSHIP_ID_STORAGE_KEY\r\n  );\r\n  if (\r\n    !accessToken ||\r\n    Date.now() >= accessTokenExpiryTime ||\r\n    !bungieMembershipId\r\n  ) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nexport const getDestinyMemberships = () => {\r\n  const destinyMembershipsString = localStorage.getItem(\r\n    DESTINY_MEMBERSHIPS_STORAGE_KEY\r\n  );\r\n  try {\r\n    if (destinyMembershipsString) {\r\n      return JSON.parse(destinyMembershipsString) as UserInfoCard[];\r\n    }\r\n  } catch (e) {\r\n    ga.event({\r\n      category: \"Data\",\r\n      action: \"Error loading destiny memberships from local storage\",\r\n      nonInteraction: true\r\n    });\r\n    console.error(`Error loading destiny memberships`, e.message);\r\n  }\r\n  return undefined;\r\n};\r\n\r\nexport const hasDestinyMemberships = () => {\r\n  return !!getDestinyMemberships();\r\n};\r\n\r\nexport const getSelectedDestinyMembership = () => {\r\n  const destinyMembershipString = localStorage.getItem(\r\n    DESTINY_MEMBERSHIP_STORAGE_KEY\r\n  );\r\n  try {\r\n    if (destinyMembershipString) {\r\n      return JSON.parse(destinyMembershipString) as UserInfoCard;\r\n    }\r\n  } catch (e) {\r\n    ga.event({\r\n      category: \"Data\",\r\n      action: \"Error loading destiny membership from local storage\",\r\n      nonInteraction: true\r\n    });\r\n    console.error(\"Error loading destiny membership\", e.message);\r\n  }\r\n  return undefined;\r\n};\r\n\r\nexport const hasSelectedDestinyMembership = () => {\r\n  return !!getSelectedDestinyMembership();\r\n};\r\n\r\nexport const setSelectedDestinyMembership = (membership: UserInfoCard) => {\r\n  localStorage.setItem(\r\n    DESTINY_MEMBERSHIP_STORAGE_KEY,\r\n    JSON.stringify(membership)\r\n  );\r\n};\r\n\r\nexport const auth = async () => {\r\n  const queryParams = new URLSearchParams(window.location.search);\r\n  const authCode = queryParams.get(\"code\");\r\n\r\n  if (authCode && !hasValidAuth()) {\r\n    console.log(\"Fetching access token with auth code\");\r\n    const authResponse = await fetchAuthToken(authCode);\r\n    if (authResponse && authResponse.authSuccess === false) {\r\n      console.error(authResponse.error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  if (authCode) {\r\n    window.location.replace(\r\n      `${window.location.origin}${window.location.pathname}`\r\n    );\r\n  }\r\n\r\n  if (hasValidAuth() && hasDestinyMemberships()) {\r\n    return true;\r\n  }\r\n\r\n  ga.event({\r\n    category: \"System\",\r\n    action: \"Redirect for fresh authentication\",\r\n    nonInteraction: true\r\n  });\r\n  console.log(\r\n    \"Redirecting to fresh authentication for missing or expired access token, or missing destiny memberships\"\r\n  );\r\n  clearStorage();\r\n  redirectToAuth();\r\n};\r\n","export const ITEM_SLOT_KINETIC = \"kinetic\";\r\nexport const ITEM_SLOT_ENERGY = \"energy\";\r\nexport const ITEM_SLOT_POWER = \"power\";\r\nexport const ITEM_SLOT_HEAD = \"head\";\r\nexport const ITEM_SLOT_GLOVES = \"gloves\";\r\nexport const ITEM_SLOT_CHEST = \"chest\";\r\nexport const ITEM_SLOT_LEGS = \"legs\";\r\nexport const ITEM_SLOT_CLASS_ITEM = \"classItem\";\r\n\r\nexport const ITEM_SLOT_BUCKETS = {\r\n  [ITEM_SLOT_KINETIC]: 1498876634,\r\n  [ITEM_SLOT_ENERGY]: 2465295065,\r\n  [ITEM_SLOT_POWER]: 953998645,\r\n  [ITEM_SLOT_HEAD]: 3448274439,\r\n  [ITEM_SLOT_GLOVES]: 3551918588,\r\n  [ITEM_SLOT_CHEST]: 14239492,\r\n  [ITEM_SLOT_LEGS]: 20886954,\r\n  [ITEM_SLOT_CLASS_ITEM]: 1585787867\r\n};\r\n\r\nexport const ITEM_BUCKET_SLOTS = Object.entries(ITEM_SLOT_BUCKETS).reduce(\r\n  (buckets, [slot, bucket]) => ({ ...buckets, [bucket]: slot }),\r\n  {} as { [bucket: number]: string }\r\n);\r\n\r\nexport const ITEM_SLOT_GROUP_WEAPONS = [\r\n  ITEM_SLOT_KINETIC,\r\n  ITEM_SLOT_ENERGY,\r\n  ITEM_SLOT_POWER\r\n];\r\nexport const ITEM_SLOT_GROUP_ARMOR = [\r\n  ITEM_SLOT_HEAD,\r\n  ITEM_SLOT_GLOVES,\r\n  ITEM_SLOT_CHEST,\r\n  ITEM_SLOT_LEGS,\r\n  ITEM_SLOT_CLASS_ITEM\r\n];\r\n\r\nexport const ORDERED_ITEM_SLOTS = [\r\n  ...ITEM_SLOT_GROUP_WEAPONS,\r\n  ...ITEM_SLOT_GROUP_ARMOR\r\n];\r\n\r\nexport const ITEM_TIER_TYPE_EXOTIC = 6;\r\n\r\nexport const ITEM_TYPE_ARMOR = 2;\r\nexport const ITEM_TYPE_WEAPON = 3;\r\n\r\nexport const CLASS_TYPE_ALL = 3;\r\n\r\nexport const CLASS_TITAN = \"titan\";\r\nexport const CLASS_HUNTER = \"hunter\";\r\nexport const CLASS_WARLOCK = \"warlock\";\r\n\r\nexport const CLASS_NAMES = [CLASS_TITAN, CLASS_HUNTER, CLASS_WARLOCK];\r\n\r\nexport const ITEM_TYPE_ARTIFACT = 28;\r\nexport const UNDYING_ARTIFACT_ITEM_HASH = 1387688628;\r\n","import classnames from \"classnames\";\nimport React from \"react\";\n\nimport STYLES from \"./PowerBar.module.scss\";\n\ninterface BarProps {\n  min: number;\n  max: number;\n  value: number;\n  avgValue: number;\n  label: string;\n  icon?: string;\n}\n\nexport const PowerBar = ({\n  min,\n  max,\n  value,\n  avgValue,\n  label,\n  icon\n}: BarProps) => {\n  const range = max - min;\n  const perc = Math.floor(((value - min) / range) * 1000) / 10;\n  const avgPerc = Math.floor(((avgValue - min) / range) * 1000) / 10;\n  // const plusTwoPerc = Math.floor(((avgValue + 2 - min) / range) * 1000) / 10\n  // const plusFivePerc = Math.floor(((avgValue + 5 - min) / range) * 1000) / 10\n  const fullLabelText = `${value} ${label}`;\n  const fullLabel = (\n    <span className={STYLES.label}>\n      <span\n        className={classnames(STYLES.power, {\n          [STYLES.max]: value >= max,\n          [STYLES.belowAverage]: value < avgValue\n        })}\n      >\n        {value}\n      </span>\n      <span className={STYLES.slotName}>{label}</span>\n    </span>\n  );\n  return (\n    <div className={STYLES.barWrapper}>\n      <div className={STYLES.iconWrapper}>\n        {icon && (\n          <img\n            className={STYLES.icon}\n            src={`https://www.bungie.net${icon}`}\n            alt={fullLabelText}\n          />\n        )}\n      </div>\n      <div className={STYLES.barContainer}>\n        <div className={STYLES.filledBar} style={{ width: `${perc}%` }}>\n          {fullLabel}\n        </div>\n        <div className={STYLES.barLine} style={{ left: `${avgPerc}%` }} />\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport { ORDERED_ITEM_SLOTS } from \"../../constants\";\nimport { CharacterData, PowerBySlot } from \"../../types\";\nimport { PowerBar } from \"./PowerBar\";\nimport STYLES from \"./PowerBars.module.scss\";\n\nconst classItemNames: { [key: string]: string } = {\n  hunter: \"Hunter Cloak\",\n  titan: \"Titan Mark\",\n  warlock: \"Warlock Bond\"\n};\nconst slotFullNames = (className: string): { [key: string]: string } => ({\n  chest: \"Chest Armor\",\n  classItem: classItemNames[className],\n  energy: \"Energy Weapon\",\n  gloves: \"Gauntlets\",\n  head: \"Helmet\",\n  kinetic: \"Kinetic Weapon\",\n  legs: \"Leg Armor\",\n  power: \"Power Weapon\"\n});\n\ntype PowerBarsProps = CharacterData;\n\nexport const PowerBars = (data: PowerBarsProps) => {\n  // Get power by slot, using overall power if slot data does not exist\n  const powerBySlot = ORDERED_ITEM_SLOTS.reduce(\n    (slots, slotName) => ({\n      ...slots,\n      [slotName]: data.topItemBySlot\n        ? data.topItemBySlot[slotName].instanceData.primaryStat.value\n        : data.overallPower\n    }),\n    {} as PowerBySlot\n  );\n\n  const roundedPower = Math.floor(data.overallPower);\n  // Round to 50s\n  const minItemPower = Math.min(...Object.values(powerBySlot));\n  const minPowerToDisplay = Math.max(\n    Math.floor(minItemPower / 50) * 50 - 50,\n    0\n  );\n  const maxItemPower = Math.max(...Object.values(powerBySlot));\n  const maxItemPowerGrouping = maxItemPower <= 950 ? 50 : 10;\n  const maxPowerToDisplay =\n    Math.ceil(maxItemPower / maxItemPowerGrouping) * maxItemPowerGrouping;\n\n  const range = maxPowerToDisplay - minPowerToDisplay;\n  const perc =\n    Math.floor(((roundedPower - minPowerToDisplay) / range) * 1000) / 10;\n\n  return (\n    <div className={STYLES.powerBars}>\n      <div className={STYLES.powerRange}>\n        <div className={STYLES.minPower}>{minPowerToDisplay}</div>\n        <div className={STYLES.rangeLine} />\n        <div className={STYLES.maxPower}>{maxPowerToDisplay}</div>\n      </div>\n      <div className={STYLES.bars}>\n        {Object.entries(powerBySlot).map(([slotName, power]) => {\n          const bestItem = data.topItemBySlot && data.topItemBySlot[slotName];\n          return (\n            <PowerBar\n              key={`${data.id}_${slotName}`}\n              min={minPowerToDisplay}\n              max={maxPowerToDisplay}\n              value={power}\n              avgValue={roundedPower}\n              label={slotFullNames(data.className)[slotName] || slotName}\n              icon={\n                bestItem &&\n                bestItem.itemDefinition &&\n                bestItem.itemDefinition.displayProperties.icon\n              }\n            />\n          );\n        })}\n      </div>\n      <div className={STYLES.powerLabel}>\n        <div className={STYLES.indicator} style={{ left: `${perc}%` }}>\n          {roundedPower}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport STYLES from \"./Power.module.scss\";\n\ninterface PowerProps {\n  children: number | string;\n}\nexport const Power = ({ children }: PowerProps) => (\n  <span className={STYLES.inlinePowerNumber}>{children}</span>\n);\n","import React from \"react\";\n\nimport STYLES from \"./PowerDetails.module.scss\";\n\nimport { Power } from \"./Power\";\n\nconst withSign = (value: number) => {\n  if (value >= 0) {\n    return `+${value}`;\n  }\n  return `${value}`;\n};\n\ninterface PowerDetailsProps {\n  overallPower: number;\n  artifactData?: {\n    name: string;\n    iconPath: string;\n    bonusPower: number;\n  };\n}\n\nexport const PowerDetails = (data: PowerDetailsProps) => {\n  const roundedPower = Math.floor(data.overallPower);\n\n  /*\n  const summableArtifactBonusPower = data.artifactData\n    ? data.artifactData.bonusPower\n    : 0;\n    */\n\n  if (!data.artifactData || data.artifactData.bonusPower === 0) {\n    return null;\n  }\n\n  return (\n    <div className={STYLES.details}>\n      <div className={STYLES.detailsRow}>\n        <div className={STYLES.detailsLabel}>\n          Maximum equippable gear power:\n        </div>\n        <div className={STYLES.defailsValue}>\n          <Power>{roundedPower}</Power>\n        </div>\n      </div>\n      {data.artifactData ? (\n        <>\n          <div className={STYLES.detailsRow}>\n            <div className={STYLES.detailsLabel}>\n              <img\n                className={STYLES.detailsInlineIcon}\n                src={`https://www.bungie.net${data.artifactData.iconPath}`}\n                alt=\"\"\n              />\n              {data.artifactData.name} bonus power:\n            </div>\n            <div className={STYLES.detailsValue}>\n              <Power>{withSign(data.artifactData.bonusPower)}</Power>\n            </div>\n          </div>\n\n          {/*<div className={STYLES.detailsRow}>\n            <div className={STYLES.detailsLabel}>Total combined power:</div>\n            <div className={STYLES.detailsValue}>\n              <Power>{roundedPower + summableArtifactBonusPower}</Power>\n            </div>\n      </div>*/}\n        </>\n      ) : null}\n    </div>\n  );\n};\n","import classnames from \"classnames\";\nimport React from \"react\";\n\nimport { Power } from \"./Power\";\n\nimport STYLES from \"./PowerHints.module.scss\";\n\ninterface PowerHintsProps {\n  overallPower: number;\n  potentialOverallPower?: number;\n  powerRequiredToReachPotential?: number;\n}\n\nexport const PowerHints = (data: PowerHintsProps) => (\n  <div className={STYLES.hints}>\n    {data.potentialOverallPower &&\n    data.potentialOverallPower > data.overallPower ? (\n      <div className={classnames(STYLES.hint, STYLES.worldDropHint)}>\n        <span>\n          World drops can increase your overall gear power to{\" \"}\n          <Power>{data.potentialOverallPower}</Power>\n        </span>\n        <div className={STYLES.hintExtra}>\n          <div className={STYLES.hintExtraInner}>\n            <p>\n              World drops (from strikes, public events, vendors, non-powerful\n              legendary rewards) can drop with a power level from{\" \"}\n              <Power>{data.overallPower - 3}</Power> to{\" \"}\n              <Power>{data.overallPower}</Power> for this character.\n            </p>\n            <p>\n              Replacing items below your current overall power can increase your\n              power to a higher average.\n            </p>\n            {data.powerRequiredToReachPotential ? (\n              <p>\n                You need an extra{\" \"}\n                <Power>{data.powerRequiredToReachPotential}</Power> total power\n                on your items to reach an overall power of{\" \"}\n                <Power>{data.potentialOverallPower}</Power>.\n              </p>\n            ) : null}\n          </div>\n        </div>\n      </div>\n    ) : null}\n\n    {data.potentialOverallPower === data.overallPower &&\n    data.overallPower >= 900 &&\n    data.overallPower < 950 ? (\n      <div className={classnames(STYLES.hint, STYLES.powerfulHint)}>\n        <span>\n          Powerful rewards can increase your overall gear power up to the\n          powerful cap of <Power>{950}</Power>\n        </span>\n        <div className={STYLES.hintExtra}>\n          <div className={STYLES.hintExtraInner}>\n            <p>\n              Powerful and pinnacle reward sources (Weekly challenges, Year 3\n              raids) will give you items above your overall gear power, with\n              powerful rewards capped at <Power>{950}</Power>.\n            </p>\n            <p>\n              Powerful rewards (Tier 1) will give items up to 3 levels above\n              your overall gear power\n            </p>\n            <p>\n              Powerful rewards (Tier 2) will give items up to 5 levels above\n              your overall gear power\n            </p>\n            <p>\n              Pinnacle rewards will give items up to 8 levels above your overall\n              gear power\n            </p>\n            <p>\n              After getting a powerful reward, check back here to see if it's\n              beneficial to catch up the rest of your slots with world drops\n              before getting another!\n            </p>\n          </div>\n        </div>\n      </div>\n    ) : null}\n\n    {data.potentialOverallPower === data.overallPower &&\n    data.overallPower >= 950 &&\n    data.overallPower < 960 ? (\n      <div className={classnames(STYLES.hint, STYLES.pinnacleHint)}>\n        <span>\n          Pinnacle rewards can increase your overall gear power up to the\n          pinnacle cap of 960\n        </span>\n        <div className={STYLES.hintExtra}>\n          <div className={STYLES.hintExtraInner}>\n            <p>\n              Pinnacle reward sources (Weekly challenges, Year 3 raids) will\n              give you items above your overall gear power, capped at 960.\n            </p>\n          </div>\n        </div>\n      </div>\n    ) : null}\n  </div>\n);\n","import classnames from \"classnames\";\r\nimport React from \"react\";\r\n\r\nimport { CharacterData } from \"../types\";\r\nimport STYLES from \"./CharacterDisplay.module.scss\";\r\nimport { PowerBars } from \"./characterDisplay/PowerBars\";\r\nimport { PowerDetails } from \"./characterDisplay/PowerDetails\";\r\nimport { PowerHints } from \"./characterDisplay/PowerHints\";\r\n\r\ninterface CharacterDisplayProps {\r\n  data: CharacterData;\r\n}\r\n\r\nconst titleCase = (text: string) =>\r\n  text.substr(0, 1).toUpperCase() + text.substr(1);\r\n\r\nconst CharacterDisplay = ({ data }: CharacterDisplayProps) => {\r\n  const rgbString = ({\r\n    red,\r\n    green,\r\n    blue\r\n  }: {\r\n    red: number;\r\n    green: number;\r\n    blue: number;\r\n  }) => `rgb(${red},${green},${blue})`;\r\n\r\n  const roundedPower = Math.floor(data.overallPower);\r\n\r\n  const summableArtifactBonusPower = data.artifactData\r\n    ? data.artifactData.bonusPower\r\n    : 0;\r\n\r\n  return (\r\n    <div\r\n      className={classnames(\r\n        STYLES.characterDisplay,\r\n        STYLES[`class_${data.className}`]\r\n      )}\r\n      style={{ backgroundColor: rgbString(data.character.emblemColor) }}\r\n    >\r\n      <div className={STYLES.header}>\r\n        <img\r\n          className={STYLES.emblemBackground}\r\n          src={`https://www.bungie.net${data.character.emblemBackgroundPath}`}\r\n          alt=\"\"\r\n        />\r\n        <div className={STYLES.name}>{titleCase(data.className)}</div>\r\n        <div className={STYLES.power}>\r\n          {roundedPower + summableArtifactBonusPower}\r\n        </div>\r\n      </div>\r\n\r\n      <div className={STYLES.content}>\r\n        <PowerDetails {...data} />\r\n\r\n        <PowerBars {...data} />\r\n\r\n        <PowerHints {...data} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterDisplay;\r\n","import React from \"react\";\n\nimport STYLES from \"./LoadingSpinner.module.scss\";\n\ninterface LoadingSpinnerProps {\n  children: string | JSX.Element;\n}\n\nconst LoadingSpinner = ({ children }: LoadingSpinnerProps) => {\n  return (\n    <div className={STYLES.loadingSpinnerContainer}>\n      <div className={STYLES.anchor}>\n        <div className={STYLES.spinnerLarge} />\n        <div className={STYLES.spinnerSmall} />\n        <div className={STYLES.status}>{children}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import { UserInfoCard } from \"bungie-api-ts/user\";\nimport classnames from \"classnames\";\nimport React from \"react\";\n\nimport { getDestinyMemberships } from \"../services/bungie-auth\";\nimport STYLES from \"./MembershipSelect.module.scss\";\n\ninterface MembershipSelectProps {\n  onMembershipSelect: (membership: UserInfoCard) => any;\n}\n\nconst MembershipSelect = ({ onMembershipSelect }: MembershipSelectProps) => {\n  const destinyMemberships = getDestinyMemberships();\n\n  if (!destinyMemberships) {\n    return null;\n  }\n\n  if (destinyMemberships.length === 0) {\n    return <div>No destiny memberships!</div>;\n  }\n\n  const PLATFORMS: { [key: number]: string } = {\n    1: \"xbox\",\n    2: \"psn\",\n    3: \"steam\",\n    4: \"blizzard\"\n  };\n\n  return (\n    <div className={STYLES.membershipSelect}>\n      {destinyMemberships.map(m => {\n        return (\n          <div\n            key={m.membershipId}\n            className={classnames(\n              STYLES.membership,\n              STYLES[`platform_${PLATFORMS[m.membershipType]}`]\n            )}\n            onClick={() => onMembershipSelect(m)}\n          >\n            {m.displayName}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default MembershipSelect;\n","import {\r\n  DestinyCharacterComponent,\r\n  DestinyItemComponent\r\n} from \"bungie-api-ts/destiny2\";\r\n\r\nimport forIn from \"lodash/forIn\";\r\nimport groupBy from \"lodash/groupBy\";\r\nimport mapValues from \"lodash/mapValues\";\r\nimport maxBy from \"lodash/maxBy\";\r\nimport sumBy from \"lodash/sumBy\";\r\n\r\nimport {\r\n  CLASS_NAMES,\r\n  CLASS_TYPE_ALL,\r\n  ITEM_BUCKET_SLOTS,\r\n  ITEM_SLOT_BUCKETS,\r\n  ITEM_TYPE_ARMOR,\r\n  ITEM_TYPE_WEAPON,\r\n  UNDYING_ARTIFACT_ITEM_HASH\r\n} from \"../constants\";\r\nimport {\r\n  CharacterData,\r\n  ItemBySlot,\r\n  JoinedItemDefinition,\r\n  PowerBySlot,\r\n  SeasonalArtifactData\r\n} from \"../types\";\r\nimport { getBasicProfile, getFullProfile, getManifest } from \"./bungie-api\";\r\nimport { auth, getSelectedDestinyMembership } from \"./bungie-auth\";\r\n\r\nconst getPowerBySlot = (itemsBySlot: ItemBySlot): PowerBySlot =>\r\n  mapValues(itemsBySlot, item => item.instanceData.primaryStat.value);\r\n\r\nconst getAveragePower = (powerBySlot: PowerBySlot) =>\r\n  Object.values(powerBySlot).reduce((sum, power) => sum + power, 0) /\r\n  Object.keys(ITEM_SLOT_BUCKETS).length;\r\nconst getOverallPower = (powerBySlot: PowerBySlot) =>\r\n  Math.floor(getAveragePower(powerBySlot));\r\n\r\nconst mergeItems = <\r\n  T extends { [key: string]: { items: DestinyItemComponent[] } }\r\n>(\r\n  characterItemMap: T\r\n) => {\r\n  return Object.values(characterItemMap).reduce(\r\n    (allItems, characterItems) => allItems.concat(characterItems.items),\r\n    [] as DestinyItemComponent[]\r\n  );\r\n};\r\n\r\nconst isItemEquippableByCharacter = (\r\n  item: JoinedItemDefinition,\r\n  character: DestinyCharacterComponent\r\n) => {\r\n  if (item.instanceData.canEquip) {\r\n    return true;\r\n  } // If the game says we can equip it, let's believe it\r\n  if (item.instanceData.cannotEquipReason === 16) {\r\n    return true;\r\n  } // Only reason is that it's in your vault\r\n  if (item.instanceData.equipRequiredLevel > character.baseCharacterLevel) {\r\n    return false;\r\n  }\r\n  if (\r\n    item.itemDefinition.classType !== CLASS_TYPE_ALL &&\r\n    item.itemDefinition.classType !== character.classType\r\n  ) {\r\n    return false;\r\n  }\r\n  // Let's ignore the rest for now\r\n  return true;\r\n};\r\n\r\nconst getBasicCharacterData = async (\r\n  pendingBasicProfile: ReturnType<typeof getBasicProfile>\r\n) => {\r\n  const profile = await pendingBasicProfile;\r\n  if (!profile || !profile.Response || !profile.Response.characters) {\r\n    return;\r\n  }\r\n  const characters = profile.Response.characters.data;\r\n\r\n  if (characters) {\r\n    const getDataForCharacterId = (id: string): CharacterData => {\r\n      const character = characters[id];\r\n      const className = CLASS_NAMES[character.classType];\r\n      return {\r\n        character,\r\n        className,\r\n        id,\r\n        overallPower: character.light\r\n      };\r\n    };\r\n\r\n    const characterIds = Object.keys(characters);\r\n    const characterData = characterIds.map(id => getDataForCharacterId(id));\r\n    return characterData;\r\n  }\r\n};\r\n\r\nexport const getCharacterData = async (\r\n  setCharacterData: (state: CharacterData[]) => any,\r\n  setIsFetchingCharacterData: (state: boolean) => any,\r\n  returnBasicCharacterData: boolean = false\r\n) => {\r\n  try {\r\n    const isAuthed = await auth();\r\n    if (!isAuthed) {\r\n      return;\r\n    }\r\n\r\n    const pendingManifest = getManifest();\r\n\r\n    setIsFetchingCharacterData(true);\r\n\r\n    const destinyMembership = getSelectedDestinyMembership();\r\n    if (!destinyMembership) {\r\n      return;\r\n    }\r\n\r\n    let pendingBasicProfile: ReturnType<typeof getBasicProfile> | undefined;\r\n\r\n    // Flag lets this be disabled to prevent setting after full profile is returned\r\n    let shouldSetBasicCharacterData = true;\r\n    // Produce basic data if flag is set\r\n    if (returnBasicCharacterData) {\r\n      pendingBasicProfile = getBasicProfile(\r\n        destinyMembership.membershipType,\r\n        destinyMembership.membershipId\r\n      );\r\n      pendingBasicProfile.catch(() => {\r\n        /* Do nothing */\r\n      });\r\n      const pendingBasicCharacterData = getBasicCharacterData(\r\n        pendingBasicProfile\r\n      ).catch(e => {\r\n        /* Do nothing */\r\n      });\r\n      (async () => {\r\n        const basicCharacterData = await pendingBasicCharacterData;\r\n        if (basicCharacterData && shouldSetBasicCharacterData) {\r\n          setCharacterData(basicCharacterData);\r\n        }\r\n      })();\r\n    }\r\n\r\n    const fullProfile = await getFullProfile(\r\n      destinyMembership.membershipType,\r\n      destinyMembership.membershipId\r\n    );\r\n    setIsFetchingCharacterData(false);\r\n\r\n    if (\r\n      !fullProfile ||\r\n      !fullProfile.Response ||\r\n      !fullProfile.Response.characters ||\r\n      !fullProfile.Response.characters.data ||\r\n      !fullProfile.Response.characterEquipment ||\r\n      !fullProfile.Response.characterEquipment.data ||\r\n      !fullProfile.Response.characterInventories ||\r\n      !fullProfile.Response.characterInventories.data ||\r\n      !fullProfile.Response.profileInventory ||\r\n      !fullProfile.Response.profileInventory.data ||\r\n      !fullProfile.Response.itemComponents ||\r\n      !fullProfile.Response.itemComponents.instances ||\r\n      !fullProfile.Response.itemComponents.instances.data\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const characters = fullProfile.Response.characters.data;\r\n    const characterEquipments = fullProfile.Response.characterEquipment.data;\r\n    const characterInventories = fullProfile.Response.characterInventories.data;\r\n    const profileInventories = fullProfile.Response.profileInventory.data;\r\n    const itemInstances = fullProfile.Response.itemComponents.instances.data;\r\n\r\n    const manifest = await pendingManifest;\r\n\r\n    if (!manifest) {\r\n      return;\r\n    }\r\n\r\n    const allCharacterItems = mergeItems(characterInventories)\r\n      .concat(mergeItems(characterEquipments))\r\n      .concat(profileInventories.items);\r\n    const allCharacterWeapons = allCharacterItems.filter(i => {\r\n      const itemDefinition =\r\n        i.itemHash && manifest.DestinyInventoryItemDefinition[i.itemHash];\r\n      return itemDefinition && itemDefinition.itemType === ITEM_TYPE_WEAPON;\r\n    });\r\n\r\n    const getDataForCharacterId = (id: string): CharacterData => {\r\n      const character = characters[id];\r\n      const className = CLASS_NAMES[character.classType];\r\n\r\n      const mapAndFilterItems = (\r\n        items: DestinyItemComponent[]\r\n      ): JoinedItemDefinition[] =>\r\n        items\r\n          .map(item => {\r\n            const instanceData = item.itemInstanceId\r\n              ? itemInstances[item.itemInstanceId]\r\n              : undefined;\r\n            const itemDefinition =\r\n              manifest.DestinyInventoryItemDefinition[item.itemHash];\r\n            return {\r\n              ...item,\r\n              instanceData,\r\n              itemDefinition\r\n            };\r\n          })\r\n          .filter(\r\n            i =>\r\n              i.instanceData &&\r\n              i.itemDefinition &&\r\n              [ITEM_TYPE_ARMOR, ITEM_TYPE_WEAPON].includes(\r\n                i.itemDefinition.itemType\r\n              )\r\n          )\r\n          .map(i => ({\r\n            ...i,\r\n            instanceData: i.instanceData!,\r\n            itemDefinition: i.itemDefinition!\r\n          }))\r\n          .map(i => ({\r\n            ...i,\r\n            slotName:\r\n              ITEM_BUCKET_SLOTS[i.itemDefinition.inventory.bucketTypeHash]\r\n          }))\r\n          .filter(i => isItemEquippableByCharacter(i, character));\r\n\r\n      const characterItems = mapAndFilterItems(\r\n        characterInventories[id].items\r\n          .concat(characterEquipments[id].items)\r\n          .concat(allCharacterWeapons)\r\n      );\r\n      const relevantProfileItems = mapAndFilterItems(\r\n        profileInventories.items\r\n      ).filter(\r\n        i =>\r\n          i.itemDefinition.classType === CLASS_TYPE_ALL ||\r\n          i.itemDefinition.classType === character.classType\r\n      );\r\n\r\n      const allItems = characterItems.concat(relevantProfileItems);\r\n\r\n      const getItemScore = (item: JoinedItemDefinition) => {\r\n        if (!item || !item.instanceData || !item.instanceData.primaryStat) {\r\n          return 0;\r\n        }\r\n        let score = item.instanceData.primaryStat.value;\r\n        if (item.instanceData.isEquipped) {\r\n          score += 0.1;\r\n        }\r\n        if (item.location === 1) {\r\n          score += 0.05;\r\n        }\r\n        return score;\r\n      };\r\n\r\n      const getEquipLabel = (item: JoinedItemDefinition) =>\r\n        item.itemDefinition.equippingBlock.uniqueLabel;\r\n\r\n      // Group by slot\r\n      const itemsBySlot = groupBy(allItems, i => i.slotName);\r\n      // Get max power items per slot\r\n      let topItemBySlot = mapValues(\r\n        itemsBySlot,\r\n        items => maxBy(items, getItemScore)!\r\n      );\r\n      // Get overlaps by equip label\r\n      const uniqueEquippedGroups = groupBy(\r\n        Object.values(topItemBySlot).filter(getEquipLabel),\r\n        getEquipLabel\r\n      );\r\n      // For overlaps with more than one item, generate valid options where all-but-one item is swapped for the next best non-exotic\r\n      forIn(uniqueEquippedGroups, uniqueEquippedGroup => {\r\n        if (uniqueEquippedGroup.length <= 1) {\r\n          return;\r\n        }\r\n\r\n        const validItemCombinations: ItemBySlot[] = [];\r\n\r\n        uniqueEquippedGroup.forEach(item => {\r\n          const otherItems = uniqueEquippedGroup.filter(\r\n            otherItem => otherItem !== item\r\n          );\r\n          let isCombinationValid = true;\r\n          const combination = { ...topItemBySlot };\r\n          otherItems.forEach(otherItem => {\r\n            // Find non-exotics for this slot\r\n            const nonExotics = itemsBySlot[otherItem.slotName].filter(\r\n              i => !getEquipLabel(i)\r\n            );\r\n            if (nonExotics.length > 0) {\r\n              // Select max power from non-exotics\r\n              combination[otherItem.slotName] = maxBy(\r\n                nonExotics,\r\n                getItemScore\r\n              )!;\r\n            } else {\r\n              // No non-exotic options for this slot, so whole combination is invalidaa\r\n              isCombinationValid = false;\r\n            }\r\n          });\r\n          if (isCombinationValid) {\r\n            validItemCombinations.push(combination);\r\n          }\r\n        });\r\n\r\n        // Select highest total scoring valid combination, if alternative item combinations have been generated\r\n        if (validItemCombinations.length > 0) {\r\n          const bestCombination = maxBy(validItemCombinations, combination =>\r\n            sumBy(Object.values(combination), getItemScore)\r\n          )!;\r\n          topItemBySlot = bestCombination;\r\n        }\r\n      });\r\n\r\n      const powerBySlot = getPowerBySlot(topItemBySlot);\r\n      const overallPower = getOverallPower(powerBySlot);\r\n\r\n      const artifactItemComponent = Object.values(characterEquipments)\r\n        .flatMap(i => i.items)\r\n        .find(i => i.itemHash === UNDYING_ARTIFACT_ITEM_HASH);\r\n\r\n      let artifactData: SeasonalArtifactData | undefined;\r\n      if (artifactItemComponent && artifactItemComponent.itemInstanceId) {\r\n        const artifactDefinition = manifest.DestinyInventoryItemDefinition[\r\n          artifactItemComponent.itemHash\r\n        ]!;\r\n        const artifactInstance = itemInstances[\r\n          artifactItemComponent.itemInstanceId\r\n        ]!;\r\n        artifactData = {\r\n          bonusPower: artifactInstance.primaryStat.value,\r\n          iconPath: artifactDefinition.displayProperties.icon,\r\n          name: artifactDefinition.displayProperties.name\r\n        };\r\n      }\r\n\r\n      const potentialPowerBySlot = { ...powerBySlot };\r\n      while (\r\n        Object.values(potentialPowerBySlot).some(\r\n          power => power < getOverallPower(potentialPowerBySlot) || power < 900\r\n        )\r\n      ) {\r\n        const tempPotentialOverallPower = getOverallPower(potentialPowerBySlot);\r\n        Object.keys(potentialPowerBySlot).forEach(\r\n          slot =>\r\n            (potentialPowerBySlot[slot] = Math.max(\r\n              900,\r\n              Math.max(tempPotentialOverallPower, potentialPowerBySlot[slot])\r\n            ))\r\n        );\r\n      }\r\n      const potentialOverallPower = getOverallPower(potentialPowerBySlot);\r\n\r\n      const averagePower = getAveragePower(powerBySlot);\r\n      const powerRequiredToReachPotential =\r\n        (potentialOverallPower - averagePower) * 8;\r\n\r\n      const resultData: CharacterData = {\r\n        artifactData,\r\n        character,\r\n        className,\r\n        id,\r\n        overallPower,\r\n        potentialOverallPower,\r\n        potentialPowerBySlot,\r\n        topItemBySlot,\r\n        powerRequiredToReachPotential\r\n      };\r\n\r\n      return resultData;\r\n    };\r\n\r\n    const characterIds = Object.keys(characters);\r\n    const characterData = characterIds.map(id => getDataForCharacterId(id));\r\n    shouldSetBasicCharacterData = false;\r\n    setCharacterData(characterData);\r\n  } catch (e) {\r\n    console.error(`Error fetching manifest and character data`, e);\r\n    setIsFetchingCharacterData(false);\r\n    return;\r\n  }\r\n};\r\n","import { UserInfoCard } from \"bungie-api-ts/user\";\nimport React, { useEffect, useState } from \"react\";\nimport ga from \"./services/ga\";\n\nimport {\n  auth,\n  hasSelectedDestinyMembership,\n  hasValidAuth,\n  setSelectedDestinyMembership\n} from \"./services/bungie-auth\";\nimport { CharacterData } from \"./types\";\n\nimport CharacterDisplay from \"./components/CharacterDisplay\";\nimport LoadingSpinner from \"./components/LoadingSpinner\";\nimport MembershipSelect from \"./components/MembershipSelect\";\nimport { getManifest } from \"./services/bungie-api\";\nimport { getCharacterData } from \"./services/utils\";\n\nimport \"normalize.css\";\nimport STYLES from \"./App.module.scss\";\nimport FetchSpinner from \"./components/FetchSpinner\";\n\nconst CHARACTER_DATA_REFRESH_TIMER = 15000;\n\nlet characterDataRefreshTimer: number | undefined;\n\nconst AUTO_PAGE_REFRESH_DELAY = 5000;\n\nconst refreshPage = () => {\n  window.location.pathname = \"/\";\n};\n\nconst App = () => {\n  const [isAuthed, setIsAuthed] = useState<boolean>(hasValidAuth());\n  const [hasAuthError, setAuthError] = useState<boolean>(false);\n  const [hasMembership, setHasMembership] = useState<boolean>(\n    hasSelectedDestinyMembership()\n  );\n  const [hasManifestData, setHasManifestData] = useState<boolean>(false);\n  const [hasManifestError, setManifestError] = useState<boolean>(false);\n  const [isFetchingCharacterData, setIsFetchingCharacterData] = useState<\n    boolean\n  >(false);\n  const [characterData, setCharacterData] = useState<\n    CharacterData[] | undefined\n  >(undefined);\n\n  useEffect(() => {\n    const doAuth = async () => {\n      const authResult = await auth();\n      if (authResult) {\n        setIsAuthed(true);\n      } else {\n        setAuthError(true);\n        // Refresh automatically in 30s\n        setTimeout(refreshPage, AUTO_PAGE_REFRESH_DELAY);\n      }\n    };\n    if (!isAuthed) {\n      doAuth();\n    }\n  });\n\n  useEffect(() => {\n    (async () => {\n      try {\n        await getManifest();\n        setHasManifestData(true);\n      } catch (e) {\n        console.error(e.message);\n        setManifestError(true);\n      }\n    })();\n  });\n\n  useEffect(() => {\n    const doGetCharacterData = (returnBasicCharacterData: boolean = false) => {\n      if (!isFetchingCharacterData) {\n        getCharacterData(\n          setCharacterData,\n          setIsFetchingCharacterData,\n          returnBasicCharacterData\n        );\n      }\n    };\n    if (isAuthed && hasMembership && !isFetchingCharacterData) {\n      if (!characterDataRefreshTimer) {\n        characterDataRefreshTimer = setInterval(\n          doGetCharacterData,\n          CHARACTER_DATA_REFRESH_TIMER\n        );\n        doGetCharacterData(true);\n        (window as any).refreshCharacterData = () => doGetCharacterData();\n      }\n    }\n  }, [isAuthed, hasMembership, hasManifestData, isFetchingCharacterData]);\n\n  const onSelectMembership = (membership: UserInfoCard) => {\n    ga.event({\n      category: \"Platform\",\n      action: \"Select platform\",\n      label: `Membership type: ${membership.membershipType}`\n    });\n    setSelectedDestinyMembership(membership);\n    setHasMembership(true);\n  };\n\n  let status: string | JSX.Element = \"\";\n  if (hasAuthError) {\n    status = (\n      <span>\n        Authentication error, <a href=\"/\">refresh page</a> to try again!\n      </span>\n    );\n  } else if (hasManifestError) {\n    status = (\n      <span>\n        Error fetching manifest, <a href=\"/\">refresh page</a> to try again!\n      </span>\n    );\n  } else if (!isAuthed) {\n    status = \"Authenticating...\";\n  } else if (!hasMembership) {\n    status = \"Waiting for Destiny platform selection...\";\n  } else if (!hasManifestData) {\n    status = \"Fetching Destiny item manifest...\";\n  } else if (!characterData || characterData.length === 0) {\n    if (isFetchingCharacterData) {\n      status = \"Fetching character data...\";\n    } else {\n      status = \"No character data\";\n    }\n  }\n\n  (window as any).characterData = characterData;\n\n  if (characterData && characterData.length > 0) {\n    return (\n      <div className={STYLES.App}>\n        <MembershipSelect onMembershipSelect={onSelectMembership} />\n        <div className={STYLES.charactersContainer}>\n          <div className={STYLES.characters}>\n            {characterData.map(c => (\n              <CharacterDisplay key={c.id} data={c} />\n            ))}\n          </div>\n        </div>\n        {status && <LoadingSpinner>{status}</LoadingSpinner>}\n        {isFetchingCharacterData && <FetchSpinner />}\n      </div>\n    );\n  }\n\n  return (\n    <div className={STYLES.App}>\n      <MembershipSelect onMembershipSelect={onSelectMembership} />\n      <LoadingSpinner>{status}</LoadingSpinner>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\n\nimport STYLES from \"./FetchSpinner.module.scss\";\n\nconst FetchSpinner = () => (\n  <div className={STYLES.fetchSpinnerContainer}>\n    <div className={STYLES.anchor}>\n      <div className={STYLES.spinner} />\n      <div className={STYLES.spinnerSmall} />\n    </div>\n  </div>\n);\n\nexport default FetchSpinner;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__4Taua\",\"loadingContainer\":\"App_loadingContainer__1uaFP\",\"charactersContainer\":\"App_charactersContainer__ht0bh\",\"characters\":\"App_characters__1pRqJ\",\"loadingStatus\":\"App_loadingStatus__34OS9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"anchor\":\"FetchSpinner_anchor__t9fMi\",\"spinner\":\"FetchSpinner_spinner__fWLSM\",\"spin\":\"FetchSpinner_spin__3y-FA\",\"fetchSpinnerContainer\":\"FetchSpinner_fetchSpinnerContainer__W5p3H\",\"spinnerSmall\":\"FetchSpinner_spinnerSmall__3O8k6\",\"spinnerTiny\":\"FetchSpinner_spinnerTiny__2Aod2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"membershipSelect\":\"MembershipSelect_membershipSelect__vf_ZG\",\"membership\":\"MembershipSelect_membership__RaveC\",\"platform_xbox\":\"MembershipSelect_platform_xbox__1ZAgU\",\"platform_psn\":\"MembershipSelect_platform_psn__WN9gB\",\"platform_steam\":\"MembershipSelect_platform_steam__1YUUA\",\"platform_blizzard\":\"MembershipSelect_platform_blizzard__1OiG6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hints\":\"PowerHints_hints__2cyAM\",\"hint\":\"PowerHints_hint__1b-7j\",\"worldDropHint\":\"PowerHints_worldDropHint__1eoNI\",\"powerfulHint\":\"PowerHints_powerfulHint__2ZKI7\",\"pinnacleHint\":\"PowerHints_pinnacleHint__3v3gU\",\"separator\":\"PowerHints_separator__1ghLp\",\"hintExtra\":\"PowerHints_hintExtra__1v6E5\",\"hintExtraInner\":\"PowerHints_hintExtraInner__2mokE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"barWrapper\":\"PowerBar_barWrapper__3KvKd\",\"iconWrapper\":\"PowerBar_iconWrapper__1qkgg\",\"icon\":\"PowerBar_icon__3wmj5\",\"barContainer\":\"PowerBar_barContainer__2DUON\",\"barLine\":\"PowerBar_barLine__1NoBN\",\"filledBar\":\"PowerBar_filledBar__1tEU7\",\"label\":\"PowerBar_label__2dseV\",\"power\":\"PowerBar_power__3mH5r\",\"max\":\"PowerBar_max__1jyHk\",\"belowAverage\":\"PowerBar_belowAverage__usS9M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inlinePowerNumber\":\"Power_inlinePowerNumber__37gA_\"};"],"sourceRoot":""}