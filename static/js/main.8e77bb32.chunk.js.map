{"version":3,"sources":["components/MembershipSelect.module.scss","components/CharacterDisplay.module.scss","services/bungie-api.ts","App.tsx","services/bungie-auth.ts","constants.ts","services/utils.ts","components/CharacterDisplay.tsx","components/MembershipSelect.tsx","components/LoadingSpinner.tsx","serviceWorker.ts","index.tsx","components/LoadingSpinner.module.scss","App.module.scss"],"names":["module","exports","membershipSelect","membership","platform_blizzard","platform_psn","platform_xbox","characterDisplay","header","emblemBackground","name","power","powerBars","powerRange","rangeLine","powerLabel","indicator","barWrapper","icon","barContainer","barLine","filledBar","cachedManifestData","characterDataRefreshTimer","bungieAuthedFetch","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","config","accessToken","headers","url","response","wrap","_context","prev","next","getAccessToken","x-api-key","BUNGIE_API_KEY","Authorization","concat","console","log","params","entries","map","_ref2","_ref3","slicedToArray","key","value","encodeURIComponent","fetch","sent","json","abrupt","t0","error","stop","_x","apply","this","arguments","manifestPropertyWhitelist","getCachedManifestData","_ref4","_callee2","manifestData","_context2","get","getRemoteManifestData","_ref5","_callee3","manifest","version","manifestDataResponse","_context3","jsonWorldContentPaths","en","keys","forEach","includes","set","localStorage","setItem","_x2","getManifest","_ref6","_callee4","localStorageManifestVersion","freshManifestData","_context4","getDestinyManifest","getItem","Response","window","location","search","undefined","clearStorage","removeItem","handleTokenResponse","tokenResponse","data","tokenDuration","expiryTime","bungieMembershipId","destinyMembershipsResponse","destinyMemberships","_args","length","status","access_token","expires_in","Date","now","membership_id","toString","getMembershipDataById","membershipId","membershipType","JSON","stringify","setSelectedDestinyMembership","fetchAuthToken","authCode","method","cache","credentials","Content-Type","redirect","referrer","body","hasValidAuth","accessTokenExpiryTime","parseInt","getDestinyMemberships","destinyMembershipsString","parse","e","message","getSelectedDestinyMembership","destinyMembershipString","auth","queryParams","URLSearchParams","replace","origin","pathname","ITEM_SLOT_BUCKET_HASHES","kinetic","energy","head","gloves","chest","legs","classItem","getOverallPower","powerBySlot","values","reduce","sum","getCharacterData","setCharacterData","setIsFetchingCharacterData","setIsFetchingManifest","manifestPromise","destinyMembership","profile","characters","characterEquipments","characterInventories","profileInventories","itemInstances","classNames","ITEM_TYPE_ARMOR","ITEM_TYPE_WEAPON","mergeItems","allCharacterItems","allCharacterWeapons","_getCharacterData","characterIds","characterData","finally","getProfile","destinyMembershipId","components","characterEquipment","profileInventory","itemComponents","instances","characterItemMap","allItems","characterItems","items","filter","i","itemDefinition","itemHash","DestinyInventoryItemDefinition","itemType","id","character","className","classType","mapAndFilterItems","item","instanceData","itemInstanceId","objectSpread","profileItems","combinedItems","armor","weapons","itemsBySlot","slots","slotName","slotBucketHash","defineProperty","inventory","bucketTypeHash","maxPowerBySlot","Math","max","toConsumableArray","primaryStat","bestItemBySlot","maxPowerForSlot","maxPowerItemsForSlot","equippedItems","some","ci","getBestItemForSlot","overallPower","_x3","Bar","min","avgValue","label","range","perc","floor","avgPerc","react_default","createElement","STYLES","src","alt","style","width","left","CharacterDisplay","text","slotFullNames","warlock","hunter","titan","minItemPower","minPowerToDisplay","maxItemPower","maxPowerToDisplay","ceil","roundedPower","classnames","backgroundColor","red","green","blue","rgbString","emblemColor","emblemBackgroundPath","substr","toUpperCase","minPower","maxPower","bars","bestItem","CharacterDisplay_Bar","displayProperties","MembershipSelect","onMembershipSelect","PLATFORMS","1","2","4","m","onClick","displayName","LoadingSpinner","loadingSpinnerContainer","anchor","spinnerLarge","spinnerSmall","App","_useState","useState","_useState2","isAuthed","setIsAuthed","useEffect","doAuth","_useState3","_useState4","hasMembership","setHasMembership","_useState5","_useState6","isFetchingManifest","_useState7","_useState8","isFetchingCharacterData","_useState9","_useState10","doGetCharacterData","setInterval","onSelectMembership","components_MembershipSelect","charactersContainer","c","components_CharacterDisplay","components_LoadingSpinner","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","spinner","spin","loadingContainer","loadingStatus"],"mappings":"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","file":"static/js/main.8e77bb32.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"membershipSelect\":\"MembershipSelect_membershipSelect__3GbZz\",\"membership\":\"MembershipSelect_membership__3vKKK\",\"platform_blizzard\":\"MembershipSelect_platform_blizzard__1zLDb\",\"platform_psn\":\"MembershipSelect_platform_psn__2ASN8\",\"platform_xbox\":\"MembershipSelect_platform_xbox__1EgLN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"characterDisplay\":\"CharacterDisplay_characterDisplay__20O9A\",\"header\":\"CharacterDisplay_header__2fx5d\",\"emblemBackground\":\"CharacterDisplay_emblemBackground__2pAjE\",\"name\":\"CharacterDisplay_name__2j8PA\",\"power\":\"CharacterDisplay_power__1p583\",\"powerBars\":\"CharacterDisplay_powerBars__3t0B5\",\"powerRange\":\"CharacterDisplay_powerRange__1d86z\",\"rangeLine\":\"CharacterDisplay_rangeLine__358zP\",\"powerLabel\":\"CharacterDisplay_powerLabel__3EDmr\",\"indicator\":\"CharacterDisplay_indicator__3CaQK\",\"barWrapper\":\"CharacterDisplay_barWrapper__2x1f3\",\"icon\":\"CharacterDisplay_icon__1e0L7\",\"barContainer\":\"CharacterDisplay_barContainer__1OnNQ\",\"barLine\":\"CharacterDisplay_barLine__2qulu\",\"filledBar\":\"CharacterDisplay_filledBar__3UpB_\"};","import { get, set } from 'idb-keyval'\n\nimport { BUNGIE_API_KEY, getAccessToken } from './bungie-auth';\nimport { HttpClientConfig, getDestinyManifest, DestinyManifest, DestinyInventoryItemDefinition } from 'bungie-api-ts/destiny2'\n\nexport const bungieAuthedFetch = async (config: HttpClientConfig) => {\n  try {\n    const accessToken = getAccessToken()\n    const headers: { [key: string]: string } = { 'x-api-key': BUNGIE_API_KEY }\n    if (accessToken) headers.Authorization = `Bearer ${accessToken}`\n    console.log(config)\n    const url = `${config.url}${\n      config.params\n        ? '?' + Object.entries(config.params).map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value as string)}`)\n        : ''\n      }`\n    const response = await fetch(url, { headers })\n    return await response.json()\n  } catch (e) {\n    console.error(e)\n    return {}\n  }\n}\n\nconst MANIFEST_VERSION_KEY = 'MANIFEST_VERSION'\nconst MANIFEST_IDB_KEY = 'MANIFEST_DATA'\ninterface ManifestData {\n  DestinyInventoryItemDefinition: { [key: string]: DestinyInventoryItemDefinition | undefined }\n}\nconst manifestPropertyWhitelist = ['DestinyInventoryItemDefinition']\n\nconst getCachedManifestData = async () => {\n  console.log('Loading manifest data from IDB')\n  const manifestData = await get(MANIFEST_IDB_KEY)\n  console.log('Finished loading manifest data from IDB')\n  return manifestData as ManifestData\n}\n\nconst getRemoteManifestData = async (manifest: DestinyManifest) => {\n  const version = manifest.version\n  console.log('Fetching fresh manifest data')\n  const manifestDataResponse = await fetch(`https://www.bungie.net${manifest.jsonWorldContentPaths.en}`)\n  const manifestData = await manifestDataResponse.json()\n  console.log('Pruning manifest data')\n  Object.keys(manifestData).forEach(key => {\n    if (!manifestPropertyWhitelist.includes(key)) delete manifestData[key]\n  })\n  console.log('Storing manifest data in IDB')\n  await set(MANIFEST_IDB_KEY, manifestData)\n  localStorage.setItem(MANIFEST_VERSION_KEY, version)\n  return manifestData\n}\n\nlet cachedManifestData: ManifestData | undefined\n\nexport const getManifest = async (): Promise<ManifestData> => {\n  const manifest = await getDestinyManifest(bungieAuthedFetch)\n  const localStorageManifestVersion = localStorage.getItem(MANIFEST_VERSION_KEY)\n  if (manifest\n    && manifest.Response\n    && manifest.Response.version === localStorageManifestVersion\n    && !window.location.search.includes('updateManifest')) {\n      if (!cachedManifestData)\n        cachedManifestData = await getCachedManifestData()\n      return cachedManifestData\n  }\n  cachedManifestData = undefined\n  const freshManifestData = await getRemoteManifestData(manifest.Response)\n  cachedManifestData = freshManifestData\n  return freshManifestData\n}","import React, { useState, useEffect } from 'react'\n\nimport { auth, hasValidAuth, hasSelectedDestinyMembership, setSelectedDestinyMembership } from './services/bungie-auth'\nimport { CharacterData } from './types'\n\nimport { getCharacterData } from './services/utils'\nimport CharacterDisplay from './components/CharacterDisplay'\nimport MembershipSelect from './components/MembershipSelect'\n\nimport 'normalize.css'\nimport STYLES from './App.module.scss'\nimport { UserInfoCard } from 'bungie-api-ts/user';\nimport LoadingSpinner from './components/LoadingSpinner';\n\nlet characterDataRefreshTimer: NodeJS.Timeout | undefined\n\nconst App = () => {\n\n  const [isAuthed, setIsAuthed] = useState<boolean>(hasValidAuth())\n  useEffect(() => {\n    const doAuth = async () => {\n      const authResult = await auth()\n      if (authResult) setIsAuthed(true)\n    }\n    if (!isAuthed) doAuth()\n  })\n\n  const [hasMembership, setHasMembership] = useState<boolean>(hasSelectedDestinyMembership())\n  const [isFetchingManifest, setIsFetchingManifest] = useState<boolean>(false)\n  const [isFetchingCharacterData, setIsFetchingCharacterData] = useState<boolean>(false)\n\n  const [characterData, setCharacterData] = useState<CharacterData[] | undefined>(undefined)\n  useEffect(() => {\n    const doGetCharacterData = () => getCharacterData(setCharacterData, setIsFetchingCharacterData, setIsFetchingManifest)\n    if (isAuthed && hasMembership) {\n      if (!characterDataRefreshTimer) {\n        characterDataRefreshTimer = setInterval(doGetCharacterData, 10000)\n      }\n      doGetCharacterData()\n    }\n  }, [isAuthed, hasMembership])\n\n  const onSelectMembership = (membership: UserInfoCard) => {\n    setSelectedDestinyMembership(membership)\n    setHasMembership(true)\n  }\n\n  if (characterData && characterData.length > 0) {\n    return (\n      <div className={STYLES.App}>\n        <MembershipSelect onMembershipSelect={onSelectMembership} />\n        <div className={STYLES.charactersContainer}>\n          <div className={STYLES.characters}>\n            {characterData.map(c => <CharacterDisplay key={c.id} data={c} />)}\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  let status = ''\n  if (!isAuthed) {\n    status = 'Authenticating...'\n  } else if (isFetchingManifest || isFetchingCharacterData) {\n    status = 'Fetching data...'\n  } else if (!hasMembership) {\n    status = 'Waiting for Destiny platform selection...'\n  } else if (!characterData || characterData.length === 0) {\n    status = 'No character data'\n  }\n\n  return (\n    <div className={STYLES.App}>\n      <LoadingSpinner status={status} />\n      <MembershipSelect onMembershipSelect={onSelectMembership} />\n    </div>\n  )\n\n}\n\nexport default App;\n","import { getMembershipDataById, UserInfoCard } from 'bungie-api-ts/user'\r\nimport { bungieAuthedFetch } from './bungie-api';\r\n\r\nconst isDev = process.env.NODE_ENV === 'development'\r\nexport const BUNGIE_API_KEY = isDev ? 'f7f184669f044a89b560fc5f71ed5d60' : 'd94be1e34632448fafdaf77c7afbb501'\r\nconst BUNGIE_OAUTH_AUTHORIZE_URL = 'https://www.bungie.net/en/OAuth/Authorize'\r\nconst BUNGIE_OAUTH_CLIENT_ID = isDev ? '26087' : '27213'\r\nconst BUNGIE_OAUTH_TOKEN_URL = 'https://www.bungie.net/platform/app/oauth/token/'\r\n\r\nconst ACCESS_TOKEN_STORAGE_KEY = 'bungieAccessToken'\r\nconst ACCESS_TOKEN_EXPIRY_STORAGE_KEY = 'bungieAccessTokenExpiryTime'\r\nconst BUNGIE_MEMBERSHIP_ID_STORAGE_KEY = 'bungieMembershipId'\r\nconst DESTINY_MEMBERSHIPS_STORAGE_KEY = 'destinyMemberships'\r\nconst DESTINY_MEMBERSHIP_STORAGE_KEY = 'destinyMembership'\r\n\r\nconst clearStorage = () => {\r\n  localStorage.removeItem(ACCESS_TOKEN_STORAGE_KEY);\r\n  localStorage.removeItem(ACCESS_TOKEN_EXPIRY_STORAGE_KEY);\r\n  localStorage.removeItem(BUNGIE_MEMBERSHIP_ID_STORAGE_KEY);\r\n  localStorage.removeItem(DESTINY_MEMBERSHIPS_STORAGE_KEY);\r\n  localStorage.removeItem(DESTINY_MEMBERSHIP_STORAGE_KEY);\r\n}\r\n\r\nconst getAuthUrl = () => `${BUNGIE_OAUTH_AUTHORIZE_URL}?response_type=code&client_id=${BUNGIE_OAUTH_CLIENT_ID}`\r\n\r\nconst redirectToAuth = () => {\r\n  console.log('Redirect to auth')\r\n  clearStorage()\r\n  window.location.replace(getAuthUrl())\r\n}\r\n\r\nconst handleTokenResponse = async (tokenResponse: Response, redirect: boolean = false) => {\r\n  console.log('handleTokenResponse')\r\n  clearStorage()\r\n  if (tokenResponse.status === 200) {\r\n    const data = await tokenResponse.json()\r\n    const accessToken = data.access_token as string\r\n    const tokenDuration = data.expires_in as number\r\n    const expiryTime = Date.now() + (tokenDuration * 1000)\r\n    const bungieMembershipId = data.membership_id as string\r\n\r\n    localStorage.setItem(ACCESS_TOKEN_STORAGE_KEY, accessToken)\r\n    localStorage.setItem(ACCESS_TOKEN_EXPIRY_STORAGE_KEY, expiryTime.toString())\r\n    localStorage.setItem(BUNGIE_MEMBERSHIP_ID_STORAGE_KEY, bungieMembershipId)\r\n\r\n    // 254 = all memberships\r\n    const destinyMembershipsResponse = await getMembershipDataById(bungieAuthedFetch, { membershipId: bungieMembershipId, membershipType: 254 })\r\n    const destinyMemberships = destinyMembershipsResponse.Response.destinyMemberships\r\n    localStorage.setItem(DESTINY_MEMBERSHIPS_STORAGE_KEY, JSON.stringify(destinyMemberships))\r\n\r\n    // If there is only one membership, select it automatically\r\n    if (destinyMemberships.length === 1) {\r\n      setSelectedDestinyMembership(destinyMemberships[0])\r\n    }\r\n\r\n    return { accessToken }\r\n  } else {\r\n    //return redirectToAuth()\r\n  }\r\n}\r\n\r\nconst fetchAuthToken = async (authCode: string) => {\r\n  console.log('fetchAuthToken', authCode)\r\n  clearStorage()\r\n  const tokenResponse = await fetch(BUNGIE_OAUTH_TOKEN_URL, {\r\n    method: 'POST',\r\n    cache: 'no-cache',\r\n    credentials: 'include',\r\n    headers: {\r\n      'Content-Type': 'application/x-www-form-urlencoded'\r\n    },\r\n    redirect: 'follow',\r\n    referrer: 'no-referrer',\r\n    body: `grant_type=authorization_code&code=${authCode}&client_id=${BUNGIE_OAUTH_CLIENT_ID}`\r\n  })\r\n  return await handleTokenResponse(tokenResponse)\r\n}\r\n\r\nexport const getAccessToken = () => {\r\n  return localStorage.getItem(ACCESS_TOKEN_STORAGE_KEY)\r\n}\r\n\r\nexport const hasValidAuth = () => {\r\n  const accessToken = getAccessToken()\r\n  const accessTokenExpiryTime = parseInt(localStorage.getItem(ACCESS_TOKEN_EXPIRY_STORAGE_KEY) || '-1', 10)\r\n  const bungieMembershipId = localStorage.getItem(BUNGIE_MEMBERSHIP_ID_STORAGE_KEY)\r\n  if (!accessToken || Date.now() >= accessTokenExpiryTime || !bungieMembershipId) return false\r\n  return true\r\n}\r\n\r\nexport const getDestinyMemberships = () => {\r\n  const destinyMembershipsString = localStorage.getItem(DESTINY_MEMBERSHIPS_STORAGE_KEY)\r\n  try {\r\n    if (destinyMembershipsString)\r\n      return JSON.parse(destinyMembershipsString) as UserInfoCard[]\r\n  } catch (e) {\r\n    console.error(`Error loading destiny memberships`, e.message)\r\n  }\r\n  return undefined\r\n}\r\n\r\nexport const hasDestinyMemberships = () => {\r\n  return !!getDestinyMemberships()\r\n}\r\n\r\nexport const getSelectedDestinyMembership = () => {\r\n  const destinyMembershipString = localStorage.getItem(DESTINY_MEMBERSHIP_STORAGE_KEY)\r\n  try {\r\n    if (destinyMembershipString)\r\n      return JSON.parse(destinyMembershipString) as UserInfoCard\r\n  } catch (e) {\r\n    console.error('Error loading destiny membership', e.message)\r\n  }\r\n  return undefined\r\n}\r\n\r\nexport const hasSelectedDestinyMembership = () => {\r\n  return !!getSelectedDestinyMembership()\r\n}\r\n\r\nexport const setSelectedDestinyMembership = (membership: UserInfoCard) => {\r\n  localStorage.setItem(DESTINY_MEMBERSHIP_STORAGE_KEY, JSON.stringify(membership))\r\n}\r\n\r\nexport const auth = async () => {\r\n\r\n  const queryParams = new URLSearchParams(window.location.search)\r\n  const authCode = queryParams.get('code')\r\n\r\n  if (authCode && !hasValidAuth()) {\r\n    console.log('Fetching access token with auth code')\r\n    await fetchAuthToken(authCode)\r\n  }\r\n\r\n  if (authCode) {\r\n    window.location.replace(`${window.location.origin}${window.location.pathname}`)\r\n  }\r\n\r\n  if (hasValidAuth()) {\r\n    return true\r\n  }\r\n\r\n  console.log('Redirecting to fresh authentication for missing or expired access token')\r\n  clearStorage()\r\n  redirectToAuth()\r\n}","export const ITEM_SLOT_BUCKET_HASHES = {\r\n  kinetic: 1498876634,\r\n  energy: 2465295065,\r\n  power: 953998645,\r\n  head: 3448274439,\r\n  gloves: 3551918588,\r\n  chest: 14239492,\r\n  legs: 20886954,\r\n  classItem: 1585787867,\r\n}","import { PowerBySlot, JoinedItemDefinition, CharacterData } from \"../types\";\r\nimport { ITEM_SLOT_BUCKET_HASHES } from \"../constants\";\r\nimport { getProfile, DestinyItemComponent } from \"bungie-api-ts/destiny2\";\r\nimport { getManifest, bungieAuthedFetch } from \"./bungie-api\";\r\nimport { getSelectedDestinyMembership, auth } from \"./bungie-auth\";\r\n\r\nexport const getOverallPower = (powerBySlot: PowerBySlot) =>\r\n  Object.values(powerBySlot)\r\n    .reduce((sum, power) => sum + power, 0)\r\n  / Object.keys(ITEM_SLOT_BUCKET_HASHES).length\r\n\r\nexport const getDropEfficiency = (maxPowerBySlot: PowerBySlot, dropPowerIncrease: number = 0) => {\r\n  const base = getOverallPower(maxPowerBySlot)\r\n  const dropPower = Math.floor(base + dropPowerIncrease)\r\n  const overallPerSlotChanges = Object.keys(ITEM_SLOT_BUCKET_HASHES)\r\n    .reduce((changes, slotName) => ({\r\n      ...changes,\r\n      [slotName]: Math.max(0, getOverallPower({ ...maxPowerBySlot, [slotName]: dropPower }) - base),\r\n    }), {} as PowerBySlot)\r\n  return getOverallPower(overallPerSlotChanges)\r\n}\r\n\r\n\r\nexport const getCharacterData = async (\r\n  setCharacterData: (state: CharacterData[]) => any,\r\n  setIsFetchingCharacterData: (state: boolean) => any,\r\n  setIsFetchingManifest: (state: boolean) => any,\r\n) => {\r\n\r\n  try {\r\n\r\n    // Double check here - also will cause refreshing of expired credentials if we get to this point\r\n    const isAuthed = await auth();\r\n    if (!isAuthed) return\r\n\r\n    setIsFetchingManifest(true)\r\n    const manifestPromise = getManifest()\r\n    manifestPromise.finally(() => setIsFetchingManifest(false))\r\n\r\n    setIsFetchingCharacterData(true)\r\n\r\n    const destinyMembership = getSelectedDestinyMembership()\r\n    if (!destinyMembership) return\r\n\r\n    const profile = await getProfile(bungieAuthedFetch, {\r\n      membershipType: destinyMembership.membershipType,\r\n      destinyMembershipId: destinyMembership.membershipId,\r\n      components: [\r\n        200, // DestinyComponentType.Characters,\r\n        205, // DestinyComponentType.CharacterEquipment,\r\n        201, // DestinyComponentType.CharacterInventories,\r\n        102, // DestinyComponentType.ProfileInventories,\r\n        300, // DestinyComponentType.ItemInstances,\r\n        307, // DestinyComponentType.ItemCommonData\r\n      ]\r\n    })\r\n    setIsFetchingCharacterData(false)\r\n\r\n    if (!profile || !profile.Response || !profile.Response.characters) return\r\n\r\n    const characters = profile.Response.characters.data\r\n    const characterEquipments = profile.Response.characterEquipment.data\r\n    const characterInventories = profile.Response.characterInventories.data\r\n    const profileInventories = profile.Response.profileInventory.data\r\n    const itemInstances = profile.Response.itemComponents.instances.data\r\n\r\n    const manifest = await manifestPromise\r\n\r\n    const CLASS_TYPE_ALL = 3\r\n    const classNames = ['titan', 'hunter', 'warlock']\r\n    const ITEM_TYPE_ARMOR = 2\r\n    const ITEM_TYPE_WEAPON = 3\r\n\r\n    if (characters && characterEquipments && characterInventories && profileInventories && itemInstances && manifest) {\r\n\r\n      const mergeItems = <T extends { [key: string]: { items: DestinyItemComponent[] } }>(characterItemMap: T) => {\r\n        return Object.values(characterItemMap)\r\n          .reduce((allItems, characterItems) => allItems.concat(characterItems.items), [] as DestinyItemComponent[])\r\n      }\r\n\r\n      const allCharacterItems = mergeItems(characterInventories).concat(mergeItems(characterEquipments))\r\n      const allCharacterWeapons = allCharacterItems.filter(i => {\r\n        const itemDefinition = i.itemHash && manifest.DestinyInventoryItemDefinition[i.itemHash]\r\n        return itemDefinition && itemDefinition.itemType === ITEM_TYPE_WEAPON\r\n      })\r\n\r\n      const getCharacterData = (id: string) => {\r\n        const character = characters[id]\r\n        const className = classNames[character.classType]\r\n\r\n        const mapAndFilterItems = (items: DestinyItemComponent[]) => items\r\n          .map(item => {\r\n            const instanceData = item.itemInstanceId ? itemInstances[item.itemInstanceId] : undefined\r\n            const itemDefinition = manifest.DestinyInventoryItemDefinition[item.itemHash]\r\n            return {\r\n              ...item,\r\n              instanceData,\r\n              itemDefinition,\r\n            }\r\n          })\r\n          .filter(i => i.instanceData && i.itemDefinition && [ITEM_TYPE_ARMOR, ITEM_TYPE_WEAPON].includes(i.itemDefinition.itemType))\r\n\r\n        const characterItems = mapAndFilterItems(\r\n          characterInventories[id].items\r\n            .concat(characterEquipments[id].items)\r\n            .concat(allCharacterWeapons)\r\n        )\r\n        const profileItems = mapAndFilterItems(profileInventories.items)\r\n          .filter(i => i.itemDefinition && (i.itemDefinition.classType === CLASS_TYPE_ALL || i.itemDefinition.classType === character.classType))\r\n\r\n        const combinedItems = characterItems.concat(profileItems)\r\n        const armor = combinedItems.filter(i => i.itemDefinition && i.itemDefinition.itemType === ITEM_TYPE_ARMOR)\r\n        const weapons = combinedItems.filter(i => i.itemDefinition && i.itemDefinition.itemType === ITEM_TYPE_WEAPON)\r\n\r\n        ;(window as any).weapons = weapons\r\n        ;(window as any).armor = armor\r\n\r\n        const itemsBySlot = Object.entries(ITEM_SLOT_BUCKET_HASHES)\r\n          .reduce((slots, [slotName, slotBucketHash]) => ({\r\n            ...slots,\r\n            [slotName]: combinedItems\r\n              .filter(i => i.itemDefinition && i.itemDefinition.inventory.bucketTypeHash === slotBucketHash)\r\n          }), {} as { [key: string]: JoinedItemDefinition[] })\r\n\r\n        const maxPowerBySlot = Object.entries(itemsBySlot)\r\n          .reduce((slots, [slotName, items]) => {\r\n            return {\r\n              ...slots,\r\n              [slotName]: Math.max(...items\r\n                .map(i => i.instanceData ? i.instanceData.primaryStat.value : 0))\r\n            }\r\n          }, {} as { [key: string]: number })\r\n\r\n        const getBestItemForSlot = (slotName: string) => {\r\n          const maxPowerForSlot = maxPowerBySlot[slotName]\r\n          const maxPowerItemsForSlot = itemsBySlot[slotName].filter(i => i.instanceData && i.instanceData.primaryStat.value === maxPowerForSlot)\r\n          if (maxPowerItemsForSlot.length === 1) return maxPowerItemsForSlot[0]\r\n          const equippedItems = maxPowerItemsForSlot.filter(i => characterEquipments[id].items.some(ci => ci.itemInstanceId === i.itemInstanceId))\r\n          if (equippedItems.length === 1) return equippedItems[0]\r\n          return maxPowerItemsForSlot[0]\r\n        }\r\n\r\n        const bestItemBySlot = Object.keys(ITEM_SLOT_BUCKET_HASHES)\r\n          .reduce((slots, slotName) => ({\r\n            ...slots,\r\n            [slotName]: getBestItemForSlot(slotName),\r\n          }), {} as { [key: string]: JoinedItemDefinition })\r\n\r\n        const overallPower = getOverallPower(maxPowerBySlot)\r\n\r\n        return {\r\n          character,\r\n          id,\r\n          className,\r\n          itemsBySlot,\r\n          maxPowerBySlot,\r\n          overallPower,\r\n          bestItemBySlot,\r\n        }\r\n      }\r\n\r\n      const characterIds = Object.keys(characters)\r\n      const characterData = characterIds.map(id => getCharacterData(id))\r\n      setCharacterData(characterData)\r\n    }\r\n\r\n  } catch (e) {\r\n    console.error(`Error fetching manifest and character data`, e)\r\n    setIsFetchingCharacterData(false)\r\n    setIsFetchingManifest(false)\r\n    return\r\n  }\r\n\r\n}","import React from 'react'\r\nimport classnames from 'classnames'\r\n\r\nimport { CharacterData } from \"../types\";\r\n\r\nimport STYLES from './CharacterDisplay.module.scss'\r\n\r\ninterface CharacterDisplayProps {\r\n  data: CharacterData\r\n}\r\n\r\nconst titleCase = (text: string) => text.substr(0, 1).toUpperCase() + text.substr(1)\r\n\r\ninterface BarProps {\r\n  min: number\r\n  max: number\r\n  value: number\r\n  avgValue: number\r\n  label: string\r\n  icon?: string\r\n}\r\nconst Bar = ({ min, max, value, avgValue, label, icon }: BarProps) => {\r\n  const range = max - min\r\n  const perc = Math.floor(((value - min) / range) * 1000) / 10\r\n  const avgPerc = Math.floor(((avgValue - min) / range) * 1000) / 10\r\n  // const plusTwoPerc = Math.floor(((avgValue + 2 - min) / range) * 1000) / 10\r\n  // const plusFivePerc = Math.floor(((avgValue + 5 - min) / range) * 1000) / 10\r\n  return (\r\n    <div className={STYLES.barWrapper}>\r\n      {icon && (<img className={STYLES.icon} src={`https://www.bungie.net${icon}`} alt={label} />)}\r\n      <div className={STYLES.barContainer}>\r\n        <div className={STYLES.filledBar} style={{width: `${perc}%`}}><span>{label}</span></div>\r\n        <div className={STYLES.barLine} style={{left: `${avgPerc}%`}} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst CharacterDisplay = ({ data }: CharacterDisplayProps) => {\r\n\r\n  const classItemNames: { [key: string]: string } = {\r\n    warlock: 'Warlock Bond',\r\n    hunter: 'Hunter Cloak',\r\n    titan: 'Titan Mark',\r\n  }\r\n  const slotFullNames: { [key: string]: string } = {\r\n    kinetic: 'Kinetic Weapon',\r\n    energy: 'Energy Weapon',\r\n    power: 'Power Weapon',\r\n    head: 'Helmet',\r\n    gloves: 'Gauntlets',\r\n    chest: 'Chest Armor',\r\n    legs: 'Leg Armor',\r\n    classItem: classItemNames[data.className],\r\n  }\r\n\r\n  const rgbString = ({ red, green, blue }: {red:number, green: number, blue: number}) => `rgb(${red},${green},${blue})`\r\n\r\n  // Round to 50s\r\n  const minItemPower = Math.min(...Object.values(data.maxPowerBySlot))\r\n  const minPowerToDisplay = Math.max(Math.floor(minItemPower/50)*50 - 50, 0)\r\n  const maxItemPower = Math.max(...Object.values(data.maxPowerBySlot))\r\n  const maxPowerToDisplay = Math.min(Math.ceil(maxItemPower/50)*50, 750)\r\n\r\n  const roundedPower = Math.floor(data.overallPower)\r\n\r\n  const range = maxPowerToDisplay - minPowerToDisplay\r\n  const perc = Math.floor(((roundedPower - minPowerToDisplay) / range) * 1000) / 10\r\n\r\n  return (\r\n    <div className={classnames(STYLES.characterDisplay, STYLES[`class_${data.className}`])} style={{backgroundColor:rgbString(data.character.emblemColor)}}>\r\n      <div className={STYLES.header}>\r\n        <img className={STYLES.emblemBackground} src={`https://www.bungie.net${data.character.emblemBackgroundPath}`} alt='' />\r\n        <div className={STYLES.name}>{titleCase(data.className)}</div>\r\n        <div className={STYLES.power}>{roundedPower}</div>\r\n      </div>\r\n      <div className={STYLES.powerBars}>\r\n        <div className={STYLES.powerRange}>\r\n          <div className={STYLES.minPower}>{minPowerToDisplay}</div>\r\n          <div className={STYLES.rangeLine} />\r\n          <div className={STYLES.maxPower}>{maxPowerToDisplay}</div>\r\n        </div>\r\n        <div className={STYLES.bars}>\r\n          {Object.entries(data.maxPowerBySlot).map(([slotName, power]) => {\r\n            const bestItem = data.bestItemBySlot[slotName]\r\n            return (\r\n              <Bar\r\n                key={`${data.id}_${slotName}`}\r\n                min={minPowerToDisplay}\r\n                max={maxPowerToDisplay}\r\n                value={power}\r\n                avgValue={roundedPower}\r\n                label={`${power} ${slotFullNames[slotName] || slotName}`}\r\n                icon={bestItem.itemDefinition && bestItem.itemDefinition.displayProperties.icon}\r\n              />\r\n            )\r\n          })}\r\n        </div>\r\n        <div className={STYLES.powerLabel}>\r\n          <div className={STYLES.indicator} style={{left: `${perc}%`}}>{roundedPower}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default CharacterDisplay","import React from 'react'\nimport { UserInfoCard } from 'bungie-api-ts/user';\nimport classnames from 'classnames'\n\nimport STYLES from './MembershipSelect.module.scss'\nimport { getDestinyMemberships } from '../services/bungie-auth';\n\ninterface MembershipSelectProps {\n  onMembershipSelect: (membership: UserInfoCard) => any\n}\n\nconst MembershipSelect = ({ onMembershipSelect }: MembershipSelectProps) => {\n\n  const destinyMemberships = getDestinyMemberships()\n\n  if (!destinyMemberships) return null\n\n  if (destinyMemberships.length === 0) {\n    return <div>No destiny memberships!</div>\n  }\n\n  const PLATFORMS: { [key: number]: string } = {\n    1: 'xbox',\n    2: 'psn',\n    4: 'blizzard'\n  }\n\n  return (\n    <div className={STYLES.membershipSelect}>\n      {destinyMemberships.map(m => {\n        return (\n          <div\n            key={m.membershipId}\n            className={classnames(STYLES.membership, STYLES[`platform_${PLATFORMS[m.membershipType]}`])}\n            onClick={() => onMembershipSelect(m)}>\n            {m.displayName}\n          </div>\n        )\n      })}\n    </div>\n  )\n\n}\n\nexport default MembershipSelect","import React from 'react'\n\nimport STYLES from './LoadingSpinner.module.scss'\n\ninterface LoadingSpinnerProps {\n  status: string\n}\n\nconst LoadingSpinner = ({ status }: LoadingSpinnerProps) => {\n  return (\n    <div className={STYLES.loadingSpinnerContainer}>\n      <div className={STYLES.anchor}>\n        <div className={STYLES.spinnerLarge} />\n        <div className={STYLES.spinnerSmall} />\n        <div className={STYLES.status}>{status}</div>\n      </div>\n    </div>\n  )\n}\n\nexport default LoadingSpinner","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"anchor\":\"LoadingSpinner_anchor__78Pnm\",\"spinner\":\"LoadingSpinner_spinner__32tWn\",\"spin\":\"LoadingSpinner_spin__3FVoi\",\"loadingSpinnerContainer\":\"LoadingSpinner_loadingSpinnerContainer__2QV5S\",\"spinnerLarge\":\"LoadingSpinner_spinnerLarge__KooL0\",\"spinnerSmall\":\"LoadingSpinner_spinnerSmall__27lWl\",\"status\":\"LoadingSpinner_status__3sgCR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__15LM-\",\"loadingContainer\":\"App_loadingContainer__1Pa9s\",\"charactersContainer\":\"App_charactersContainer__1RSU_\",\"characters\":\"App_characters__1GhrS\",\"loadingStatus\":\"App_loadingStatus__3QEhd\"};"],"sourceRoot":""}