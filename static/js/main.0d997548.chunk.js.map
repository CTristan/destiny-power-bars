{"version":3,"sources":["components/CharacterDisplay.module.scss","components/LoadingSpinner.module.scss","App.module.scss","services/ga.ts","services/bungie-api.ts","services/bungie-auth.ts","constants.ts","components/CharacterDisplay.tsx","components/LoadingSpinner.tsx","components/MembershipSelect.tsx","services/utils.ts","App.tsx","serviceWorker.ts","index.tsx","components/MembershipSelect.module.scss"],"names":["module","exports","characterDisplay","header","emblemBackground","name","power","details","hints","detailsRow","hint","detailsLabel","detailsInlineIcon","detailsValue","worldDropHint","powerfulHint","pinnacleHint","separator","hintExtra","hintExtraInner","powerBars","powerRange","rangeLine","powerLabel","indicator","barWrapper","iconWrapper","icon","barContainer","barLine","filledBar","label","max","belowAverage","anchor","spinner","spin","loadingSpinnerContainer","spinnerLarge","spinnerSmall","status","App","loadingContainer","charactersContainer","characters","loadingStatus","ReactGA","initialize","pageview","window","location","pathname","search","cachedManifestData","getManifestPromise","bungieAuthedFetch","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","config","accessToken","headers","url","response","wrap","_context","prev","next","getAccessToken","x-api-key","BUNGIE_API_KEY","Authorization","concat","params","entries","map","_ref2","_ref3","slicedToArray","key","value","encodeURIComponent","fetch","sent","json","abrupt","t0","console","error","stop","_x","apply","this","arguments","manifestPropertyWhitelist","getCachedManifestData","_ref4","_callee2","manifestData","_context2","log","get","getRemoteManifestData","_ref5","_callee3","manifest","version","manifestDataResponse","_context3","Error","jsonWorldContentPaths","en","keys","forEach","includes","set","localStorage","setItem","_x2","getManifest","_ref6","_callee5","_context5","_callee4","localStorageManifestVersion","freshManifestData","_context4","ga","event","category","action","getDestinyManifest","getItem","Response","ErrorStatus","undefined","getFullProfile","membershipType","membershipId","getProfile","components","destinyMembershipId","clearStorage","removeItem","handleTokenResponse","tokenResponse","data","tokenDuration","expiryTime","bungieMembershipId","destinyMembershipsResponse","destinyMemberships","_args","length","access_token","expires_in","Date","now","membership_id","toString","getMembershipDataById","authSuccess","JSON","stringify","setSelectedDestinyMembership","fetchAuthToken","authCode","body","cache","credentials","Content-Type","method","redirect","referrer","hasValidAuth","accessTokenExpiryTime","parseInt","getDestinyMemberships","destinyMembershipsString","parse","e","message","getSelectedDestinyMembership","destinyMembershipString","membership","auth","queryParams","authResponse","URLSearchParams","replace","origin","ITEM_SLOT_BUCKETS","_ITEM_SLOT_BUCKETS","defineProperty","ITEM_BUCKET_SLOTS","reduce","buckets","slot","bucket","_objectSpread","ORDERED_ITEM_SLOTS","ITEM_TYPE_ARMOR","ITEM_TYPE_WEAPON","CLASS_NAMES","Bar","_classnames","min","avgValue","range","perc","Math","floor","avgPerc","fullLabelText","fullLabel","react_default","createElement","className","STYLES","classnames","slotName","src","alt","style","width","left","CharacterDisplay","text","slotFullNames","chest","classItem","hunter","titan","warlock","energy","gloves","head","kinetic","legs","powerBySlot","slots","CharacterDisplay_objectSpread","topItemBySlot","instanceData","primaryStat","overallPower","minItemPower","toConsumableArray","values","minPowerToDisplay","maxItemPower","maxPowerToDisplay","ceil","roundedPower","summableArtifactBonusPower","artifactData","bonusPower","backgroundColor","red","green","blue","rgbString","character","emblemColor","emblemBackgroundPath","substr","toUpperCase","defailsValue","Fragment","iconPath","minPower","maxPower","bars","bestItem","CharacterDisplay_Bar","id","itemDefinition","displayProperties","potentialOverallPower","LoadingSpinner","MembershipSelect","onMembershipSelect","PLATFORMS","1","2","3","4","membershipSelect","m","onClick","displayName","characterDataRefreshTimer","getPowerBySlot","itemsBySlot","mapValues","item","getOverallPower","sum","mergeItems","characterItemMap","allItems","characterItems","items","isItemEquippableByCharacter","canEquip","cannotEquipReason","equipRequiredLevel","baseCharacterLevel","classType","getBasicCharacterData","pendingBasicProfile","profile","getDataForCharacterId","characterIds","characterData","light","getCharacterData","setCharacterData","setIsFetchingCharacterData","returnBasicCharacterData","pendingManifest","destinyMembership","shouldSetBasicCharacterData","pendingBasicCharacterData","fullProfile","_characters","characterEquipments","characterInventories","profileInventories","itemInstances","allCharacterItems","allCharacterWeapons","_args3","catch","basicCharacterData","characterEquipment","profileInventory","itemComponents","instances","filter","i","itemHash","DestinyInventoryItemDefinition","itemType","mapAndFilterItems","utils_objectSpread","itemInstanceId","inventory","bucketTypeHash","relevantProfileItems","getItemScore","score","isEquipped","getEquipLabel","equippingBlock","uniqueLabel","groupBy","maxBy","uniqueEquippedGroups","forIn","uniqueEquippedGroup","validItemCombinations","otherItems","otherItem","isCombinationValid","combination","nonExotics","push","bestCombination","sumBy","artifactItemComponent","flatMap","find","artifactDefinition","potentialPowerBySlot","_loop","tempPotentialOverallPower","some","_x3","_useState","useState","_useState2","isAuthed","setIsAuthed","_useState3","_useState4","hasAuthError","setAuthError","_useState5","_useState6","hasMembership","setHasMembership","_useState7","_useState8","hasManifestData","setHasManifestData","_useState9","_useState10","hasManifestError","setManifestError","_useState11","_useState12","isFetchingCharacterData","_useState13","_useState14","useEffect","doAuth","doGetCharacterData","setInterval","onSelectMembership","components_MembershipSelect","c","components_CharacterDisplay","components_LoadingSpinner","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","platform_xbox","platform_psn","platform_steam","platform_blizzard"],"mappings":"2EACAA,EAAAC,QAAA,CAAkBC,iBAAA,2CAAAC,OAAA,iCAAAC,iBAAA,2CAAAC,KAAA,+BAAAC,MAAA,gCAAAC,QAAA,kCAAAC,MAAA,gCAAAC,WAAA,qCAAAC,KAAA,+BAAAC,aAAA,uCAAAC,kBAAA,4CAAAC,aAAA,uCAAAC,cAAA,wCAAAC,aAAA,uCAAAC,aAAA,uCAAAC,UAAA,oCAAAC,UAAA,oCAAAC,eAAA,yCAAAC,UAAA,oCAAAC,WAAA,qCAAAC,UAAA,oCAAAC,WAAA,qCAAAC,UAAA,oCAAAC,WAAA,qCAAAC,YAAA,sCAAAC,KAAA,+BAAAC,aAAA,uCAAAC,QAAA,kCAAAC,UAAA,oCAAAC,MAAA,gCAAAC,IAAA,8BAAAC,aAAA,4DCAlBjC,EAAAC,QAAA,CAAkBiC,OAAA,+BAAAC,QAAA,gCAAAC,KAAA,6BAAAC,wBAAA,gDAAAC,aAAA,qCAAAC,aAAA,qCAAAC,OAAA,oDCAlBxC,EAAAC,QAAA,CAAkBwC,IAAA,iBAAAC,iBAAA,8BAAAC,oBAAA,iCAAAC,WAAA,wBAAAC,cAAA,8LCClBC,IAAQC,WAAW,kBACnBD,IAAQE,SAASC,OAAOC,SAASC,SAAWF,OAAOC,SAASE,QAE7CN,ICuEXO,EACAC,IDxEWR,IAAf,ECOaS,EAAiB,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAC,EAAOC,GAAP,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAR,EAAAC,EAAAQ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAEvBN,EAAcQ,IACdP,EAAqC,CAAEQ,YAAaC,GACtDV,IACFC,EAAQU,cAAR,UAAAC,OAAkCZ,IAE9BE,EAPuB,GAAAU,OAOdb,EAAOG,KAPOU,OAQ3Bb,EAAOc,OACH,IACApB,OAAOqB,QAAQf,EAAOc,QAAQE,IAC5B,SAAAC,GAAA,IAAAC,EAAAxB,OAAAyB,EAAA,EAAAzB,CAAAuB,EAAA,GAAEG,EAAFF,EAAA,GAAOG,EAAPH,EAAA,YAAAL,OACKS,mBAAmBF,GADxB,KAAAP,OACgCS,mBAC5BD,MAGN,IAhBuBf,EAAAE,KAAA,EAkBNe,MAAMpB,EAAK,CAAED,YAlBP,cAkBvBE,EAlBuBE,EAAAkB,KAAAlB,EAAAE,KAAA,GAmBhBJ,EAASqB,OAnBO,eAAAnB,EAAAoB,OAAA,SAAApB,EAAAkB,MAAA,eAAAlB,EAAAC,KAAA,GAAAD,EAAAqB,GAAArB,EAAA,SAqB7BsB,QAAQC,MAARvB,EAAAqB,IArB6BrB,EAAAoB,OAAA,SAsBtB,IAtBsB,yBAAApB,EAAAwB,SAAA/B,EAAA,kBAAH,gBAAAgC,GAAA,OAAAtC,EAAAuC,MAAAC,KAAAC,YAAA,GAiCxBC,EAA4B,CAAC,kCAE7BC,EAAqB,eAAAC,EAAA3C,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAwC,IAAA,IAAAC,EAAA,OAAA3C,EAAAC,EAAAQ,KAAA,SAAAmC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,cAC5BoB,QAAQa,IAAI,kCADgBD,EAAAhC,KAAA,EAEDkC,YAVJ,iBAQK,cAEtBH,EAFsBC,EAAAhB,KAG5BI,QAAQa,IAAI,2CAHgBD,EAAAd,OAAA,SAIrBa,GAJqB,wBAAAC,EAAAV,SAAAQ,MAAH,yBAAAD,EAAAL,MAAAC,KAAAC,YAAA,GAOrBS,EAAqB,eAAAC,EAAAlD,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAA+C,EAAOC,GAAP,IAAAC,EAAAC,EAAAT,EAAA,OAAA3C,EAAAC,EAAAQ,KAAA,SAAA4C,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,UACvBsC,EADuB,CAAAG,EAAAzC,KAAA,cAEpB0C,MAAM,gBAFc,cAItBH,EAAUD,EAASC,QACzBnB,QAAQa,IAAI,gCALgBQ,EAAAzC,KAAA,EAMOe,MAAK,yBAAAV,OACbiC,EAASK,sBAAsBC,KAP9B,cAMtBJ,EANsBC,EAAAzB,KAAAyB,EAAAzC,KAAA,EASDwC,EAAqBvB,OATpB,cAStBc,EATsBU,EAAAzB,KAU5BI,QAAQa,IAAI,yBACZ/C,OAAO2D,KAAKd,GAAce,QAAQ,SAAAlC,GAC3Be,EAA0BoB,SAASnC,WAC/BmB,EAAanB,KAGxBQ,QAAQa,IAAI,gCAhBgBQ,EAAAzC,KAAA,GAiBtBgD,YAhCiB,gBAgCKjB,GAjBA,eAkB5BkB,aAAaC,QAlCc,mBAkCgBX,GAlBfE,EAAAvB,OAAA,SAmBrBa,GAnBqB,yBAAAU,EAAAnB,SAAAe,MAAH,gBAAAc,GAAA,OAAAf,EAAAZ,MAAAC,KAAAC,YAAA,GAyBd0B,EAAW,eAAAC,EAAAnE,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAgE,IAAA,OAAAlE,EAAAC,EAAAQ,KAAA,SAAA0D,GAAA,cAAAA,EAAAxD,KAAAwD,EAAAvD,MAAA,cACpBjB,IACHA,EAAqBG,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAC,SAAAkE,IAAA,IAAAlB,EAAAmB,EAAAC,EAAA,OAAAtE,EAAAC,EAAAQ,KAAA,SAAA8D,GAAA,cAAAA,EAAA5D,KAAA4D,EAAA3D,MAAA,cACpB4D,EAAGC,MAAM,CACPC,SAAU,OACVC,OAAQ,0BAHUJ,EAAA3D,KAAA,EAKGgE,6BAAmBhF,GALtB,UAKdsD,EALcqB,EAAA3C,KAMdyC,EAA8BR,aAAagB,QAjD1B,qBAqDrB3B,IACAA,EAAS4B,UACT5B,EAAS4B,SAAS3B,UAAYkB,GAC7B/E,OAAOC,SAASE,OAAOkE,SAAS,kBAbf,CAAAY,EAAA3D,KAAA,YAeblB,EAfa,CAAA6E,EAAA3D,KAAA,gBAAA2D,EAAA3D,KAAA,EAgBW4B,IAhBX,OAgBhB9C,EAhBgB6E,EAAA3C,KAAA,eAAA2C,EAAAzC,OAAA,SAkBXpC,GAlBW,YAqBlBwD,IACAA,EAAS6B,aACgB,YAAzB7B,EAAS6B,YAvBS,CAAAR,EAAA3D,KAAA,eAyBlB4D,EAAGC,MAAM,CACPC,SAAU,SACVC,OAAM,iBAAA1D,OAAmBiC,EAAS6B,YAA5B,sCAEFzB,MAAK,iBAAArC,OACQiC,EAAS6B,YADjB,qCA7BO,WAiCf7B,GAAaA,EAAS4B,SAjCP,CAAAP,EAAA3D,KAAA,eAkCZ0C,MAAM,yBAlCM,eAoCpB5D,OAAqBsF,EACrBR,EAAGC,MAAM,CACPC,SAAU,OACVC,OAAQ,0BAvCUJ,EAAA3D,KAAA,GAyCYmC,EAAsBG,EAAS4B,UAzC3C,eAyCdR,EAzCcC,EAAA3C,KA0CpBlC,EAAqB4E,EA1CDC,EAAAzC,OAAA,SA2CbwC,GA3Ca,yBAAAC,EAAArC,SAAAkC,KAADtE,IAFEqE,EAAArC,OAAA,SAgDlBnC,GAhDkB,wBAAAwE,EAAAjC,SAAAgC,MAAH,yBAAAD,EAAA7B,MAAAC,KAAAC,YAAA,GAqEX2C,EAAiB,SAC5BC,EACAC,GAMA,OAJAX,EAAGC,MAAM,CACPC,SAAU,iBACVC,OAAQ,uBAEHS,qBAAWxF,EAAmB,CACnCyF,WAAY,CACV,IACA,IACA,IACA,IACA,KAEFC,oBAAqBH,EACrBD,oBChKSnE,EAET,mCAYEwE,EAAe,WACnB1B,aAAa2B,WAPkB,qBAQ/B3B,aAAa2B,WAPyB,+BAQtC3B,aAAa2B,WAP0B,sBAQvC3B,aAAa2B,WAPyB,sBAQtC3B,aAAa2B,WAPwB,sBAuBjCC,EAAmB,eAAA5F,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAC,EAC1BuF,GAD0B,IAAAC,EAAAtF,EAAAuF,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA3D,UAAA,OAAAtC,EAAAC,EAAAQ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAAqF,EAAAC,OAAA,QAAAlB,IAAAiB,EAAA,IAAAA,EAAA,GAI1BjE,QAAQa,IAAI,uBACZ0C,IAC6B,MAAzBG,EAAc7G,OANQ,CAAA6B,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAOL8E,EAAc7D,OAPT,cAOlB8D,EAPkBjF,EAAAkB,KAQlBvB,EAAcsF,EAAKQ,aACnBP,EAAgBD,EAAKS,WACrBP,EAAaQ,KAAKC,MAAwB,IAAhBV,EAC1BE,EAAqBH,EAAKY,cAEhC1C,aAAaC,QAxCgB,oBAwCkBzD,GAC/CwD,aAAaC,QAxCuB,8BA0ClC+B,EAAWW,YAEb3C,aAAaC,QA3CwB,qBA2CkBgC,GAlB/BpF,EAAAE,KAAA,GAqBiB6F,gCACvC7G,EACA,CAAEuF,aAAcW,EAAoBZ,eAAgB,MAvB9B,YAqBlBa,EArBkBrF,EAAAkB,OA4BrBmE,EAA2BjB,YAC3BiB,EAA2BhB,aACiB,YAA3CgB,EAA2BhB,aA9BP,CAAArE,EAAAE,KAAA,gBAgCtB4D,EAAGC,MAAM,CACPC,SAAU,SACVC,OAAM,2CAAA1D,OAA6C8E,EAA2BhB,eAlC1DrE,EAAAoB,OAAA,SAoCf,CACL4E,aAAa,EACbzE,MAAK,eAAAhB,OAAiB8E,EAA2BhB,YAA5C,gCAtCe,eA0ClBiB,EACJD,EAA2BjB,SAASkB,mBACtCnC,aAAaC,QApEuB,qBAsElC6C,KAAKC,UAAUZ,IAIiB,IAA9BA,EAAmBE,QACrBW,EAA6Bb,EAAmB,IAnD1BtF,EAAAoB,OAAA,SAsDjB,CAAEzB,cAAaqG,aAAa,IAtDX,WAwDK,MAAzBhB,EAAc7G,OAxDM,CAAA6B,EAAAE,KAAA,gBAAAF,EAAAoB,OAAA,SAyDf,CACL4E,aAAa,EACbzE,MAAK,eAAAhB,OAAiByE,EAAc7G,OAA/B,kCA3De,yBAAA6B,EAAAwB,SAAA/B,MAAH,gBAAAgC,GAAA,OAAAtC,EAAAuC,MAAAC,KAAAC,YAAA,GAkEnBwE,EAAc,eAAAzF,EAAAvB,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAwC,EAAOqE,GAAP,IAAArB,EAAA,OAAA1F,EAAAC,EAAAQ,KAAA,SAAAmC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,cACrBoB,QAAQa,IAAI,iBAAkBkE,GAC9BxB,IACAf,EAAGC,MAAM,CACPC,SAAU,OACVC,OAAQ,wBALW/B,EAAAhC,KAAA,EAOOe,MAtG5B,mDAsG0D,CACxDqF,KAAI,sCAAA/F,OAAwC8F,EAAxC,eAAA9F,OAzGyC,SA0G7CgG,MAAO,WACPC,YAAa,UACb5G,QAAS,CACP6G,eAAgB,qCAElBC,OAAQ,OACRC,SAAU,SACVC,SAAU,gBAhBS,cAOf5B,EAPe9C,EAAAhB,KAAAgB,EAAAhC,KAAA,EAkBR6E,EAAoBC,GAlBZ,cAAA9C,EAAAd,OAAA,SAAAc,EAAAhB,MAAA,wBAAAgB,EAAAV,SAAAQ,MAAH,gBAAAqB,GAAA,OAAA1C,EAAAe,MAAAC,KAAAC,YAAA,GAqBPzB,EAAiB,WAC5B,OAAOgD,aAAagB,QAnHW,sBAsHpB0C,EAAe,WAC1B,IAAMlH,EAAcQ,IACd2G,EAAwBC,SAC5B5D,aAAagB,QAxHuB,gCAwHqB,KACzD,IAEIiB,EAAqBjC,aAAagB,QA1HD,sBA6HvC,SACGxE,GACDgG,KAAKC,OAASkB,IACb1B,IAOQ4B,EAAwB,WACnC,IAAMC,EAA2B9D,aAAagB,QAvIR,sBA0ItC,IACE,GAAI8C,EACF,OAAOhB,KAAKiB,MAAMD,GAEpB,MAAOE,GACP7F,QAAQC,MAAR,oCAAmD4F,EAAEC,WAS5CC,EAA+B,WAC1C,IAAMC,EAA0BnE,aAAagB,QAxJR,qBA2JrC,IACE,GAAImD,EACF,OAAOrB,KAAKiB,MAAMI,GAEpB,MAAOH,GACP7F,QAAQC,MAAM,mCAAoC4F,EAAEC,WAS3CjB,EAA+B,SAACoB,GAC3CpE,aAAaC,QA1KwB,oBA4KnC6C,KAAKC,UAAUqB,KAINC,EAAI,eAAA5G,EAAAxB,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAA+C,IAAA,IAAAkF,EAAApB,EAAAqB,EAAA,OAAApI,EAAAC,EAAAQ,KAAA,SAAA4C,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,UACZuH,EAAc,IAAIE,gBAAgB/I,OAAOC,SAASE,UAClDsH,EAAWoB,EAAYrF,IAAI,UAEhByE,IAJC,CAAAlE,EAAAzC,KAAA,gBAKhBoB,QAAQa,IAAI,wCALIQ,EAAAzC,KAAA,EAMWkG,EAAeC,GAN1B,YAMVqB,EANU/E,EAAAzB,QAOiC,IAA7BwG,EAAa1B,YAPjB,CAAArD,EAAAzC,KAAA,gBAQdoB,QAAQC,MAAMmG,EAAanG,OARboB,EAAAvB,OAAA,UASP,GATO,WAadiF,GACFzH,OAAOC,SAAS+I,QAAhB,GAAArH,OACK3B,OAAOC,SAASgJ,QADrBtH,OAC8B3B,OAAOC,SAASC,YAI5C+H,MA/CKG,IA4BS,CAAArE,EAAAzC,KAAA,gBAAAyC,EAAAvB,OAAA,UAoBT,GApBS,QAuBlBE,QAAQa,IACN,2GAEF0C,IA5LAvD,QAAQa,IAAI,oBACZ0C,IACAf,EAAGC,MAAM,CACPC,SAAU,OACVC,OAAQ,sBAEVrF,OAAOC,SAAS+I,QAVC,GAAArH,OAnBgB,4CAmBhB,kCAAAA,OAlB8B,UAwL7B,yBAAAoC,EAAAnB,SAAAe,MAAH,yBAAA3B,EAAAc,MAAAC,KAAAC,YAAA,8PCjMV,IASMkG,GAAiBC,EAAA,GAAA3I,OAAA4I,EAAA,EAAA5I,CAAA2I,EATG,UAUV,YADO3I,OAAA4I,EAAA,EAAA5I,CAAA2I,EARE,SAUV,YAFQ3I,OAAA4I,EAAA,EAAA5I,CAAA2I,EAPC,QAUV,WAHS3I,OAAA4I,EAAA,EAAA5I,CAAA2I,EANA,OAUV,YAJU3I,OAAA4I,EAAA,EAAA5I,CAAA2I,EALE,SAUV,YALQ3I,OAAA4I,EAAA,EAAA5I,CAAA2I,EAJC,QAUV,UANS3I,OAAA4I,EAAA,EAAA5I,CAAA2I,EAHA,OAUV,UAPU3I,OAAA4I,EAAA,EAAA5I,CAAA2I,EAFM,YAUV,YARIA,GAWjBE,EAAoB7I,OAAOqB,QAAQqH,GAAmBI,OACjE,SAACC,EAADhJ,GAAA,IAAAwB,EAAAvB,OAAAyB,EAAA,EAAAzB,CAAAD,EAAA,GAAWiJ,EAAXzH,EAAA,GAAiB0H,EAAjB1H,EAAA,+VAAA2H,CAAA,GAAmCH,EAAnC/I,OAAA4I,EAAA,EAAA5I,CAAA,GAA6CiJ,EAASD,KACtD,IAgBWG,EAAkB,GAAAhI,OAbQ,CAzBN,UACD,SACD,SA4BM,CA3BP,OACE,SACD,QACD,OACM,cAsCvBiI,EAAkB,EAClBC,EAAmB,EAQnBC,EAAc,CAJA,QACC,SACC,uPCxC7B,IAWMC,EAAM,SAAAxJ,GAA0D,IAAAyJ,EAAvDC,EAAuD1J,EAAvD0J,IAAKlL,EAAkDwB,EAAlDxB,IAAKoD,EAA6C5B,EAA7C4B,MAAO+H,EAAsC3J,EAAtC2J,SAAUpL,EAA4ByB,EAA5BzB,MAAOJ,EAAqB6B,EAArB7B,KACzCyL,EAAQpL,EAAMkL,EACdG,EAAOC,KAAKC,OAAQnI,EAAQ8H,GAAOE,EAAS,KAAQ,GACpDI,EAAUF,KAAKC,OAAQJ,EAAWD,GAAOE,EAAS,KAAQ,GAG1DK,EAAa,GAAA7I,OAAMQ,EAAN,KAAAR,OAAe7C,GAC5B2L,EACJC,EAAA/J,EAAAgK,cAAA,QAAMC,UAAWC,IAAO/L,OACtB4L,EAAA/J,EAAAgK,cAAA,QACEC,UAAWE,IAAWD,IAAOxN,OAAR2M,EAAA,GAAAxJ,OAAA4I,EAAA,EAAA5I,CAAAwJ,EAClBa,IAAO9L,IAAMoD,GAASpD,GADJyB,OAAA4I,EAAA,EAAA5I,CAAAwJ,EAElBa,IAAO7L,aAAemD,EAAQ+H,GAFZF,KAKpB7H,GAEHuI,EAAA/J,EAAAgK,cAAA,QAAMC,UAAWC,IAAOE,UAAWjM,IAGvC,OACE4L,EAAA/J,EAAAgK,cAAA,OAAKC,UAAWC,IAAOrM,YACrBkM,EAAA/J,EAAAgK,cAAA,OAAKC,UAAWC,IAAOpM,aACpBC,GACCgM,EAAA/J,EAAAgK,cAAA,OACEC,UAAWC,IAAOnM,KAClBsM,IAAG,yBAAArJ,OAA2BjD,GAC9BuM,IAAKT,KAIXE,EAAA/J,EAAAgK,cAAA,OAAKC,UAAWC,IAAOlM,cACrB+L,EAAA/J,EAAAgK,cAAA,OAAKC,UAAWC,IAAOhM,UAAWqM,MAAO,CAAEC,MAAK,GAAAxJ,OAAKyI,EAAL,OAC7CK,GAEHC,EAAA/J,EAAAgK,cAAA,OAAKC,UAAWC,IAAOjM,QAASsM,MAAO,CAAEE,KAAI,GAAAzJ,OAAK4I,EAAL,WAyPtCc,EAnPU,SAAAtJ,GAAqC,IA0D1CI,EA9GDmJ,EAoDSjF,EAAkCtE,EAAlCsE,KAMpBkF,EAA2C,CAC/CC,MAAO,cACPC,UAPgD,CAChDC,OAAQ,eACRC,MAAO,aACPC,QAAS,gBAIiBvF,EAAKuE,WAC/BiB,OAAQ,gBACRC,OAAQ,YACRC,KAAM,SACNC,QAAS,iBACTC,KAAM,YACN5O,MAAO,gBAkBH6O,EAAcvC,EAAmBL,OACrC,SAAC6C,EAAOpB,GAAR,4VAAAqB,CAAA,GACKD,EADL3L,OAAA4I,EAAA,EAAA5I,CAAA,GAEGuK,EAAW1E,EAAKgG,cACbhG,EAAKgG,cAActB,GAAUuB,aAAaC,YAAYpK,MACtDkE,EAAKmG,gBAEX,IAIIC,EAAepC,KAAKJ,IAALnH,MAAAuH,KAAI7J,OAAAkM,EAAA,EAAAlM,CAAQA,OAAOmM,OAAOT,KACzCU,EAAoBvC,KAAKtL,IACG,GAAhCsL,KAAKC,MAAMmC,EAAe,IAAW,GACrC,GAEII,EAAexC,KAAKtL,IAAL+D,MAAAuH,KAAI7J,OAAAkM,EAAA,EAAAlM,CAAQA,OAAOmM,OAAOT,KACzCY,EACJzG,EAAKwG,cAA+C,GAA/BxC,KAAK0C,KAAKF,EAAe,IAE1CG,EAAe3C,KAAKC,MAAMjE,EAAKmG,cAE/BrC,EAAQ2C,EAAoBF,EAC5BxC,EACJC,KAAKC,OAAQ0C,EAAeJ,GAAqBzC,EAAS,KAAQ,GAS9D8C,EAA6B5G,EAAK6G,aACpC7G,EAAK6G,aAAaC,WAClB,EAEJ,OACEzC,EAAA/J,EAAAgK,cAAA,OACEC,UAAWE,IACTD,IAAO5N,iBACP4N,IAAM,SAAAlJ,OAAU0E,EAAKuE,aAEvBM,MAAO,CAAEkC,gBA1DK,SAAApL,GAAA,IAChBqL,EADgBrL,EAChBqL,IACAC,EAFgBtL,EAEhBsL,MACAC,EAHgBvL,EAGhBuL,KAHgB,aAAA5L,OAQL0L,EARK,KAAA1L,OAQE2L,EARF,KAAA3L,OAQW4L,EARX,KA0DYC,CAAUnH,EAAKoH,UAAUC,eAEnDhD,EAAA/J,EAAAgK,cAAA,OAAKC,UAAWC,IAAO3N,QACrBwN,EAAA/J,EAAAgK,cAAA,OACEC,UAAWC,IAAO1N,iBAClB6N,IAAG,yBAAArJ,OAA2B0E,EAAKoH,UAAUE,sBAC7C1C,IAAI,KAENP,EAAA/J,EAAAgK,cAAA,OAAKC,UAAWC,IAAOzN,OAvIZkO,EAuI6BjF,EAAKuE,WAtI9CgD,OAAO,EAAG,GAAGC,cAAgBvC,EAAKsC,OAAO,IAuIxClD,EAAA/J,EAAAgK,cAAA,OAAKC,UAAWC,IAAOxN,OACpB2P,EAAeC,IAGpBvC,EAAA/J,EAAAgK,cAAA,OAAKC,UAAWC,IAAOvN,SACrBoN,EAAA/J,EAAAgK,cAAA,OAAKC,UAAWC,IAAOrN,YACrBkN,EAAA/J,EAAAgK,cAAA,OAAKC,UAAWC,IAAOnN,cAAvB,8BACAgN,EAAA/J,EAAAgK,cAAA,OAAKC,UAAWC,IAAOiD,cAAed,IAEvC3G,EAAK6G,aACJxC,EAAA/J,EAAAgK,cAAAD,EAAA/J,EAAAoN,SAAA,KACErD,EAAA/J,EAAAgK,cAAA,OAAKC,UAAWC,IAAOrN,YACrBkN,EAAA/J,EAAAgK,cAAA,OAAKC,UAAWC,IAAOnN,cACrBgN,EAAA/J,EAAAgK,cAAA,OACEC,UAAWC,IAAOlN,kBAClBqN,IAAG,yBAAArJ,OAA2B0E,EAAK6G,aAAac,UAChD/C,IAAI,KAEL5E,EAAK6G,aAAa9P,KANrB,iBAQAsN,EAAA/J,EAAAgK,cAAA,OAAKC,UAAWC,IAAOjN,eA9CjBuE,EA+CMkE,EAAK6G,aAAaC,aA9C3B,EACX,IAAAxL,OAAWQ,GAEb,GAAAR,OAAUQ,KA+CFuI,EAAA/J,EAAAgK,cAAA,OAAKC,UAAWC,IAAOrN,YACrBkN,EAAA/J,EAAAgK,cAAA,OAAKC,UAAWC,IAAOnN,cAAvB,yBACAgN,EAAA/J,EAAAgK,cAAA,OAAKC,UAAWC,IAAOjN,cACpBoP,EAAeC,KAIpB,MAENvC,EAAA/J,EAAAgK,cAAA,OAAKC,UAAWC,IAAO1M,WACrBuM,EAAA/J,EAAAgK,cAAA,OAAKC,UAAWC,IAAOzM,YACrBsM,EAAA/J,EAAAgK,cAAA,OAAKC,UAAWC,IAAOoD,UAAWrB,GAClClC,EAAA/J,EAAAgK,cAAA,OAAKC,UAAWC,IAAOxM,YACvBqM,EAAA/J,EAAAgK,cAAA,OAAKC,UAAWC,IAAOqD,UAAWpB,IAEpCpC,EAAA/J,EAAAgK,cAAA,OAAKC,UAAWC,IAAOsD,MACpB3N,OAAOqB,QAAQqK,GAAapK,IAAI,SAAAqB,GAAuB,IAAAO,EAAAlD,OAAAyB,EAAA,EAAAzB,CAAA2C,EAAA,GAArB4H,EAAqBrH,EAAA,GAAXrG,EAAWqG,EAAA,GAChD0K,EAAW/H,EAAKgG,eAAiBhG,EAAKgG,cAActB,GAC1D,OACEL,EAAA/J,EAAAgK,cAAC0D,EAAD,CACEnM,IAAG,GAAAP,OAAK0E,EAAKiI,GAAV,KAAA3M,OAAgBoJ,GACnBd,IAAK2C,EACL7N,IAAK+N,EACL3K,MAAO9E,EACP6M,SAAU8C,EACVlO,MAAOyM,EAAcR,IAAaA,EAClCrM,KACE0P,GACAA,EAASG,gBACTH,EAASG,eAAeC,kBAAkB9P,UAMpDgM,EAAA/J,EAAAgK,cAAA,OAAKC,UAAWC,IAAOvM,YACrBoM,EAAA/J,EAAAgK,cAAA,OAAKC,UAAWC,IAAOtM,UAAW2M,MAAO,CAAEE,KAAI,GAAAzJ,OAAKyI,EAAL,OAC5C4C,KAKPtC,EAAA/J,EAAAgK,cAAA,OAAKC,UAAWC,IAAOtN,OACpB8I,EAAKoI,uBACNpI,EAAKoI,sBAAwBpI,EAAKmG,aAChC9B,EAAA/J,EAAAgK,cAAA,OAAKC,UAAWE,IAAWD,IAAOpN,KAAMoN,IAAOhN,gBAC7C6M,EAAA/J,EAAAgK,cAAA,kEACsD,IACnDtE,EAAKoI,uBAER/D,EAAA/J,EAAAgK,cAAA,OAAKC,UAAWC,IAAO5M,WACrByM,EAAA/J,EAAAgK,cAAA,OAAKC,UAAWC,IAAO3M,gBACrBwM,EAAA/J,EAAAgK,cAAA,0MAIyBtE,EAAKoI,sBAJ9B,KAMA/D,EAAA/J,EAAAgK,cAAA,+HAOJ,KAEHtE,EAAKoI,wBAA0BpI,EAAKmG,cACrCnG,EAAKmG,cAAgB,KACrBnG,EAAKmG,aAAe,IAClB9B,EAAA/J,EAAAgK,cAAA,OAAKC,UAAWE,IAAWD,IAAOpN,KAAMoN,IAAO/M,eAC7C4M,EAAA/J,EAAAgK,cAAA,mGAIAD,EAAA/J,EAAAgK,cAAA,OAAKC,UAAWC,IAAO5M,WACrByM,EAAA/J,EAAAgK,cAAA,OAAKC,UAAWC,IAAO3M,gBACrBwM,EAAA/J,EAAAgK,cAAA,2KAKAD,EAAA/J,EAAAgK,cAAA,mGAIAD,EAAA/J,EAAAgK,cAAA,mGAIAD,EAAA/J,EAAAgK,cAAA,0FAIAD,EAAA/J,EAAAgK,cAAA,sKAQJ,KAEHtE,EAAKoI,wBAA0BpI,EAAKmG,cACrCnG,EAAKmG,cAAgB,KACrBnG,EAAKmG,aAAe,IAClB9B,EAAA/J,EAAAgK,cAAA,OAAKC,UAAWE,IAAWD,IAAOpN,KAAMoN,IAAO9M,eAC7C2M,EAAA/J,EAAAgK,cAAA,mGAIAD,EAAA/J,EAAAgK,cAAA,OAAKC,UAAWC,IAAO5M,WACrByM,EAAA/J,EAAAgK,cAAA,wIAIAD,EAAA/J,EAAAgK,cAAA,0FAIAD,EAAA/J,EAAAgK,cAAA,qKAOF,yBCzRG+D,EAZQ,SAAAnO,GAAqC,IAAlChB,EAAkCgB,EAAlChB,OACxB,OACEmL,EAAA/J,EAAAgK,cAAA,OAAKC,UAAWC,IAAOzL,yBACrBsL,EAAA/J,EAAAgK,cAAA,OAAKC,UAAWC,IAAO5L,QACrByL,EAAA/J,EAAAgK,cAAA,OAAKC,UAAWC,IAAOxL,eACvBqL,EAAA/J,EAAAgK,cAAA,OAAKC,UAAWC,IAAOvL,eACvBoL,EAAA/J,EAAAgK,cAAA,OAAKC,UAAWC,IAAOtL,QAASA,0BCmCzBoP,GAtCU,SAAApO,GAAmD,IAAhDqO,EAAgDrO,EAAhDqO,mBACpBlI,EAAqB0B,IAE3B,IAAK1B,EACH,OAAO,KAGT,GAAkC,IAA9BA,EAAmBE,OACrB,OAAO8D,EAAA/J,EAAAgK,cAAA,sCAGT,IAAMkE,EAAuC,CAC3CC,EAAG,OACHC,EAAG,MACHC,EAAG,QACHC,EAAG,YAGL,OACEvE,EAAA/J,EAAAgK,cAAA,OAAKC,UAAWC,KAAOqE,kBACpBxI,EAAmB5E,IAAI,SAAAqN,GACtB,OACEzE,EAAA/J,EAAAgK,cAAA,OACEzI,IAAKiN,EAAEtJ,aACP+E,UAAWE,IACTD,KAAOlC,WACPkC,KAAM,YAAAlJ,OAAakN,EAAUM,EAAEvJ,mBAEjCwJ,QAAS,kBAAMR,EAAmBO,KAEjCA,EAAEE,4qBCXf,ICVIC,GDUEC,GAAiB,SAACC,GAAD,OACrBC,KAAUD,EAAa,SAAAE,GAAI,OAAIA,EAAKpD,aAAaC,YAAYpK,SAEzDwN,GAAkB,SAACzD,GAAD,OACtB7B,KAAKC,MACH9J,OAAOmM,OAAOT,GAAa5C,OAAO,SAACsG,EAAKvS,GAAN,OAAgBuS,EAAMvS,GAAO,GAC7DmD,OAAO2D,KAAK+E,GAAmBtC,SAG/BiJ,GAAa,SAGjBC,GAEA,OAAOtP,OAAOmM,OAAOmD,GAAkBxG,OACrC,SAACyG,EAAUC,GAAX,OAA8BD,EAASpO,OAAOqO,EAAeC,QAC7D,KAIEC,GAA8B,SAClCR,EACAjC,GAEA,QAAIiC,EAAKpD,aAAa6D,WAGsB,KAAxCT,EAAKpD,aAAa8D,qBAGlBV,EAAKpD,aAAa+D,mBAAqB5C,EAAU6C,sBJZzB,IIgB1BZ,EAAKnB,eAAegC,WACpBb,EAAKnB,eAAegC,YAAc9C,EAAU8C,aAQ1CC,GAAqB,eAAAjQ,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAC,EAC5B4P,GAD4B,IAAAC,EAAA/Q,EAAAgR,EAAAC,EAAAC,EAAA,OAAAnQ,EAAAC,EAAAQ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAGNmP,EAHM,WAGtBC,EAHsBtP,EAAAkB,OAIXoO,EAAQlL,UAAakL,EAAQlL,SAAS7F,WAJ3B,CAAAyB,EAAAE,KAAA,eAAAF,EAAAoB,OAAA,sBAOtB7C,EAAa+Q,EAAQlL,SAAS7F,WAAW0G,MAPnB,CAAAjF,EAAAE,KAAA,gBAUpBqP,EAAwB,SAACrC,GAC7B,IAAMb,EAAY9N,EAAW2O,GAE7B,MAAO,CACLb,YACA7C,UAHgBd,EAAY2D,EAAU8C,WAItCjC,KACA9B,aAAciB,EAAUqD,QAItBF,EAAepQ,OAAO2D,KAAKxE,GAC3BkR,EAAgBD,EAAa9O,IAAI,SAAAwM,GAAE,OAAIqC,EAAsBrC,KAtBzClN,EAAAoB,OAAA,SAuBnBqO,GAvBmB,yBAAAzP,EAAAwB,SAAA/B,MAAH,gBAAAgC,GAAA,OAAAtC,EAAAuC,MAAAC,KAAAC,YAAA,GA2Bd+N,GAAgB,eAAAhP,EAAAvB,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAA+C,EAC9BqN,EACAC,GAF8B,IAAAC,EAAAC,EAAAC,EAAAX,EAAAY,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAhO,EAAAiO,EAAAC,EAAAnB,EAAAC,EAAAC,EAAAkB,EAAA/O,UAAA,OAAAtC,EAAAC,EAAAQ,KAAA,SAAA4C,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,cAG9B4P,EAH8Ba,EAAAnL,OAAA,QAAAlB,IAAAqM,EAAA,IAAAA,EAAA,GAAAhO,EAAA1C,KAAA,EAAA0C,EAAAzC,KAAA,EAMLsH,IANK,UAAA7E,EAAAzB,KAAA,CAAAyB,EAAAzC,KAAA,eAAAyC,EAAAvB,OAAA,oBAWtB2O,EAAkBzM,IAExBuM,GAA2B,GAErBG,EAAoB3I,IAfE,CAAA1E,EAAAzC,KAAA,gBAAAyC,EAAAvB,OAAA,yBAuBxB6O,GAA8B,EAE9BH,INMNtL,EMJMwL,EAAkBxL,eNKxBC,EMJMuL,EAAkBvL,aNMxBX,EAAGC,MAAM,CACPC,SAAU,iBACVC,OAAQ,2BMVNoL,ENYG3K,qBAAWxF,EAAmB,CACnCyF,WAAY,CACV,IACA,KAEFC,oBAAqBH,EACrBD,oBMdsBoM,MAAM,cAGpBV,EAA4Bd,GAChCC,GACAuB,MAAM,SAAAzJ,MAGR/H,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAC,SAAAwC,IAAA,IAAA6O,EAAA,OAAAvR,EAAAC,EAAAQ,KAAA,SAAAmC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,cAAAgC,EAAAhC,KAAA,EACkCgQ,EADlC,QACOW,EADP3O,EAAAhB,OAE2B+O,GACxBL,EAAiBiB,GAHpB,wBAAA3O,EAAAV,SAAAQ,KAAD5C,IAtC0BuD,EAAAzC,KAAA,GA8CFqE,EACxByL,EAAkBxL,eAClBwL,EAAkBvL,cAhDQ,WA8CtB0L,EA9CsBxN,EAAAzB,KAkD5B2O,GAA2B,GAGxBM,GACAA,EAAY/L,UACZ+L,EAAY/L,SAAS7F,YACrB4R,EAAY/L,SAAS7F,WAAW0G,MAChCkL,EAAY/L,SAAS0M,oBACrBX,EAAY/L,SAAS0M,mBAAmB7L,MACxCkL,EAAY/L,SAASkM,sBACrBH,EAAY/L,SAASkM,qBAAqBrL,MAC1CkL,EAAY/L,SAAS2M,kBACrBZ,EAAY/L,SAAS2M,iBAAiB9L,MACtCkL,EAAY/L,SAAS4M,gBACrBb,EAAY/L,SAAS4M,eAAeC,WACpCd,EAAY/L,SAAS4M,eAAeC,UAAUhM,KAjErB,CAAAtC,EAAAzC,KAAA,gBAAAyC,EAAAvB,OAAA,yBAsEtB7C,EAAa4R,EAAY/L,SAAS7F,WAAW0G,KAC7CoL,EAAsBF,EAAY/L,SAAS0M,mBAAmB7L,KAC9DqL,EAAuBH,EAAY/L,SAASkM,qBAAqBrL,KACjEsL,EAAqBJ,EAAY/L,SAAS2M,iBAAiB9L,KAC3DuL,EAAgBL,EAAY/L,SAAS4M,eAAeC,UAAUhM,KA1ExCtC,EAAAzC,KAAA,GA4EL6P,EA5EK,WA4EtBvN,EA5EsBG,EAAAzB,KAAA,CAAAyB,EAAAzC,KAAA,gBAAAyC,EAAAvB,OAAA,kBAkFtBqP,EAAoBhC,GAAW6B,GAClC/P,OAAOkO,GAAW4B,IAClB9P,OAAOgQ,EAAmB1B,OACvB6B,EAAsBD,EAAkBS,OAAO,SAAAC,GACnD,IAAMhE,EACJgE,EAAEC,UAAY5O,EAAS6O,+BAA+BF,EAAEC,UAC1D,OAAOjE,GAAkBA,EAAemE,WAAa7I,IAGjD8G,EAAwB,SAACrC,GAC7B,IAAMb,EAAY9N,EAAW2O,GACvB1D,EAAYd,EAAY2D,EAAU8C,WAElCoC,EAAoB,SACxB1C,GADwB,OAGxBA,EACGnO,IAAI,SAAA4N,GAMH,OAAOkD,GAAA,GACFlD,EADL,CAEEpD,aAPmBoD,EAAKmD,eACtBjB,EAAclC,EAAKmD,qBACnBnN,EAMF6I,eAJA3K,EAAS6O,+BAA+B/C,EAAK8C,cAOhDF,OACC,SAAAC,GAAC,OACCA,EAAEjG,cACFiG,EAAEhE,gBACF,CAAC3E,EAAiBC,GAAkBxF,SAClCkO,EAAEhE,eAAemE,YAGtB5Q,IAAI,SAAAyQ,GAAC,OAAAK,GAAA,GACDL,EADC,CAEJjG,aAAciG,EAAEjG,aAChBiC,eAAgBgE,EAAEhE,mBAEnBzM,IAAI,SAAAyQ,GAAC,OAAAK,GAAA,GACDL,EADC,CAEJxH,SACE1B,EAAkBkJ,EAAEhE,eAAeuE,UAAUC,oBAEhDT,OAAO,SAAAC,GAAC,OAAIrC,GAA4BqC,EAAG9E,MAE1CuC,EAAiB2C,EACrBjB,EAAqBpD,GAAI2B,MACtBtO,OAAO8P,EAAoBnD,GAAI2B,OAC/BtO,OAAOmQ,IAENkB,EAAuBL,EAC3BhB,EAAmB1B,OACnBqC,OACA,SAAAC,GAAC,OJ/LqB,IIgMpBA,EAAEhE,eAAegC,WACjBgC,EAAEhE,eAAegC,YAAc9C,EAAU8C,YAGvCR,EAAWC,EAAerO,OAAOqR,GAEjCC,EAAe,SAACvD,GACpB,IAAKA,IAASA,EAAKpD,eAAiBoD,EAAKpD,aAAaC,YACpD,OAAO,EAET,IAAI2G,EAAQxD,EAAKpD,aAAaC,YAAYpK,MAO1C,OANIuN,EAAKpD,aAAa6G,aACpBD,GAAS,IAEW,IAAlBxD,EAAKzP,WACPiT,GAAS,KAEJA,GAGHE,EAAgB,SAAC1D,GAAD,OACpBA,EAAKnB,eAAe8E,eAAeC,aAG/B9D,EAAc+D,KAAQxD,EAAU,SAAAwC,GAAC,OAAIA,EAAExH,WAEzCsB,EAAgBoD,KAClBD,EACA,SAAAS,GAAK,OAAIuD,KAAMvD,EAAOgD,KAGlBQ,EAAuBF,KAC3B/S,OAAOmM,OAAON,GAAeiG,OAAOc,GACpCA,GAGFM,KAAMD,EAAsB,SAAAE,GAC1B,KAAIA,EAAoB/M,QAAU,GAAlC,CAIA,IAAMgN,EAAsC,GA8B5C,GA5BAD,EAAoBvP,QAAQ,SAAAsL,GAC1B,IAAMmE,EAAaF,EAAoBrB,OACrC,SAAAwB,GAAS,OAAIA,IAAcpE,IAEzBqE,GAAqB,EACnBC,EAAWpB,GAAA,GAAQvG,GACzBwH,EAAWzP,QAAQ,SAAA0P,GAEjB,IAAMG,EAAazE,EAAYsE,EAAU/I,UAAUuH,OACjD,SAAAC,GAAC,OAAKa,EAAcb,KAElB0B,EAAWrN,OAAS,EAEtBoN,EAAYF,EAAU/I,UAAYyI,KAChCS,EACAhB,GAIFc,GAAqB,IAGrBA,GACFH,EAAsBM,KAAKF,KAK3BJ,EAAsBhN,OAAS,EAAG,CACpC,IAAMuN,EAAkBX,KAAMI,EAAuB,SAAAI,GAAW,OAC9DI,KAAM5T,OAAOmM,OAAOqH,GAAcf,KAEpC5G,EAAgB8H,MAIpB,IAOIjH,EAPEhB,EAAcqD,GAAelD,GAC7BG,EAAemD,GAAgBzD,GAE/BmI,EAAwB7T,OAAOmM,OAAO8E,GACzC6C,QAAQ,SAAA/B,GAAC,OAAIA,EAAEtC,QACfsE,KAAK,SAAAhC,GAAC,OJ3Q2B,aI2QvBA,EAAEC,WAGf,GAAI6B,GAAyBA,EAAsBxB,eAAgB,CACjE,IAAM2B,EAAqB5Q,EAAS6O,+BAClC4B,EAAsB7B,UAKxBtF,EAAe,CACbC,WAJuByE,EACvByC,EAAsBxB,gBAGOtG,YAAYpK,MACzC6L,SAAUwG,EAAmBhG,kBAAkB9P,KAC/CtB,KAAMoX,EAAmBhG,kBAAkBpR,MAK/C,IADA,IAAMqX,EAAoB7B,GAAA,GAAQ1G,GAtJyBwI,EAAA,WA4JzD,IAAMC,EAA4BhF,GAAgB8E,GAClDjU,OAAO2D,KAAKsQ,GAAsBrQ,QAChC,SAAAoF,GAAI,OACDiL,EAAqBjL,GAAQa,KAAKtL,IACjC,IACAsL,KAAKtL,IAAI4V,EAA2BF,EAAqBjL,QAT/DhJ,OAAOmM,OAAO8H,GAAsBG,KAClC,SAAAvX,GAAK,OAAIA,EAAQsS,GAAgB8E,IAAyBpX,EAAQ,OAEpEqX,IAUF,IAAMjG,EAAwBkB,GAAgB8E,GAE9C,MAAO,CACLvH,eACAO,YACA7C,YACA0D,KACA9B,eACAiC,wBACAgG,uBACApI,kBAIEuE,EAAepQ,OAAO2D,KAAKxE,GAC3BkR,EAAgBD,EAAa9O,IAAI,SAAAwM,GAAE,OAAIqC,EAAsBrC,KACnE+C,GAA8B,EAC9BL,EAAiBH,GAjRW9M,EAAAzC,KAAA,wBAAAyC,EAAA1C,KAAA,GAAA0C,EAAAtB,GAAAsB,EAAA,SAmR5BrB,QAAQC,MAAR,6CAAAoB,EAAAtB,IACAwO,GAA2B,GApRClN,EAAAvB,OAAA,mCAAAuB,EAAAnB,ON8BD,IAC7BgD,EACAC,GMhC8BlC,EAAA,kBAAH,gBAAAc,EAAAoQ,GAAA,OAAA9S,EAAAe,MAAAC,KAAAC,YAAA,gCC4BdxD,GA1GH,WAAM,IAAAsV,EACgBC,mBAAkB9M,KADlC+M,EAAAxU,OAAAyB,EAAA,EAAAzB,CAAAsU,EAAA,GACTG,EADSD,EAAA,GACCE,EADDF,EAAA,GAAAG,EAEqBJ,oBAAkB,GAFvCK,EAAA5U,OAAAyB,EAAA,EAAAzB,CAAA2U,EAAA,GAETE,EAFSD,EAAA,GAEKE,EAFLF,EAAA,GAAAG,EAG0BR,qBN8JjCtM,KMjKO+M,EAAAhV,OAAAyB,EAAA,EAAAzB,CAAA+U,EAAA,GAGTE,EAHSD,EAAA,GAGME,EAHNF,EAAA,GAAAG,EAM8BZ,oBAAkB,GANhDa,EAAApV,OAAAyB,EAAA,EAAAzB,CAAAmV,EAAA,GAMTE,EANSD,EAAA,GAMQE,EANRF,EAAA,GAAAG,EAO6BhB,oBAAkB,GAP/CiB,EAAAxV,OAAAyB,EAAA,EAAAzB,CAAAuV,EAAA,GAOTE,EAPSD,EAAA,GAOSE,EAPTF,EAAA,GAAAG,EAQ8CpB,oBAE5D,GAVcqB,EAAA5V,OAAAyB,EAAA,EAAAzB,CAAA2V,EAAA,GAQTE,EARSD,EAAA,GAQgBnF,EARhBmF,EAAA,GAAAE,EAW0BvB,wBAExCrP,GAbc6Q,EAAA/V,OAAAyB,EAAA,EAAAzB,CAAA8V,EAAA,GAWTzF,EAXS0F,EAAA,GAWMvF,EAXNuF,EAAA,GAehBC,oBAAU,WASHvB,GARO,eAAA1U,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAC,IAAA,OAAAH,EAAAC,EAAAQ,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACYsH,IADZ,OAAAxH,EAAAkB,KAGX4S,GAAY,GAEZI,GAAa,GALF,wBAAAlU,EAAAwB,SAAA/B,MAAH,yBAAAN,EAAAuC,MAAAC,KAAAC,YAAA,EASVyT,KAIJD,oBAAU,WACRhW,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAC,SAAAwC,IAAA,OAAA1C,EAAAC,EAAAQ,KAAA,SAAAmC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,cAAAgC,EAAAjC,KAAA,EAAAiC,EAAAhC,KAAA,EAESoD,IAFT,OAGGoR,GAAmB,GAHtBxS,EAAAhC,KAAA,gBAAAgC,EAAAjC,KAAA,EAAAiC,EAAAb,GAAAa,EAAA,SAKGZ,QAAQC,MAAMW,EAAAb,GAAE+F,SAChB0N,GAAiB,GANpB,yBAAA5S,EAAAV,SAAAQ,EAAA,gBAAD5C,KAWFgW,oBAAU,WACR,IAAME,EAAqB,eAACxF,EAADlO,UAAA4D,OAAA,QAAAlB,IAAA1C,UAAA,IAAAA,UAAA,UACzB+N,GACEC,EACAC,EACAC,IAEA+D,GAAYQ,IAAkBY,IAC3B/G,KACHA,GAA4BqH,YAAYD,EAAoB,KAC5DA,GAAmB,MAGtB,CAACzB,EAAUQ,EAAeI,EAAiBQ,IAE9C,IAAMO,EAAqB,SAACjO,GAC1BpB,EAA6BoB,GAC7B+M,GAAiB,IAGfnW,EAAS,GAqBb,OApBI8V,EACF9V,EAAS,mDACA0W,EACT1W,EAAS,sDACC0V,EAEAQ,EAEAI,EAEAhF,GAA0C,IAAzBA,EAAcjK,SAEvCrH,EADE8W,EACO,6BAEA,qBALX9W,EAAS,oCAFTA,EAAS,4CAFTA,EAAS,oBAaVS,OAAe6Q,cAAgBA,EAE5BA,GAAiBA,EAAcjK,OAAS,EAExC8D,EAAA/J,EAAAgK,cAAA,OAAKC,UAAWC,KAAOrL,KACrBkL,EAAA/J,EAAAgK,cAACkM,GAAD,CAAkBjI,mBAAoBgI,IACtClM,EAAA/J,EAAAgK,cAAA,OAAKC,UAAWC,KAAOnL,qBACrBgL,EAAA/J,EAAAgK,cAAA,OAAKC,UAAWC,KAAOlL,YACpBkR,EAAc/O,IAAI,SAAAgV,GAAC,OAClBpM,EAAA/J,EAAAgK,cAACoM,EAAD,CAAkB7U,IAAK4U,EAAExI,GAAIjI,KAAMyQ,QAIxCvX,GAAUmL,EAAA/J,EAAAgK,cAACqM,EAAD,CAAgBzX,OAAQA,KAMvCmL,EAAA/J,EAAAgK,cAAA,OAAKC,UAAWC,KAAOrL,KACrBkL,EAAA/J,EAAAgK,cAACqM,EAAD,CAAgBzX,OAAQA,IACxBmL,EAAA/J,EAAAgK,cAACkM,GAAD,CAAkBjI,mBAAoBgI,aC/GxBK,QACW,cAA7BjX,OAAOC,SAASiX,UAEe,UAA7BlX,OAAOC,SAASiX,UAEhBlX,OAAOC,SAASiX,SAASC,MACvB,2DCZNC,IAASC,OAAO3M,EAAA/J,EAAAgK,cAAC2M,GAAD,MAASC,SAASC,eAAe,SDmI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,mCE1InB/a,EAAAC,QAAA,CAAkBkS,iBAAA,2CAAAvG,WAAA,qCAAAoP,cAAA,wCAAAC,aAAA,uCAAAC,eAAA,yCAAAC,kBAAA","file":"static/js/main.0d997548.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"characterDisplay\":\"CharacterDisplay_characterDisplay__3LJ6S\",\"header\":\"CharacterDisplay_header__16L7B\",\"emblemBackground\":\"CharacterDisplay_emblemBackground__2jqgs\",\"name\":\"CharacterDisplay_name__3Aw12\",\"power\":\"CharacterDisplay_power__EMI5z\",\"details\":\"CharacterDisplay_details__MVQ9j\",\"hints\":\"CharacterDisplay_hints__rOZHG\",\"detailsRow\":\"CharacterDisplay_detailsRow__3ii9H\",\"hint\":\"CharacterDisplay_hint__2nso3\",\"detailsLabel\":\"CharacterDisplay_detailsLabel__XTgo_\",\"detailsInlineIcon\":\"CharacterDisplay_detailsInlineIcon__3xwt6\",\"detailsValue\":\"CharacterDisplay_detailsValue__339jn\",\"worldDropHint\":\"CharacterDisplay_worldDropHint__2XVRV\",\"powerfulHint\":\"CharacterDisplay_powerfulHint__11Z0S\",\"pinnacleHint\":\"CharacterDisplay_pinnacleHint__1gmbO\",\"separator\":\"CharacterDisplay_separator__2mJV4\",\"hintExtra\":\"CharacterDisplay_hintExtra__1wFHf\",\"hintExtraInner\":\"CharacterDisplay_hintExtraInner__2-Edw\",\"powerBars\":\"CharacterDisplay_powerBars__1ncJP\",\"powerRange\":\"CharacterDisplay_powerRange__lEkeP\",\"rangeLine\":\"CharacterDisplay_rangeLine__14_WH\",\"powerLabel\":\"CharacterDisplay_powerLabel__36Pf6\",\"indicator\":\"CharacterDisplay_indicator__2jPQU\",\"barWrapper\":\"CharacterDisplay_barWrapper__3qGoQ\",\"iconWrapper\":\"CharacterDisplay_iconWrapper__1CafS\",\"icon\":\"CharacterDisplay_icon__3v2oB\",\"barContainer\":\"CharacterDisplay_barContainer__btRVR\",\"barLine\":\"CharacterDisplay_barLine__V3SXF\",\"filledBar\":\"CharacterDisplay_filledBar__2r5Ry\",\"label\":\"CharacterDisplay_label__2J0W5\",\"max\":\"CharacterDisplay_max__1foXT\",\"belowAverage\":\"CharacterDisplay_belowAverage__1jEj1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"anchor\":\"LoadingSpinner_anchor__3S34b\",\"spinner\":\"LoadingSpinner_spinner__2W4P9\",\"spin\":\"LoadingSpinner_spin__1qIkq\",\"loadingSpinnerContainer\":\"LoadingSpinner_loadingSpinnerContainer__2OZbs\",\"spinnerLarge\":\"LoadingSpinner_spinnerLarge__3zeAT\",\"spinnerSmall\":\"LoadingSpinner_spinnerSmall__25yaq\",\"status\":\"LoadingSpinner_status__33FO4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__4Taua\",\"loadingContainer\":\"App_loadingContainer__1uaFP\",\"charactersContainer\":\"App_charactersContainer__ht0bh\",\"characters\":\"App_characters__1pRqJ\",\"loadingStatus\":\"App_loadingStatus__34OS9\"};","import ReactGA from 'react-ga'\r\n\r\nReactGA.initialize('UA-149614480-1')\r\nReactGA.pageview(window.location.pathname + window.location.search);\r\n\r\nexport default ReactGA","import { get, set } from \"idb-keyval\";\n\nimport {\n  DestinyInventoryItemDefinition,\n  DestinyManifest,\n  getDestinyManifest,\n  getProfile\n} from \"bungie-api-ts/destiny2\";\nimport { HttpClientConfig } from \"bungie-api-ts/http\";\nimport { BUNGIE_API_KEY, getAccessToken } from \"./bungie-auth\";\nimport ga from \"./ga\";\n\nexport const bungieAuthedFetch = async (config: HttpClientConfig) => {\n  try {\n    const accessToken = getAccessToken();\n    const headers: { [key: string]: string } = { \"x-api-key\": BUNGIE_API_KEY };\n    if (accessToken) {\n      headers.Authorization = `Bearer ${accessToken}`;\n    }\n    const url = `${config.url}${\n      config.params\n        ? \"?\" +\n          Object.entries(config.params).map(\n            ([key, value]) =>\n              `${encodeURIComponent(key)}=${encodeURIComponent(\n                value as string\n              )}`\n          )\n        : \"\"\n    }`;\n    const response = await fetch(url, { headers });\n    return await response.json();\n  } catch (e) {\n    console.error(e);\n    return {};\n  }\n};\n\nconst MANIFEST_VERSION_KEY = \"MANIFEST_VERSION\";\nconst MANIFEST_IDB_KEY = \"MANIFEST_DATA\";\ninterface ManifestData {\n  DestinyInventoryItemDefinition: {\n    [key: string]: DestinyInventoryItemDefinition | undefined;\n  };\n}\nconst manifestPropertyWhitelist = [\"DestinyInventoryItemDefinition\"];\n\nconst getCachedManifestData = async () => {\n  console.log(\"Loading manifest data from IDB\");\n  const manifestData = await get(MANIFEST_IDB_KEY);\n  console.log(\"Finished loading manifest data from IDB\");\n  return manifestData as ManifestData;\n};\n\nconst getRemoteManifestData = async (manifest: DestinyManifest) => {\n  if (!manifest) {\n    throw Error(\"No manifest!\");\n  }\n  const version = manifest.version;\n  console.log(\"Fetching fresh manifest data\");\n  const manifestDataResponse = await fetch(\n    `https://www.bungie.net${manifest.jsonWorldContentPaths.en}`\n  );\n  const manifestData = await manifestDataResponse.json();\n  console.log(\"Pruning manifest data\");\n  Object.keys(manifestData).forEach(key => {\n    if (!manifestPropertyWhitelist.includes(key)) {\n      delete manifestData[key];\n    }\n  });\n  console.log(\"Storing manifest data in IDB\");\n  await set(MANIFEST_IDB_KEY, manifestData);\n  localStorage.setItem(MANIFEST_VERSION_KEY, version);\n  return manifestData;\n};\n\nlet cachedManifestData: ManifestData | undefined;\nlet getManifestPromise: Promise<ManifestData> | undefined;\n\nexport const getManifest = async (): Promise<ManifestData> => {\n  if (!getManifestPromise) {\n    getManifestPromise = (async () => {\n      ga.event({\n        category: \"Data\",\n        action: \"Attempt load manifest\"\n      });\n      const manifest = await getDestinyManifest(bungieAuthedFetch);\n      const localStorageManifestVersion = localStorage.getItem(\n        MANIFEST_VERSION_KEY\n      );\n      if (\n        manifest &&\n        manifest.Response &&\n        manifest.Response.version === localStorageManifestVersion &&\n        !window.location.search.includes(\"updateManifest\")\n      ) {\n        if (!cachedManifestData) {\n          cachedManifestData = await getCachedManifestData();\n        }\n        return cachedManifestData;\n      }\n      if (\n        manifest &&\n        manifest.ErrorStatus &&\n        manifest.ErrorStatus !== \"Success\"\n      ) {\n        ga.event({\n          category: \"Errors\",\n          action: `Error status \"${manifest.ErrorStatus}\" returned from manifest request`\n        });\n        throw Error(\n          `Error status \"${manifest.ErrorStatus}\" returned from manifest request`\n        );\n      }\n      if (!manifest || !manifest.Response) {\n        throw Error(\"No manifest received!\");\n      }\n      cachedManifestData = undefined;\n      ga.event({\n        category: \"Data\",\n        action: \"Fetch remote manifest\"\n      });\n      const freshManifestData = await getRemoteManifestData(manifest.Response);\n      cachedManifestData = freshManifestData;\n      return freshManifestData;\n    })();\n  }\n  return getManifestPromise;\n};\n\nexport const getBasicProfile = (\n  membershipType: number,\n  membershipId: string\n) => {\n  ga.event({\n    category: \"Character Data\",\n    action: \"Fetch minimal profile\"\n  });\n  return getProfile(bungieAuthedFetch, {\n    components: [\n      200, // DestinyComponentType.Characters,\n      205 // DestinyComponentType.CharacterEquipment,\n    ],\n    destinyMembershipId: membershipId,\n    membershipType\n  });\n};\n\nexport const getFullProfile = (\n  membershipType: number,\n  membershipId: string\n) => {\n  ga.event({\n    category: \"Character Data\",\n    action: \"Fetch full profile\"\n  });\n  return getProfile(bungieAuthedFetch, {\n    components: [\n      200, // DestinyComponentType.Characters,\n      201, // DestinyComponentType.CharacterInventories,\n      205, // DestinyComponentType.CharacterEquipment,\n      102, // DestinyComponentType.ProfileInventories,\n      300 // DestinyComponentType.ItemInstances,\n    ],\n    destinyMembershipId: membershipId,\n    membershipType\n  });\n};\n","import { getMembershipDataById, UserInfoCard } from \"bungie-api-ts/user\";\r\nimport { bungieAuthedFetch } from \"./bungie-api\";\r\nimport ga from \"./ga\";\r\n\r\nconst isDev = process.env.NODE_ENV === \"development\";\r\nexport const BUNGIE_API_KEY = isDev\r\n  ? \"f7f184669f044a89b560fc5f71ed5d60\"\r\n  : \"d94be1e34632448fafdaf77c7afbb501\";\r\nconst BUNGIE_OAUTH_AUTHORIZE_URL = \"https://www.bungie.net/en/OAuth/Authorize\";\r\nconst BUNGIE_OAUTH_CLIENT_ID = isDev ? \"26087\" : \"27213\";\r\nconst BUNGIE_OAUTH_TOKEN_URL =\r\n  \"https://www.bungie.net/platform/app/oauth/token/\";\r\n\r\nconst ACCESS_TOKEN_STORAGE_KEY = \"bungieAccessToken\";\r\nconst ACCESS_TOKEN_EXPIRY_STORAGE_KEY = \"bungieAccessTokenExpiryTime\";\r\nconst BUNGIE_MEMBERSHIP_ID_STORAGE_KEY = \"bungieMembershipId\";\r\nconst DESTINY_MEMBERSHIPS_STORAGE_KEY = \"destinyMemberships\";\r\nconst DESTINY_MEMBERSHIP_STORAGE_KEY = \"destinyMembership\";\r\n\r\nconst clearStorage = () => {\r\n  localStorage.removeItem(ACCESS_TOKEN_STORAGE_KEY);\r\n  localStorage.removeItem(ACCESS_TOKEN_EXPIRY_STORAGE_KEY);\r\n  localStorage.removeItem(BUNGIE_MEMBERSHIP_ID_STORAGE_KEY);\r\n  localStorage.removeItem(DESTINY_MEMBERSHIPS_STORAGE_KEY);\r\n  localStorage.removeItem(DESTINY_MEMBERSHIP_STORAGE_KEY);\r\n};\r\n\r\nconst getAuthUrl = () =>\r\n  `${BUNGIE_OAUTH_AUTHORIZE_URL}?response_type=code&client_id=${BUNGIE_OAUTH_CLIENT_ID}`;\r\n\r\nconst redirectToAuth = () => {\r\n  console.log(\"Redirect to auth\");\r\n  clearStorage();\r\n  ga.event({\r\n    category: \"Auth\",\r\n    action: \"Redirect to oauth\"\r\n  });\r\n  window.location.replace(getAuthUrl());\r\n};\r\n\r\nconst handleTokenResponse = async (\r\n  tokenResponse: Response,\r\n  redirect: boolean = false\r\n) => {\r\n  console.log(\"handleTokenResponse\");\r\n  clearStorage();\r\n  if (tokenResponse.status === 200) {\r\n    const data = await tokenResponse.json();\r\n    const accessToken = data.access_token as string;\r\n    const tokenDuration = data.expires_in as number;\r\n    const expiryTime = Date.now() + tokenDuration * 1000;\r\n    const bungieMembershipId = data.membership_id as string;\r\n\r\n    localStorage.setItem(ACCESS_TOKEN_STORAGE_KEY, accessToken);\r\n    localStorage.setItem(\r\n      ACCESS_TOKEN_EXPIRY_STORAGE_KEY,\r\n      expiryTime.toString()\r\n    );\r\n    localStorage.setItem(BUNGIE_MEMBERSHIP_ID_STORAGE_KEY, bungieMembershipId);\r\n\r\n    // 254 = all memberships\r\n    const destinyMembershipsResponse = await getMembershipDataById(\r\n      bungieAuthedFetch,\r\n      { membershipId: bungieMembershipId, membershipType: 254 }\r\n    );\r\n\r\n    if (\r\n      !destinyMembershipsResponse ||\r\n      !destinyMembershipsResponse.Response ||\r\n      (destinyMembershipsResponse.ErrorStatus &&\r\n        destinyMembershipsResponse.ErrorStatus !== \"Success\")\r\n    ) {\r\n      ga.event({\r\n        category: \"Errors\",\r\n        action: `Destiny membership fetch error, status: ${destinyMembershipsResponse.ErrorStatus}`\r\n      });\r\n      return {\r\n        authSuccess: false,\r\n        error: `Status code ${destinyMembershipsResponse.ErrorStatus} from memberships endpoint`\r\n      };\r\n    }\r\n\r\n    const destinyMemberships =\r\n      destinyMembershipsResponse.Response.destinyMemberships;\r\n    localStorage.setItem(\r\n      DESTINY_MEMBERSHIPS_STORAGE_KEY,\r\n      JSON.stringify(destinyMemberships)\r\n    );\r\n\r\n    // If there is only one membership, select it automatically\r\n    if (destinyMemberships.length === 1) {\r\n      setSelectedDestinyMembership(destinyMemberships[0]);\r\n    }\r\n\r\n    return { accessToken, authSuccess: true };\r\n  } else {\r\n    if (tokenResponse.status !== 200) {\r\n      return {\r\n        authSuccess: false,\r\n        error: `Status code ${tokenResponse.status} from authentication request`\r\n      };\r\n    }\r\n    // return redirectToAuth()\r\n  }\r\n};\r\n\r\nconst fetchAuthToken = async (authCode: string) => {\r\n  console.log(\"fetchAuthToken\", authCode);\r\n  clearStorage();\r\n  ga.event({\r\n    category: \"Auth\",\r\n    action: \"Oauth token request\"\r\n  });\r\n  const tokenResponse = await fetch(BUNGIE_OAUTH_TOKEN_URL, {\r\n    body: `grant_type=authorization_code&code=${authCode}&client_id=${BUNGIE_OAUTH_CLIENT_ID}`,\r\n    cache: \"no-cache\",\r\n    credentials: \"include\",\r\n    headers: {\r\n      \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n    },\r\n    method: \"POST\",\r\n    redirect: \"follow\",\r\n    referrer: \"no-referrer\"\r\n  });\r\n  return await handleTokenResponse(tokenResponse);\r\n};\r\n\r\nexport const getAccessToken = () => {\r\n  return localStorage.getItem(ACCESS_TOKEN_STORAGE_KEY);\r\n};\r\n\r\nexport const hasValidAuth = () => {\r\n  const accessToken = getAccessToken();\r\n  const accessTokenExpiryTime = parseInt(\r\n    localStorage.getItem(ACCESS_TOKEN_EXPIRY_STORAGE_KEY) || \"-1\",\r\n    10\r\n  );\r\n  const bungieMembershipId = localStorage.getItem(\r\n    BUNGIE_MEMBERSHIP_ID_STORAGE_KEY\r\n  );\r\n  if (\r\n    !accessToken ||\r\n    Date.now() >= accessTokenExpiryTime ||\r\n    !bungieMembershipId\r\n  ) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nexport const getDestinyMemberships = () => {\r\n  const destinyMembershipsString = localStorage.getItem(\r\n    DESTINY_MEMBERSHIPS_STORAGE_KEY\r\n  );\r\n  try {\r\n    if (destinyMembershipsString) {\r\n      return JSON.parse(destinyMembershipsString) as UserInfoCard[];\r\n    }\r\n  } catch (e) {\r\n    console.error(`Error loading destiny memberships`, e.message);\r\n  }\r\n  return undefined;\r\n};\r\n\r\nexport const hasDestinyMemberships = () => {\r\n  return !!getDestinyMemberships();\r\n};\r\n\r\nexport const getSelectedDestinyMembership = () => {\r\n  const destinyMembershipString = localStorage.getItem(\r\n    DESTINY_MEMBERSHIP_STORAGE_KEY\r\n  );\r\n  try {\r\n    if (destinyMembershipString) {\r\n      return JSON.parse(destinyMembershipString) as UserInfoCard;\r\n    }\r\n  } catch (e) {\r\n    console.error(\"Error loading destiny membership\", e.message);\r\n  }\r\n  return undefined;\r\n};\r\n\r\nexport const hasSelectedDestinyMembership = () => {\r\n  return !!getSelectedDestinyMembership();\r\n};\r\n\r\nexport const setSelectedDestinyMembership = (membership: UserInfoCard) => {\r\n  localStorage.setItem(\r\n    DESTINY_MEMBERSHIP_STORAGE_KEY,\r\n    JSON.stringify(membership)\r\n  );\r\n};\r\n\r\nexport const auth = async () => {\r\n  const queryParams = new URLSearchParams(window.location.search);\r\n  const authCode = queryParams.get(\"code\");\r\n\r\n  if (authCode && !hasValidAuth()) {\r\n    console.log(\"Fetching access token with auth code\");\r\n    const authResponse = await fetchAuthToken(authCode);\r\n    if (authResponse && authResponse.authSuccess === false) {\r\n      console.error(authResponse.error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  if (authCode) {\r\n    window.location.replace(\r\n      `${window.location.origin}${window.location.pathname}`\r\n    );\r\n  }\r\n\r\n  if (hasValidAuth() && hasDestinyMemberships()) {\r\n    return true;\r\n  }\r\n\r\n  console.log(\r\n    \"Redirecting to fresh authentication for missing or expired access token, or missing destiny memberships\"\r\n  );\r\n  clearStorage();\r\n  redirectToAuth();\r\n};\r\n","export const ITEM_SLOT_KINETIC = \"kinetic\";\r\nexport const ITEM_SLOT_ENERGY = \"energy\";\r\nexport const ITEM_SLOT_POWER = \"power\";\r\nexport const ITEM_SLOT_HEAD = \"head\";\r\nexport const ITEM_SLOT_GLOVES = \"gloves\";\r\nexport const ITEM_SLOT_CHEST = \"chest\";\r\nexport const ITEM_SLOT_LEGS = \"legs\";\r\nexport const ITEM_SLOT_CLASS_ITEM = \"classItem\";\r\n\r\nexport const ITEM_SLOT_BUCKETS = {\r\n  [ITEM_SLOT_KINETIC]: 1498876634,\r\n  [ITEM_SLOT_ENERGY]: 2465295065,\r\n  [ITEM_SLOT_POWER]: 953998645,\r\n  [ITEM_SLOT_HEAD]: 3448274439,\r\n  [ITEM_SLOT_GLOVES]: 3551918588,\r\n  [ITEM_SLOT_CHEST]: 14239492,\r\n  [ITEM_SLOT_LEGS]: 20886954,\r\n  [ITEM_SLOT_CLASS_ITEM]: 1585787867\r\n};\r\n\r\nexport const ITEM_BUCKET_SLOTS = Object.entries(ITEM_SLOT_BUCKETS).reduce(\r\n  (buckets, [slot, bucket]) => ({ ...buckets, [bucket]: slot }),\r\n  {} as { [bucket: number]: string }\r\n);\r\n\r\nexport const ITEM_SLOT_GROUP_WEAPONS = [\r\n  ITEM_SLOT_KINETIC,\r\n  ITEM_SLOT_ENERGY,\r\n  ITEM_SLOT_POWER\r\n];\r\nexport const ITEM_SLOT_GROUP_ARMOR = [\r\n  ITEM_SLOT_HEAD,\r\n  ITEM_SLOT_GLOVES,\r\n  ITEM_SLOT_CHEST,\r\n  ITEM_SLOT_LEGS,\r\n  ITEM_SLOT_CLASS_ITEM\r\n];\r\n\r\nexport const ORDERED_ITEM_SLOTS = [\r\n  ...ITEM_SLOT_GROUP_WEAPONS,\r\n  ...ITEM_SLOT_GROUP_ARMOR\r\n];\r\n\r\nexport const ITEM_TIER_TYPE_EXOTIC = 6;\r\n\r\nexport const ITEM_TYPE_ARMOR = 2;\r\nexport const ITEM_TYPE_WEAPON = 3;\r\n\r\nexport const CLASS_TYPE_ALL = 3;\r\n\r\nexport const CLASS_TITAN = \"titan\";\r\nexport const CLASS_HUNTER = \"hunter\";\r\nexport const CLASS_WARLOCK = \"warlock\";\r\n\r\nexport const CLASS_NAMES = [CLASS_TITAN, CLASS_HUNTER, CLASS_WARLOCK];\r\n\r\nexport const ITEM_TYPE_ARTIFACT = 28;\r\nexport const UNDYING_ARTIFACT_ITEM_HASH = 1387688628;\r\n","import classnames from \"classnames\";\r\nimport React from \"react\";\r\n\r\nimport { CharacterData } from \"../types\";\r\n\r\nimport { ORDERED_ITEM_SLOTS } from \"../constants\";\r\nimport STYLES from \"./CharacterDisplay.module.scss\";\r\n\r\ninterface CharacterDisplayProps {\r\n  data: CharacterData;\r\n}\r\n\r\nconst titleCase = (text: string) =>\r\n  text.substr(0, 1).toUpperCase() + text.substr(1);\r\n\r\ninterface BarProps {\r\n  min: number;\r\n  max: number;\r\n  value: number;\r\n  avgValue: number;\r\n  label: string;\r\n  icon?: string;\r\n}\r\nconst Bar = ({ min, max, value, avgValue, label, icon }: BarProps) => {\r\n  const range = max - min;\r\n  const perc = Math.floor(((value - min) / range) * 1000) / 10;\r\n  const avgPerc = Math.floor(((avgValue - min) / range) * 1000) / 10;\r\n  // const plusTwoPerc = Math.floor(((avgValue + 2 - min) / range) * 1000) / 10\r\n  // const plusFivePerc = Math.floor(((avgValue + 5 - min) / range) * 1000) / 10\r\n  const fullLabelText = `${value} ${label}`;\r\n  const fullLabel = (\r\n    <span className={STYLES.label}>\r\n      <span\r\n        className={classnames(STYLES.power, {\r\n          [STYLES.max]: value >= max,\r\n          [STYLES.belowAverage]: value < avgValue\r\n        })}\r\n      >\r\n        {value}\r\n      </span>\r\n      <span className={STYLES.slotName}>{label}</span>\r\n    </span>\r\n  );\r\n  return (\r\n    <div className={STYLES.barWrapper}>\r\n      <div className={STYLES.iconWrapper}>\r\n        {icon && (\r\n          <img\r\n            className={STYLES.icon}\r\n            src={`https://www.bungie.net${icon}`}\r\n            alt={fullLabelText}\r\n          />\r\n        )}\r\n      </div>\r\n      <div className={STYLES.barContainer}>\r\n        <div className={STYLES.filledBar} style={{ width: `${perc}%` }}>\r\n          {fullLabel}\r\n        </div>\r\n        <div className={STYLES.barLine} style={{ left: `${avgPerc}%` }} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CharacterDisplay = ({ data }: CharacterDisplayProps) => {\r\n  const classItemNames: { [key: string]: string } = {\r\n    hunter: \"Hunter Cloak\",\r\n    titan: \"Titan Mark\",\r\n    warlock: \"Warlock Bond\"\r\n  };\r\n  const slotFullNames: { [key: string]: string } = {\r\n    chest: \"Chest Armor\",\r\n    classItem: classItemNames[data.className],\r\n    energy: \"Energy Weapon\",\r\n    gloves: \"Gauntlets\",\r\n    head: \"Helmet\",\r\n    kinetic: \"Kinetic Weapon\",\r\n    legs: \"Leg Armor\",\r\n    power: \"Power Weapon\"\r\n  };\r\n\r\n  const rgbString = ({\r\n    red,\r\n    green,\r\n    blue\r\n  }: {\r\n    red: number;\r\n    green: number;\r\n    blue: number;\r\n  }) => `rgb(${red},${green},${blue})`;\r\n\r\n  interface PowerBySlot {\r\n    [slotName: string]: number;\r\n  }\r\n\r\n  // Get power by slot, using overall power if slot data does not exist\r\n  const powerBySlot = ORDERED_ITEM_SLOTS.reduce(\r\n    (slots, slotName) => ({\r\n      ...slots,\r\n      [slotName]: data.topItemBySlot\r\n        ? data.topItemBySlot[slotName].instanceData.primaryStat.value\r\n        : data.overallPower\r\n    }),\r\n    {} as PowerBySlot\r\n  );\r\n\r\n  // Round to 50s\r\n  const minItemPower = Math.min(...Object.values(powerBySlot));\r\n  const minPowerToDisplay = Math.max(\r\n    Math.floor(minItemPower / 50) * 50 - 50,\r\n    0\r\n  );\r\n  const maxItemPower = Math.max(...Object.values(powerBySlot));\r\n  const maxPowerToDisplay =\r\n    data.maxItemPower || Math.ceil(maxItemPower / 50) * 50;\r\n\r\n  const roundedPower = Math.floor(data.overallPower);\r\n\r\n  const range = maxPowerToDisplay - minPowerToDisplay;\r\n  const perc =\r\n    Math.floor(((roundedPower - minPowerToDisplay) / range) * 1000) / 10;\r\n\r\n  const withSign = (value: number) => {\r\n    if (value >= 0) {\r\n      return `+${value}`;\r\n    }\r\n    return `${value}`;\r\n  };\r\n\r\n  const summableArtifactBonusPower = data.artifactData\r\n    ? data.artifactData.bonusPower\r\n    : 0;\r\n\r\n  return (\r\n    <div\r\n      className={classnames(\r\n        STYLES.characterDisplay,\r\n        STYLES[`class_${data.className}`]\r\n      )}\r\n      style={{ backgroundColor: rgbString(data.character.emblemColor) }}\r\n    >\r\n      <div className={STYLES.header}>\r\n        <img\r\n          className={STYLES.emblemBackground}\r\n          src={`https://www.bungie.net${data.character.emblemBackgroundPath}`}\r\n          alt=\"\"\r\n        />\r\n        <div className={STYLES.name}>{titleCase(data.className)}</div>\r\n        <div className={STYLES.power}>\r\n          {roundedPower + summableArtifactBonusPower}\r\n        </div>\r\n      </div>\r\n      <div className={STYLES.details}>\r\n        <div className={STYLES.detailsRow}>\r\n          <div className={STYLES.detailsLabel}>Max equippable gear power:</div>\r\n          <div className={STYLES.defailsValue}>{roundedPower}</div>\r\n        </div>\r\n        {data.artifactData ? (\r\n          <>\r\n            <div className={STYLES.detailsRow}>\r\n              <div className={STYLES.detailsLabel}>\r\n                <img\r\n                  className={STYLES.detailsInlineIcon}\r\n                  src={`https://www.bungie.net${data.artifactData.iconPath}`}\r\n                  alt=\"\"\r\n                />\r\n                {data.artifactData.name} bonus power:\r\n              </div>\r\n              <div className={STYLES.detailsValue}>\r\n                {withSign(data.artifactData.bonusPower)}\r\n              </div>\r\n            </div>\r\n\r\n            <div className={STYLES.detailsRow}>\r\n              <div className={STYLES.detailsLabel}>Total combined power:</div>\r\n              <div className={STYLES.detailsValue}>\r\n                {roundedPower + summableArtifactBonusPower}\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : null}\r\n      </div>\r\n      <div className={STYLES.powerBars}>\r\n        <div className={STYLES.powerRange}>\r\n          <div className={STYLES.minPower}>{minPowerToDisplay}</div>\r\n          <div className={STYLES.rangeLine} />\r\n          <div className={STYLES.maxPower}>{maxPowerToDisplay}</div>\r\n        </div>\r\n        <div className={STYLES.bars}>\r\n          {Object.entries(powerBySlot).map(([slotName, power]) => {\r\n            const bestItem = data.topItemBySlot && data.topItemBySlot[slotName];\r\n            return (\r\n              <Bar\r\n                key={`${data.id}_${slotName}`}\r\n                min={minPowerToDisplay}\r\n                max={maxPowerToDisplay}\r\n                value={power}\r\n                avgValue={roundedPower}\r\n                label={slotFullNames[slotName] || slotName}\r\n                icon={\r\n                  bestItem &&\r\n                  bestItem.itemDefinition &&\r\n                  bestItem.itemDefinition.displayProperties.icon\r\n                }\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n        <div className={STYLES.powerLabel}>\r\n          <div className={STYLES.indicator} style={{ left: `${perc}%` }}>\r\n            {roundedPower}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={STYLES.hints}>\r\n        {data.potentialOverallPower &&\r\n        data.potentialOverallPower > data.overallPower ? (\r\n          <div className={classnames(STYLES.hint, STYLES.worldDropHint)}>\r\n            <span>\r\n              World drops can increase your overall gear power to{\" \"}\r\n              {data.potentialOverallPower}\r\n            </span>\r\n            <div className={STYLES.hintExtra}>\r\n              <div className={STYLES.hintExtraInner}>\r\n                <p>\r\n                  World drops (from strikes, public events, non-powerful\r\n                  legendary rewards) used to replace items lower than your\r\n                  current overall gear power can be used to increase your\r\n                  overall gear power to {data.potentialOverallPower}.\r\n                </p>\r\n                <p>\r\n                  This process may take multiple replacements of the same slots\r\n                  if this is far beyond your current overall power.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n\r\n        {data.potentialOverallPower === data.overallPower &&\r\n        data.overallPower >= 900 &&\r\n        data.overallPower < 950 ? (\r\n          <div className={classnames(STYLES.hint, STYLES.powerfulHint)}>\r\n            <span>\r\n              Powerful rewards can increase your overall gear power up to the\r\n              powerful cap of 950\r\n            </span>\r\n            <div className={STYLES.hintExtra}>\r\n              <div className={STYLES.hintExtraInner}>\r\n                <p>\r\n                  Powerful and pinnacle reward sources (Weekly challenges, Year\r\n                  3 raids) will give you items above your overall gear power,\r\n                  with powerful rewards capped at 950.\r\n                </p>\r\n                <p>\r\n                  Powerful rewards (Tier 1) will give items up to 3 levels above\r\n                  your overall gear power\r\n                </p>\r\n                <p>\r\n                  Powerful rewards (Tier 2) will give items up to 5 levels above\r\n                  your overall gear power\r\n                </p>\r\n                <p>\r\n                  Pinnacle rewards will give items up to 8 levels above your\r\n                  overall gear power\r\n                </p>\r\n                <p>\r\n                  After getting a powerful reward, check back here to see if\r\n                  it's beneficial to catch up the rest of your slots with world\r\n                  drops before getting another!\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n\r\n        {data.potentialOverallPower === data.overallPower &&\r\n        data.overallPower >= 950 &&\r\n        data.overallPower < 960 ? (\r\n          <div className={classnames(STYLES.hint, STYLES.pinnacleHint)}>\r\n            <span>\r\n              Pinnacle rewards can increase your overall gear power up to the\r\n              pinnacle cap of 960\r\n            </span>\r\n            <div className={STYLES.hintExtra}>\r\n              <p>\r\n                Pinnacle reward sources (Weekly challenges, Year 3 raids) will\r\n                give you items above your overall gear power, capped at 960.\r\n              </p>\r\n              <p>\r\n                Pinnacle rewards will give items up to 8 levels above your\r\n                overall gear power\r\n              </p>\r\n              <p>\r\n                After getting a pinnacle reward, check back here to see if it's\r\n                beneficial to catch up the rest of your slots with world drops\r\n                before getting another!\r\n              </p>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterDisplay;\r\n","import React from \"react\";\n\nimport STYLES from \"./LoadingSpinner.module.scss\";\n\ninterface LoadingSpinnerProps {\n  status: string;\n}\n\nconst LoadingSpinner = ({ status }: LoadingSpinnerProps) => {\n  return (\n    <div className={STYLES.loadingSpinnerContainer}>\n      <div className={STYLES.anchor}>\n        <div className={STYLES.spinnerLarge} />\n        <div className={STYLES.spinnerSmall} />\n        <div className={STYLES.status}>{status}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import { UserInfoCard } from \"bungie-api-ts/user\";\nimport classnames from \"classnames\";\nimport React from \"react\";\n\nimport { getDestinyMemberships } from \"../services/bungie-auth\";\nimport STYLES from \"./MembershipSelect.module.scss\";\n\ninterface MembershipSelectProps {\n  onMembershipSelect: (membership: UserInfoCard) => any;\n}\n\nconst MembershipSelect = ({ onMembershipSelect }: MembershipSelectProps) => {\n  const destinyMemberships = getDestinyMemberships();\n\n  if (!destinyMemberships) {\n    return null;\n  }\n\n  if (destinyMemberships.length === 0) {\n    return <div>No destiny memberships!</div>;\n  }\n\n  const PLATFORMS: { [key: number]: string } = {\n    1: \"xbox\",\n    2: \"psn\",\n    3: \"steam\",\n    4: \"blizzard\"\n  };\n\n  return (\n    <div className={STYLES.membershipSelect}>\n      {destinyMemberships.map(m => {\n        return (\n          <div\n            key={m.membershipId}\n            className={classnames(\n              STYLES.membership,\n              STYLES[`platform_${PLATFORMS[m.membershipType]}`]\n            )}\n            onClick={() => onMembershipSelect(m)}\n          >\n            {m.displayName}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default MembershipSelect;\n","import {\r\n  DestinyCharacterComponent,\r\n  DestinyItemComponent\r\n} from \"bungie-api-ts/destiny2\";\r\n\r\nimport forIn from \"lodash/forIn\";\r\nimport groupBy from \"lodash/groupBy\";\r\nimport mapValues from \"lodash/mapValues\";\r\nimport maxBy from \"lodash/maxBy\";\r\nimport sumBy from \"lodash/sumBy\";\r\n\r\nimport {\r\n  CLASS_NAMES,\r\n  CLASS_TYPE_ALL,\r\n  ITEM_BUCKET_SLOTS,\r\n  ITEM_SLOT_BUCKETS,\r\n  ITEM_TYPE_ARMOR,\r\n  ITEM_TYPE_WEAPON,\r\n  UNDYING_ARTIFACT_ITEM_HASH\r\n} from \"../constants\";\r\nimport {\r\n  CharacterData,\r\n  ItemBySlot,\r\n  JoinedItemDefinition,\r\n  PowerBySlot,\r\n  SeasonalArtifactData\r\n} from \"../types\";\r\nimport { getBasicProfile, getFullProfile, getManifest } from \"./bungie-api\";\r\nimport { auth, getSelectedDestinyMembership } from \"./bungie-auth\";\r\n\r\nconst getPowerBySlot = (itemsBySlot: ItemBySlot): PowerBySlot =>\r\n  mapValues(itemsBySlot, item => item.instanceData.primaryStat.value);\r\n\r\nconst getOverallPower = (powerBySlot: PowerBySlot) =>\r\n  Math.floor(\r\n    Object.values(powerBySlot).reduce((sum, power) => sum + power, 0) /\r\n      Object.keys(ITEM_SLOT_BUCKETS).length\r\n  );\r\n\r\nconst mergeItems = <\r\n  T extends { [key: string]: { items: DestinyItemComponent[] } }\r\n>(\r\n  characterItemMap: T\r\n) => {\r\n  return Object.values(characterItemMap).reduce(\r\n    (allItems, characterItems) => allItems.concat(characterItems.items),\r\n    [] as DestinyItemComponent[]\r\n  );\r\n};\r\n\r\nconst isItemEquippableByCharacter = (\r\n  item: JoinedItemDefinition,\r\n  character: DestinyCharacterComponent\r\n) => {\r\n  if (item.instanceData.canEquip) {\r\n    return true;\r\n  } // If the game says we can equip it, let's believe it\r\n  if (item.instanceData.cannotEquipReason === 16) {\r\n    return true;\r\n  } // Only reason is that it's in your vault\r\n  if (item.instanceData.equipRequiredLevel > character.baseCharacterLevel) {\r\n    return false;\r\n  }\r\n  if (\r\n    item.itemDefinition.classType !== CLASS_TYPE_ALL &&\r\n    item.itemDefinition.classType !== character.classType\r\n  ) {\r\n    return false;\r\n  }\r\n  // Let's ignore the rest for now\r\n  return true;\r\n};\r\n\r\nconst getBasicCharacterData = async (\r\n  pendingBasicProfile: ReturnType<typeof getBasicProfile>\r\n) => {\r\n  const profile = await pendingBasicProfile;\r\n  if (!profile || !profile.Response || !profile.Response.characters) {\r\n    return;\r\n  }\r\n  const characters = profile.Response.characters.data;\r\n\r\n  if (characters) {\r\n    const getDataForCharacterId = (id: string): CharacterData => {\r\n      const character = characters[id];\r\n      const className = CLASS_NAMES[character.classType];\r\n      return {\r\n        character,\r\n        className,\r\n        id,\r\n        overallPower: character.light\r\n      };\r\n    };\r\n\r\n    const characterIds = Object.keys(characters);\r\n    const characterData = characterIds.map(id => getDataForCharacterId(id));\r\n    return characterData;\r\n  }\r\n};\r\n\r\nexport const getCharacterData = async (\r\n  setCharacterData: (state: CharacterData[]) => any,\r\n  setIsFetchingCharacterData: (state: boolean) => any,\r\n  returnBasicCharacterData: boolean = false\r\n) => {\r\n  try {\r\n    const isAuthed = await auth();\r\n    if (!isAuthed) {\r\n      return;\r\n    }\r\n\r\n    const pendingManifest = getManifest();\r\n\r\n    setIsFetchingCharacterData(true);\r\n\r\n    const destinyMembership = getSelectedDestinyMembership();\r\n    if (!destinyMembership) {\r\n      return;\r\n    }\r\n\r\n    let pendingBasicProfile: ReturnType<typeof getBasicProfile> | undefined;\r\n\r\n    // Flag lets this be disabled to prevent setting after full profile is returned\r\n    let shouldSetBasicCharacterData = true;\r\n    // Produce basic data if flag is set\r\n    if (returnBasicCharacterData) {\r\n      pendingBasicProfile = getBasicProfile(\r\n        destinyMembership.membershipType,\r\n        destinyMembership.membershipId\r\n      );\r\n      pendingBasicProfile.catch(() => {\r\n        /* Do nothing */\r\n      });\r\n      const pendingBasicCharacterData = getBasicCharacterData(\r\n        pendingBasicProfile\r\n      ).catch(e => {\r\n        /* Do nothing */\r\n      });\r\n      (async () => {\r\n        const basicCharacterData = await pendingBasicCharacterData;\r\n        if (basicCharacterData && shouldSetBasicCharacterData) {\r\n          setCharacterData(basicCharacterData);\r\n        }\r\n      })();\r\n    }\r\n\r\n    const fullProfile = await getFullProfile(\r\n      destinyMembership.membershipType,\r\n      destinyMembership.membershipId\r\n    );\r\n    setIsFetchingCharacterData(false);\r\n\r\n    if (\r\n      !fullProfile ||\r\n      !fullProfile.Response ||\r\n      !fullProfile.Response.characters ||\r\n      !fullProfile.Response.characters.data ||\r\n      !fullProfile.Response.characterEquipment ||\r\n      !fullProfile.Response.characterEquipment.data ||\r\n      !fullProfile.Response.characterInventories ||\r\n      !fullProfile.Response.characterInventories.data ||\r\n      !fullProfile.Response.profileInventory ||\r\n      !fullProfile.Response.profileInventory.data ||\r\n      !fullProfile.Response.itemComponents ||\r\n      !fullProfile.Response.itemComponents.instances ||\r\n      !fullProfile.Response.itemComponents.instances.data\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const characters = fullProfile.Response.characters.data;\r\n    const characterEquipments = fullProfile.Response.characterEquipment.data;\r\n    const characterInventories = fullProfile.Response.characterInventories.data;\r\n    const profileInventories = fullProfile.Response.profileInventory.data;\r\n    const itemInstances = fullProfile.Response.itemComponents.instances.data;\r\n\r\n    const manifest = await pendingManifest;\r\n\r\n    if (!manifest) {\r\n      return;\r\n    }\r\n\r\n    const allCharacterItems = mergeItems(characterInventories)\r\n      .concat(mergeItems(characterEquipments))\r\n      .concat(profileInventories.items);\r\n    const allCharacterWeapons = allCharacterItems.filter(i => {\r\n      const itemDefinition =\r\n        i.itemHash && manifest.DestinyInventoryItemDefinition[i.itemHash];\r\n      return itemDefinition && itemDefinition.itemType === ITEM_TYPE_WEAPON;\r\n    });\r\n\r\n    const getDataForCharacterId = (id: string): CharacterData => {\r\n      const character = characters[id];\r\n      const className = CLASS_NAMES[character.classType];\r\n\r\n      const mapAndFilterItems = (\r\n        items: DestinyItemComponent[]\r\n      ): JoinedItemDefinition[] =>\r\n        items\r\n          .map(item => {\r\n            const instanceData = item.itemInstanceId\r\n              ? itemInstances[item.itemInstanceId]\r\n              : undefined;\r\n            const itemDefinition =\r\n              manifest.DestinyInventoryItemDefinition[item.itemHash];\r\n            return {\r\n              ...item,\r\n              instanceData,\r\n              itemDefinition\r\n            };\r\n          })\r\n          .filter(\r\n            i =>\r\n              i.instanceData &&\r\n              i.itemDefinition &&\r\n              [ITEM_TYPE_ARMOR, ITEM_TYPE_WEAPON].includes(\r\n                i.itemDefinition.itemType\r\n              )\r\n          )\r\n          .map(i => ({\r\n            ...i,\r\n            instanceData: i.instanceData!,\r\n            itemDefinition: i.itemDefinition!\r\n          }))\r\n          .map(i => ({\r\n            ...i,\r\n            slotName:\r\n              ITEM_BUCKET_SLOTS[i.itemDefinition.inventory.bucketTypeHash]\r\n          }))\r\n          .filter(i => isItemEquippableByCharacter(i, character));\r\n\r\n      const characterItems = mapAndFilterItems(\r\n        characterInventories[id].items\r\n          .concat(characterEquipments[id].items)\r\n          .concat(allCharacterWeapons)\r\n      );\r\n      const relevantProfileItems = mapAndFilterItems(\r\n        profileInventories.items\r\n      ).filter(\r\n        i =>\r\n          i.itemDefinition.classType === CLASS_TYPE_ALL ||\r\n          i.itemDefinition.classType === character.classType\r\n      );\r\n\r\n      const allItems = characterItems.concat(relevantProfileItems);\r\n\r\n      const getItemScore = (item: JoinedItemDefinition) => {\r\n        if (!item || !item.instanceData || !item.instanceData.primaryStat) {\r\n          return 0;\r\n        }\r\n        let score = item.instanceData.primaryStat.value;\r\n        if (item.instanceData.isEquipped) {\r\n          score += 0.1;\r\n        }\r\n        if (item.location === 1) {\r\n          score += 0.05;\r\n        }\r\n        return score;\r\n      };\r\n\r\n      const getEquipLabel = (item: JoinedItemDefinition) =>\r\n        item.itemDefinition.equippingBlock.uniqueLabel;\r\n\r\n      // Group by slot\r\n      const itemsBySlot = groupBy(allItems, i => i.slotName);\r\n      // Get max power items per slot\r\n      let topItemBySlot = mapValues(\r\n        itemsBySlot,\r\n        items => maxBy(items, getItemScore)!\r\n      );\r\n      // Get overlaps by equip label\r\n      const uniqueEquippedGroups = groupBy(\r\n        Object.values(topItemBySlot).filter(getEquipLabel),\r\n        getEquipLabel\r\n      );\r\n      // For overlaps with more than one item, generate valid options where all-but-one item is swapped for the next best non-exotic\r\n      forIn(uniqueEquippedGroups, uniqueEquippedGroup => {\r\n        if (uniqueEquippedGroup.length <= 1) {\r\n          return;\r\n        }\r\n\r\n        const validItemCombinations: ItemBySlot[] = [];\r\n\r\n        uniqueEquippedGroup.forEach(item => {\r\n          const otherItems = uniqueEquippedGroup.filter(\r\n            otherItem => otherItem !== item\r\n          );\r\n          let isCombinationValid = true;\r\n          const combination = { ...topItemBySlot };\r\n          otherItems.forEach(otherItem => {\r\n            // Find non-exotics for this slot\r\n            const nonExotics = itemsBySlot[otherItem.slotName].filter(\r\n              i => !getEquipLabel(i)\r\n            );\r\n            if (nonExotics.length > 0) {\r\n              // Select max power from non-exotics\r\n              combination[otherItem.slotName] = maxBy(\r\n                nonExotics,\r\n                getItemScore\r\n              )!;\r\n            } else {\r\n              // No non-exotic options for this slot, so whole combination is invalidaa\r\n              isCombinationValid = false;\r\n            }\r\n          });\r\n          if (isCombinationValid) {\r\n            validItemCombinations.push(combination);\r\n          }\r\n        });\r\n\r\n        // Select highest total scoring valid combination, if alternative item combinations have been generated\r\n        if (validItemCombinations.length > 0) {\r\n          const bestCombination = maxBy(validItemCombinations, combination =>\r\n            sumBy(Object.values(combination), getItemScore)\r\n          )!;\r\n          topItemBySlot = bestCombination;\r\n        }\r\n      });\r\n\r\n      const powerBySlot = getPowerBySlot(topItemBySlot);\r\n      const overallPower = getOverallPower(powerBySlot);\r\n\r\n      const artifactItemComponent = Object.values(characterEquipments)\r\n        .flatMap(i => i.items)\r\n        .find(i => i.itemHash === UNDYING_ARTIFACT_ITEM_HASH);\r\n\r\n      let artifactData: SeasonalArtifactData | undefined;\r\n      if (artifactItemComponent && artifactItemComponent.itemInstanceId) {\r\n        const artifactDefinition = manifest.DestinyInventoryItemDefinition[\r\n          artifactItemComponent.itemHash\r\n        ]!;\r\n        const artifactInstance = itemInstances[\r\n          artifactItemComponent.itemInstanceId\r\n        ]!;\r\n        artifactData = {\r\n          bonusPower: artifactInstance.primaryStat.value,\r\n          iconPath: artifactDefinition.displayProperties.icon,\r\n          name: artifactDefinition.displayProperties.name\r\n        };\r\n      }\r\n\r\n      const potentialPowerBySlot = { ...powerBySlot };\r\n      while (\r\n        Object.values(potentialPowerBySlot).some(\r\n          power => power < getOverallPower(potentialPowerBySlot) || power < 900\r\n        )\r\n      ) {\r\n        const tempPotentialOverallPower = getOverallPower(potentialPowerBySlot);\r\n        Object.keys(potentialPowerBySlot).forEach(\r\n          slot =>\r\n            (potentialPowerBySlot[slot] = Math.max(\r\n              900,\r\n              Math.max(tempPotentialOverallPower, potentialPowerBySlot[slot])\r\n            ))\r\n        );\r\n      }\r\n      const potentialOverallPower = getOverallPower(potentialPowerBySlot);\r\n\r\n      return {\r\n        artifactData,\r\n        character,\r\n        className,\r\n        id,\r\n        overallPower,\r\n        potentialOverallPower,\r\n        potentialPowerBySlot,\r\n        topItemBySlot\r\n      };\r\n    };\r\n\r\n    const characterIds = Object.keys(characters);\r\n    const characterData = characterIds.map(id => getDataForCharacterId(id));\r\n    shouldSetBasicCharacterData = false;\r\n    setCharacterData(characterData);\r\n  } catch (e) {\r\n    console.error(`Error fetching manifest and character data`, e);\r\n    setIsFetchingCharacterData(false);\r\n    return;\r\n  }\r\n};\r\n","import { UserInfoCard } from \"bungie-api-ts/user\";\nimport React, { useEffect, useState } from \"react\";\n\nimport {\n  auth,\n  hasSelectedDestinyMembership,\n  hasValidAuth,\n  setSelectedDestinyMembership\n} from \"./services/bungie-auth\";\nimport { CharacterData } from \"./types\";\n\nimport CharacterDisplay from \"./components/CharacterDisplay\";\nimport LoadingSpinner from \"./components/LoadingSpinner\";\nimport MembershipSelect from \"./components/MembershipSelect\";\nimport { getManifest } from \"./services/bungie-api\";\nimport { getCharacterData } from \"./services/utils\";\n\nimport \"normalize.css\";\nimport STYLES from \"./App.module.scss\";\n\nlet characterDataRefreshTimer: number | undefined;\n\nconst App = () => {\n  const [isAuthed, setIsAuthed] = useState<boolean>(hasValidAuth());\n  const [hasAuthError, setAuthError] = useState<boolean>(false);\n  const [hasMembership, setHasMembership] = useState<boolean>(\n    hasSelectedDestinyMembership()\n  );\n  const [hasManifestData, setHasManifestData] = useState<boolean>(false);\n  const [hasManifestError, setManifestError] = useState<boolean>(false);\n  const [isFetchingCharacterData, setIsFetchingCharacterData] = useState<\n    boolean\n  >(false);\n  const [characterData, setCharacterData] = useState<\n    CharacterData[] | undefined\n  >(undefined);\n\n  useEffect(() => {\n    const doAuth = async () => {\n      const authResult = await auth();\n      if (authResult) {\n        setIsAuthed(true);\n      } else {\n        setAuthError(true);\n      }\n    };\n    if (!isAuthed) {\n      doAuth();\n    }\n  });\n\n  useEffect(() => {\n    (async () => {\n      try {\n        await getManifest();\n        setHasManifestData(true);\n      } catch (e) {\n        console.error(e.message);\n        setManifestError(true);\n      }\n    })();\n  });\n\n  useEffect(() => {\n    const doGetCharacterData = (returnBasicCharacterData: boolean = false) =>\n      getCharacterData(\n        setCharacterData,\n        setIsFetchingCharacterData,\n        returnBasicCharacterData\n      );\n    if (isAuthed && hasMembership && !isFetchingCharacterData) {\n      if (!characterDataRefreshTimer) {\n        characterDataRefreshTimer = setInterval(doGetCharacterData, 10000);\n        doGetCharacterData(true);\n      }\n    }\n  }, [isAuthed, hasMembership, hasManifestData, isFetchingCharacterData]);\n\n  const onSelectMembership = (membership: UserInfoCard) => {\n    setSelectedDestinyMembership(membership);\n    setHasMembership(true);\n  };\n\n  let status = \"\";\n  if (hasAuthError) {\n    status = \"Authentication error, refresh page to try again!\";\n  } else if (hasManifestError) {\n    status = \"Error fetching manifest, refresh page to try again!\";\n  } else if (!isAuthed) {\n    status = \"Authenticating...\";\n  } else if (!hasMembership) {\n    status = \"Waiting for Destiny platform selection...\";\n  } else if (!hasManifestData) {\n    status = \"Fetching Destiny item manifest...\";\n  } else if (!characterData || characterData.length === 0) {\n    if (isFetchingCharacterData) {\n      status = \"Fetching character data...\";\n    } else {\n      status = \"No character data\";\n    }\n  }\n\n  (window as any).characterData = characterData;\n\n  if (characterData && characterData.length > 0) {\n    return (\n      <div className={STYLES.App}>\n        <MembershipSelect onMembershipSelect={onSelectMembership} />\n        <div className={STYLES.charactersContainer}>\n          <div className={STYLES.characters}>\n            {characterData.map(c => (\n              <CharacterDisplay key={c.id} data={c} />\n            ))}\n          </div>\n        </div>\n        {status && <LoadingSpinner status={status} />}\n      </div>\n    );\n  }\n\n  return (\n    <div className={STYLES.App}>\n      <LoadingSpinner status={status} />\n      <MembershipSelect onMembershipSelect={onSelectMembership} />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"membershipSelect\":\"MembershipSelect_membershipSelect__vf_ZG\",\"membership\":\"MembershipSelect_membership__RaveC\",\"platform_xbox\":\"MembershipSelect_platform_xbox__1ZAgU\",\"platform_psn\":\"MembershipSelect_platform_psn__WN9gB\",\"platform_steam\":\"MembershipSelect_platform_steam__1YUUA\",\"platform_blizzard\":\"MembershipSelect_platform_blizzard__1OiG6\"};"],"sourceRoot":""}