{"version":3,"sources":["App.module.scss","components/MembershipSelect.module.scss","components/CharacterDisplay.module.scss","services/bungie-api.ts","App.tsx","services/bungie-auth.ts","constants.ts","services/utils.ts","components/CharacterDisplay.tsx","components/MembershipSelect.tsx","components/LoadingSpinner.tsx","serviceWorker.ts","index.tsx","components/LoadingSpinner.module.scss"],"names":["module","exports","App","loadingContainer","charactersContainer","characters","loadingStatus","membershipSelect","membership","platform_blizzard","platform_psn","platform_xbox","characterDisplay","header","emblemBackground","name","power","powerBars","powerRange","rangeLine","powerLabel","indicator","barWrapper","iconWrapper","icon","barContainer","barLine","filledBar","cachedManifestData","getManifestPromise","characterDataRefreshTimer","bungieAuthedFetch","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","config","accessToken","headers","url","response","wrap","_context","prev","next","getAccessToken","x-api-key","BUNGIE_API_KEY","Authorization","concat","console","log","params","entries","map","_ref2","_ref3","slicedToArray","key","value","encodeURIComponent","fetch","sent","json","abrupt","t0","error","stop","_x","apply","this","arguments","manifestPropertyWhitelist","getCachedManifestData","_ref4","_callee2","manifestData","_context2","get","getRemoteManifestData","_ref5","_callee3","manifest","version","manifestDataResponse","_context3","jsonWorldContentPaths","en","keys","forEach","includes","set","localStorage","setItem","_x2","getManifest","_ref6","_callee5","_context5","_callee4","localStorageManifestVersion","freshManifestData","_context4","getDestinyManifest","getItem","Response","window","location","search","undefined","clearStorage","removeItem","handleTokenResponse","tokenResponse","data","tokenDuration","expiryTime","bungieMembershipId","destinyMembershipsResponse","destinyMemberships","_args","length","status","access_token","expires_in","Date","now","membership_id","toString","getMembershipDataById","membershipId","membershipType","JSON","stringify","setSelectedDestinyMembership","fetchAuthToken","authCode","method","cache","credentials","Content-Type","redirect","referrer","body","hasValidAuth","accessTokenExpiryTime","parseInt","getDestinyMemberships","destinyMembershipsString","parse","e","message","getSelectedDestinyMembership","destinyMembershipString","auth","queryParams","URLSearchParams","replace","origin","pathname","ITEM_SLOT_BUCKET_HASHES","kinetic","energy","head","gloves","chest","legs","classItem","getOverallPower","powerBySlot","values","reduce","sum","CLASS_NAMES","ITEM_TYPE_ARMOR","ITEM_TYPE_WEAPON","getBasicProfile","getProfile","destinyMembershipId","components","getAdditionalProfile","getCombinedProfile","pendingBasicProfile","actualPendingBasicProfile","pendingAdditionalProfile","basicProfile","additionalProfile","Promise","all","objectSpread","_x3","getBasicCharacterData","profile","getDataForCharacterId","characterIds","characterData","id","character","className","classType","overallPower","light","maxPowerBySlot","slots","slotName","defineProperty","_x4","getCharacterData","setCharacterData","setIsFetchingCharacterData","returnBasicCharacterData","pendingManifest","destinyMembership","shouldSetBasicCharacterData","pendingBasicCharacterData","fullProfile","_characters","characterEquipments","characterInventories","profileInventories","itemInstances","mergeItems","allCharacterItems","allCharacterWeapons","_args4","catch","basicCharacterData","characterEquipment","profileInventory","itemComponents","instances","characterItemMap","allItems","characterItems","items","filter","i","itemDefinition","itemHash","DestinyInventoryItemDefinition","itemType","mapAndFilterItems","item","instanceData","itemInstanceId","profileItems","combinedItems","armor","weapons","itemsBySlot","_ref7","_ref8","slotBucketHash","inventory","bucketTypeHash","_ref9","_ref10","Math","max","toConsumableArray","primaryStat","bestItemBySlot","maxPowerForSlot","maxPowerItemsForSlot","equippedItems","some","ci","getBestItemForSlot","_x5","_x6","Bar","min","avgValue","label","range","perc","floor","avgPerc","react_default","createElement","STYLES","src","alt","style","width","left","CharacterDisplay","text","slotFullNames","warlock","hunter","titan","minItemPower","minPowerToDisplay","maxItemPower","maxPowerToDisplay","ceil","roundedPower","classnames","backgroundColor","red","green","blue","rgbString","emblemColor","emblemBackgroundPath","substr","toUpperCase","minPower","maxPower","bars","bestItem","CharacterDisplay_Bar","displayProperties","MembershipSelect","onMembershipSelect","PLATFORMS","1","2","4","m","onClick","displayName","LoadingSpinner","loadingSpinnerContainer","anchor","spinnerLarge","spinnerSmall","_useState","useState","_useState2","isAuthed","setIsAuthed","useEffect","doAuth","_useState3","_useState4","hasMembership","setHasMembership","_useState5","_useState6","hasManifestData","setHasManifestData","_useState7","_useState8","isFetchingCharacterData","_useState9","_useState10","doGetCharacterData","returnEarlyResults","setInterval","onSelectMembership","components_MembershipSelect","c","components_CharacterDisplay","components_LoadingSpinner","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","spinner","spin"],"mappings":"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","file":"static/js/main.10c5e388.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__15LM-\",\"loadingContainer\":\"App_loadingContainer__1Pa9s\",\"charactersContainer\":\"App_charactersContainer__1RSU_\",\"characters\":\"App_characters__1GhrS\",\"loadingStatus\":\"App_loadingStatus__3QEhd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"membershipSelect\":\"MembershipSelect_membershipSelect__3GbZz\",\"membership\":\"MembershipSelect_membership__3vKKK\",\"platform_blizzard\":\"MembershipSelect_platform_blizzard__1zLDb\",\"platform_psn\":\"MembershipSelect_platform_psn__2ASN8\",\"platform_xbox\":\"MembershipSelect_platform_xbox__1EgLN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"characterDisplay\":\"CharacterDisplay_characterDisplay__20O9A\",\"header\":\"CharacterDisplay_header__2fx5d\",\"emblemBackground\":\"CharacterDisplay_emblemBackground__2pAjE\",\"name\":\"CharacterDisplay_name__2j8PA\",\"power\":\"CharacterDisplay_power__1p583\",\"powerBars\":\"CharacterDisplay_powerBars__3t0B5\",\"powerRange\":\"CharacterDisplay_powerRange__1d86z\",\"rangeLine\":\"CharacterDisplay_rangeLine__358zP\",\"powerLabel\":\"CharacterDisplay_powerLabel__3EDmr\",\"indicator\":\"CharacterDisplay_indicator__3CaQK\",\"barWrapper\":\"CharacterDisplay_barWrapper__2x1f3\",\"iconWrapper\":\"CharacterDisplay_iconWrapper__3hOkU\",\"icon\":\"CharacterDisplay_icon__1e0L7\",\"barContainer\":\"CharacterDisplay_barContainer__1OnNQ\",\"barLine\":\"CharacterDisplay_barLine__2qulu\",\"filledBar\":\"CharacterDisplay_filledBar__3UpB_\"};","import { get, set } from 'idb-keyval'\n\nimport { BUNGIE_API_KEY, getAccessToken } from './bungie-auth';\nimport { HttpClientConfig, getDestinyManifest, DestinyManifest, DestinyInventoryItemDefinition } from 'bungie-api-ts/destiny2'\n\nexport const bungieAuthedFetch = async (config: HttpClientConfig) => {\n  try {\n    const accessToken = getAccessToken()\n    const headers: { [key: string]: string } = { 'x-api-key': BUNGIE_API_KEY }\n    if (accessToken) headers.Authorization = `Bearer ${accessToken}`\n    console.log(config)\n    const url = `${config.url}${\n      config.params\n        ? '?' + Object.entries(config.params).map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value as string)}`)\n        : ''\n      }`\n    const response = await fetch(url, { headers })\n    return await response.json()\n  } catch (e) {\n    console.error(e)\n    return {}\n  }\n}\n\nconst MANIFEST_VERSION_KEY = 'MANIFEST_VERSION'\nconst MANIFEST_IDB_KEY = 'MANIFEST_DATA'\ninterface ManifestData {\n  DestinyInventoryItemDefinition: { [key: string]: DestinyInventoryItemDefinition | undefined }\n}\nconst manifestPropertyWhitelist = ['DestinyInventoryItemDefinition']\n\nconst getCachedManifestData = async () => {\n  console.log('Loading manifest data from IDB')\n  const manifestData = await get(MANIFEST_IDB_KEY)\n  console.log('Finished loading manifest data from IDB')\n  return manifestData as ManifestData\n}\n\nconst getRemoteManifestData = async (manifest: DestinyManifest) => {\n  const version = manifest.version\n  console.log('Fetching fresh manifest data')\n  const manifestDataResponse = await fetch(`https://www.bungie.net${manifest.jsonWorldContentPaths.en}`)\n  const manifestData = await manifestDataResponse.json()\n  console.log('Pruning manifest data')\n  Object.keys(manifestData).forEach(key => {\n    if (!manifestPropertyWhitelist.includes(key)) delete manifestData[key]\n  })\n  console.log('Storing manifest data in IDB')\n  await set(MANIFEST_IDB_KEY, manifestData)\n  localStorage.setItem(MANIFEST_VERSION_KEY, version)\n  return manifestData\n}\n\nlet cachedManifestData: ManifestData | undefined\nlet getManifestPromise: Promise<ManifestData> | undefined\n\nexport const getManifest = async (): Promise<ManifestData> => {\n  if (!getManifestPromise) {\n    getManifestPromise = (async () => {\n      const manifest = await getDestinyManifest(bungieAuthedFetch)\n      const localStorageManifestVersion = localStorage.getItem(MANIFEST_VERSION_KEY)\n      if (manifest\n        && manifest.Response\n        && manifest.Response.version === localStorageManifestVersion\n        && !window.location.search.includes('updateManifest')) {\n          if (!cachedManifestData)\n            cachedManifestData = await getCachedManifestData()\n          return cachedManifestData\n      }\n      cachedManifestData = undefined\n      const freshManifestData = await getRemoteManifestData(manifest.Response)\n      cachedManifestData = freshManifestData\n      return freshManifestData\n    })();\n  }\n  return getManifestPromise\n}","import React, { useState, useEffect } from 'react'\n\nimport { auth, hasValidAuth, hasSelectedDestinyMembership, setSelectedDestinyMembership } from './services/bungie-auth'\nimport { CharacterData } from './types'\n\nimport { getCharacterData } from './services/utils'\nimport CharacterDisplay from './components/CharacterDisplay'\nimport MembershipSelect from './components/MembershipSelect'\n\nimport 'normalize.css'\nimport STYLES from './App.module.scss'\nimport { UserInfoCard } from 'bungie-api-ts/user';\nimport LoadingSpinner from './components/LoadingSpinner';\nimport { getManifest } from './services/bungie-api';\n\nlet characterDataRefreshTimer: number | undefined\n\nconst App = () => {\n\n  const [isAuthed, setIsAuthed] = useState<boolean>(hasValidAuth())\n  useEffect(() => {\n    const doAuth = async () => {\n      const authResult = await auth()\n      if (authResult) setIsAuthed(true)\n    }\n    if (!isAuthed) doAuth()\n  })\n\n  const [hasMembership, setHasMembership] = useState<boolean>(hasSelectedDestinyMembership())\n\n  const [hasManifestData, setHasManifestData] = useState<boolean>(false)\n  useEffect(() => {\n    (async () => {\n      await getManifest()\n      setHasManifestData(true)\n    })();\n  })\n\n  const [isFetchingCharacterData, setIsFetchingCharacterData] = useState<boolean>(false)\n  const [characterData, setCharacterData] = useState<CharacterData[] | undefined>(undefined)\n  useEffect(() => {\n    const doGetCharacterData = (returnEarlyResults: boolean = false) => getCharacterData(setCharacterData, setIsFetchingCharacterData, returnEarlyResults)\n    if (isAuthed && hasMembership && !isFetchingCharacterData) {\n      if (!characterDataRefreshTimer) {\n        characterDataRefreshTimer = setInterval(doGetCharacterData, 10000)\n        doGetCharacterData(true)\n      }\n    }\n  }, [isAuthed, hasMembership, hasManifestData, isFetchingCharacterData])\n\n  const onSelectMembership = (membership: UserInfoCard) => {\n    setSelectedDestinyMembership(membership)\n    setHasMembership(true)\n  }\n\n  let status = ''\n  if (!isAuthed) {\n    status = 'Authenticating...'\n  } else if (!hasMembership) {\n    status = 'Waiting for Destiny platform selection...'\n  } else if (!characterData || characterData.length === 0) {\n    status = 'No character data'\n  } else if (!hasManifestData) {\n    status = 'Fetching Destiny item manifest...'\n  }\n\n  if (characterData && characterData.length > 0) {\n    return (\n      <div className={STYLES.App}>\n        <MembershipSelect onMembershipSelect={onSelectMembership} />\n        <div className={STYLES.charactersContainer}>\n          <div className={STYLES.characters}>\n            {characterData.map(c => <CharacterDisplay key={c.id} data={c} />)}\n          </div>\n        </div>\n        {status && <LoadingSpinner status={status} /> }\n      </div>\n    )\n  }\n\n  return (\n    <div className={STYLES.App}>\n      <LoadingSpinner status={status} />\n      <MembershipSelect onMembershipSelect={onSelectMembership} />\n    </div>\n  )\n\n}\n\nexport default App;\n","import { getMembershipDataById, UserInfoCard } from 'bungie-api-ts/user'\r\nimport { bungieAuthedFetch } from './bungie-api';\r\n\r\nconst isDev = process.env.NODE_ENV === 'development'\r\nexport const BUNGIE_API_KEY = isDev ? 'f7f184669f044a89b560fc5f71ed5d60' : 'd94be1e34632448fafdaf77c7afbb501'\r\nconst BUNGIE_OAUTH_AUTHORIZE_URL = 'https://www.bungie.net/en/OAuth/Authorize'\r\nconst BUNGIE_OAUTH_CLIENT_ID = isDev ? '26087' : '27213'\r\nconst BUNGIE_OAUTH_TOKEN_URL = 'https://www.bungie.net/platform/app/oauth/token/'\r\n\r\nconst ACCESS_TOKEN_STORAGE_KEY = 'bungieAccessToken'\r\nconst ACCESS_TOKEN_EXPIRY_STORAGE_KEY = 'bungieAccessTokenExpiryTime'\r\nconst BUNGIE_MEMBERSHIP_ID_STORAGE_KEY = 'bungieMembershipId'\r\nconst DESTINY_MEMBERSHIPS_STORAGE_KEY = 'destinyMemberships'\r\nconst DESTINY_MEMBERSHIP_STORAGE_KEY = 'destinyMembership'\r\n\r\nconst clearStorage = () => {\r\n  localStorage.removeItem(ACCESS_TOKEN_STORAGE_KEY);\r\n  localStorage.removeItem(ACCESS_TOKEN_EXPIRY_STORAGE_KEY);\r\n  localStorage.removeItem(BUNGIE_MEMBERSHIP_ID_STORAGE_KEY);\r\n  localStorage.removeItem(DESTINY_MEMBERSHIPS_STORAGE_KEY);\r\n  localStorage.removeItem(DESTINY_MEMBERSHIP_STORAGE_KEY);\r\n}\r\n\r\nconst getAuthUrl = () => `${BUNGIE_OAUTH_AUTHORIZE_URL}?response_type=code&client_id=${BUNGIE_OAUTH_CLIENT_ID}`\r\n\r\nconst redirectToAuth = () => {\r\n  console.log('Redirect to auth')\r\n  clearStorage()\r\n  window.location.replace(getAuthUrl())\r\n}\r\n\r\nconst handleTokenResponse = async (tokenResponse: Response, redirect: boolean = false) => {\r\n  console.log('handleTokenResponse')\r\n  clearStorage()\r\n  if (tokenResponse.status === 200) {\r\n    const data = await tokenResponse.json()\r\n    const accessToken = data.access_token as string\r\n    const tokenDuration = data.expires_in as number\r\n    const expiryTime = Date.now() + (tokenDuration * 1000)\r\n    const bungieMembershipId = data.membership_id as string\r\n\r\n    localStorage.setItem(ACCESS_TOKEN_STORAGE_KEY, accessToken)\r\n    localStorage.setItem(ACCESS_TOKEN_EXPIRY_STORAGE_KEY, expiryTime.toString())\r\n    localStorage.setItem(BUNGIE_MEMBERSHIP_ID_STORAGE_KEY, bungieMembershipId)\r\n\r\n    // 254 = all memberships\r\n    const destinyMembershipsResponse = await getMembershipDataById(bungieAuthedFetch, { membershipId: bungieMembershipId, membershipType: 254 })\r\n    const destinyMemberships = destinyMembershipsResponse.Response.destinyMemberships\r\n    localStorage.setItem(DESTINY_MEMBERSHIPS_STORAGE_KEY, JSON.stringify(destinyMemberships))\r\n\r\n    // If there is only one membership, select it automatically\r\n    if (destinyMemberships.length === 1) {\r\n      setSelectedDestinyMembership(destinyMemberships[0])\r\n    }\r\n\r\n    return { accessToken }\r\n  } else {\r\n    //return redirectToAuth()\r\n  }\r\n}\r\n\r\nconst fetchAuthToken = async (authCode: string) => {\r\n  console.log('fetchAuthToken', authCode)\r\n  clearStorage()\r\n  const tokenResponse = await fetch(BUNGIE_OAUTH_TOKEN_URL, {\r\n    method: 'POST',\r\n    cache: 'no-cache',\r\n    credentials: 'include',\r\n    headers: {\r\n      'Content-Type': 'application/x-www-form-urlencoded'\r\n    },\r\n    redirect: 'follow',\r\n    referrer: 'no-referrer',\r\n    body: `grant_type=authorization_code&code=${authCode}&client_id=${BUNGIE_OAUTH_CLIENT_ID}`\r\n  })\r\n  return await handleTokenResponse(tokenResponse)\r\n}\r\n\r\nexport const getAccessToken = () => {\r\n  return localStorage.getItem(ACCESS_TOKEN_STORAGE_KEY)\r\n}\r\n\r\nexport const hasValidAuth = () => {\r\n  const accessToken = getAccessToken()\r\n  const accessTokenExpiryTime = parseInt(localStorage.getItem(ACCESS_TOKEN_EXPIRY_STORAGE_KEY) || '-1', 10)\r\n  const bungieMembershipId = localStorage.getItem(BUNGIE_MEMBERSHIP_ID_STORAGE_KEY)\r\n  if (!accessToken || Date.now() >= accessTokenExpiryTime || !bungieMembershipId) return false\r\n  return true\r\n}\r\n\r\nexport const getDestinyMemberships = () => {\r\n  const destinyMembershipsString = localStorage.getItem(DESTINY_MEMBERSHIPS_STORAGE_KEY)\r\n  try {\r\n    if (destinyMembershipsString)\r\n      return JSON.parse(destinyMembershipsString) as UserInfoCard[]\r\n  } catch (e) {\r\n    console.error(`Error loading destiny memberships`, e.message)\r\n  }\r\n  return undefined\r\n}\r\n\r\nexport const hasDestinyMemberships = () => {\r\n  return !!getDestinyMemberships()\r\n}\r\n\r\nexport const getSelectedDestinyMembership = () => {\r\n  const destinyMembershipString = localStorage.getItem(DESTINY_MEMBERSHIP_STORAGE_KEY)\r\n  try {\r\n    if (destinyMembershipString)\r\n      return JSON.parse(destinyMembershipString) as UserInfoCard\r\n  } catch (e) {\r\n    console.error('Error loading destiny membership', e.message)\r\n  }\r\n  return undefined\r\n}\r\n\r\nexport const hasSelectedDestinyMembership = () => {\r\n  return !!getSelectedDestinyMembership()\r\n}\r\n\r\nexport const setSelectedDestinyMembership = (membership: UserInfoCard) => {\r\n  localStorage.setItem(DESTINY_MEMBERSHIP_STORAGE_KEY, JSON.stringify(membership))\r\n}\r\n\r\nexport const auth = async () => {\r\n\r\n  const queryParams = new URLSearchParams(window.location.search)\r\n  const authCode = queryParams.get('code')\r\n\r\n  if (authCode && !hasValidAuth()) {\r\n    console.log('Fetching access token with auth code')\r\n    await fetchAuthToken(authCode)\r\n  }\r\n\r\n  if (authCode) {\r\n    window.location.replace(`${window.location.origin}${window.location.pathname}`)\r\n  }\r\n\r\n  if (hasValidAuth()) {\r\n    return true\r\n  }\r\n\r\n  console.log('Redirecting to fresh authentication for missing or expired access token')\r\n  clearStorage()\r\n  redirectToAuth()\r\n}","export const ITEM_SLOT_BUCKET_HASHES = {\r\n  kinetic: 1498876634,\r\n  energy: 2465295065,\r\n  power: 953998645,\r\n  head: 3448274439,\r\n  gloves: 3551918588,\r\n  chest: 14239492,\r\n  legs: 20886954,\r\n  classItem: 1585787867,\r\n}","import { PowerBySlot, JoinedItemDefinition, CharacterData } from \"../types\";\r\nimport { ITEM_SLOT_BUCKET_HASHES } from \"../constants\";\r\nimport { getProfile, DestinyItemComponent } from \"bungie-api-ts/destiny2\";\r\nimport { bungieAuthedFetch, getManifest } from \"./bungie-api\";\r\nimport { getSelectedDestinyMembership, auth } from \"./bungie-auth\";\r\n\r\nexport const getOverallPower = (powerBySlot: PowerBySlot) =>\r\n  Object.values(powerBySlot)\r\n    .reduce((sum, power) => sum + power, 0)\r\n  / Object.keys(ITEM_SLOT_BUCKET_HASHES).length\r\n\r\nexport const getDropEfficiency = (maxPowerBySlot: PowerBySlot, dropPowerIncrease: number = 0) => {\r\n  const base = getOverallPower(maxPowerBySlot)\r\n  const dropPower = Math.floor(base + dropPowerIncrease)\r\n  const overallPerSlotChanges = Object.keys(ITEM_SLOT_BUCKET_HASHES)\r\n    .reduce((changes, slotName) => ({\r\n      ...changes,\r\n      [slotName]: Math.max(0, getOverallPower({ ...maxPowerBySlot, [slotName]: dropPower }) - base),\r\n    }), {} as PowerBySlot)\r\n  return getOverallPower(overallPerSlotChanges)\r\n}\r\n\r\nconst CLASS_TYPE_ALL = 3\r\nconst CLASS_NAMES = ['titan', 'hunter', 'warlock']\r\nconst ITEM_TYPE_ARMOR = 2\r\nconst ITEM_TYPE_WEAPON = 3\r\n\r\nconst getBasicProfile = (membershipType: number, membershipId: string) => getProfile(bungieAuthedFetch, {\r\n  membershipType: membershipType,\r\n  destinyMembershipId: membershipId,\r\n  components: [\r\n    200, // DestinyComponentType.Characters,\r\n    205, // DestinyComponentType.CharacterEquipment,\r\n  ]\r\n})\r\n\r\nconst getAdditionalProfile = (membershipType: number, membershipId: string) => getProfile(bungieAuthedFetch, {\r\n  membershipType: membershipType,\r\n  destinyMembershipId: membershipId,\r\n  components: [\r\n    201, // DestinyComponentType.CharacterInventories,\r\n    102, // DestinyComponentType.ProfileInventories,\r\n    300, // DestinyComponentType.ItemInstances,\r\n    307, // DestinyComponentType.ItemCommonData\r\n  ]\r\n})\r\n\r\nconst getCombinedProfile = async (membershipType: number, membershipId: string, pendingBasicProfile?: ReturnType<typeof getBasicProfile>) => {\r\n  const actualPendingBasicProfile = pendingBasicProfile || getBasicProfile(membershipType, membershipId)\r\n  const pendingAdditionalProfile = getAdditionalProfile(membershipType, membershipId)\r\n  const [basicProfile, additionalProfile] = await Promise.all([actualPendingBasicProfile, pendingAdditionalProfile])\r\n  if (!basicProfile || !basicProfile.Response) return undefined\r\n  if (!additionalProfile || !additionalProfile.Response) return undefined\r\n  return { ...basicProfile.Response, ...additionalProfile.Response }\r\n}\r\n\r\nexport const getBasicCharacterData = async (pendingBasicProfile: ReturnType<typeof getBasicProfile>) => {\r\n  const profile = await pendingBasicProfile\r\n  if (!profile || !profile.Response || !profile.Response.characters) return\r\n  const characters = profile.Response.characters.data\r\n\r\n  if (characters) {\r\n    const getDataForCharacterId = (id: string): CharacterData => {\r\n      const character = characters[id]\r\n      const className = CLASS_NAMES[character.classType]\r\n      return {\r\n        character,\r\n        id,\r\n        className,\r\n        overallPower: character.light,\r\n        maxPowerBySlot: Object.keys(ITEM_SLOT_BUCKET_HASHES)\r\n          .reduce((slots, slotName) => ({ ...slots, [slotName]: character.light }), {} as { [key: string]: number })\r\n      }\r\n    }\r\n\r\n    const characterIds = Object.keys(characters)\r\n    const characterData = characterIds.map(id => getDataForCharacterId(id))\r\n    return characterData\r\n  }\r\n};\r\n\r\nexport const getCharacterData = async (\r\n  setCharacterData: (state: CharacterData[]) => any,\r\n  setIsFetchingCharacterData: (state: boolean) => any,\r\n  returnBasicCharacterData: boolean = false\r\n) => {\r\n  try {\r\n\r\n    const isAuthed = await auth()\r\n    if (!isAuthed) return\r\n\r\n    const pendingManifest = getManifest()\r\n\r\n    setIsFetchingCharacterData(true)\r\n\r\n    const destinyMembership = getSelectedDestinyMembership()\r\n    if (!destinyMembership) return\r\n\r\n    const pendingBasicProfile = getBasicProfile(destinyMembership.membershipType, destinyMembership.membershipId)\r\n    pendingBasicProfile.catch(() => {})\r\n\r\n    // Flag lets this be disabled to prevent setting after full profile is returned\r\n    let shouldSetBasicCharacterData = true\r\n    // Produce basic data if flag is set\r\n    if (returnBasicCharacterData) {\r\n      const pendingBasicCharacterData = getBasicCharacterData(pendingBasicProfile)\r\n        .catch(e => {});\r\n      (async () => {\r\n        const basicCharacterData = await pendingBasicCharacterData\r\n        if (basicCharacterData && shouldSetBasicCharacterData) { setCharacterData(basicCharacterData) }\r\n      })();\r\n    }\r\n\r\n    const fullProfile = await getCombinedProfile(\r\n      destinyMembership.membershipType,\r\n      destinyMembership.membershipId,\r\n      pendingBasicProfile,\r\n    )\r\n    setIsFetchingCharacterData(false)\r\n\r\n    if (!fullProfile\r\n      || !fullProfile.characters || !fullProfile.characters.data\r\n      || !fullProfile.characterEquipment || !fullProfile.characterEquipment.data\r\n      || !fullProfile.characterInventories || !fullProfile.characterInventories.data\r\n      || !fullProfile.profileInventory || !fullProfile.profileInventory.data\r\n      || !fullProfile.itemComponents || !fullProfile.itemComponents.instances || !fullProfile.itemComponents.instances.data) return\r\n\r\n    const characters = fullProfile.characters.data\r\n    const characterEquipments = fullProfile.characterEquipment.data\r\n    const characterInventories = fullProfile.characterInventories.data\r\n    const profileInventories = fullProfile.profileInventory.data\r\n    const itemInstances = fullProfile.itemComponents.instances.data\r\n\r\n    const manifest = await pendingManifest\r\n\r\n    if (!manifest) return\r\n\r\n    const mergeItems = <T extends { [key: string]: { items: DestinyItemComponent[] } }>(characterItemMap: T) => {\r\n      return Object.values(characterItemMap)\r\n        .reduce((allItems, characterItems) => allItems.concat(characterItems.items), [] as DestinyItemComponent[])\r\n    }\r\n\r\n    const allCharacterItems = mergeItems(characterInventories).concat(mergeItems(characterEquipments))\r\n    const allCharacterWeapons = allCharacterItems.filter(i => {\r\n      const itemDefinition = i.itemHash && manifest.DestinyInventoryItemDefinition[i.itemHash]\r\n      return itemDefinition && itemDefinition.itemType === ITEM_TYPE_WEAPON\r\n    })\r\n\r\n    const getDataForCharacterId = (id: string): CharacterData => {\r\n      const character = characters[id]\r\n      const className = CLASS_NAMES[character.classType]\r\n\r\n      const mapAndFilterItems = (items: DestinyItemComponent[]) => items\r\n        .map(item => {\r\n          const instanceData = item.itemInstanceId ? itemInstances[item.itemInstanceId] : undefined\r\n          const itemDefinition = manifest.DestinyInventoryItemDefinition[item.itemHash]\r\n          return {\r\n            ...item,\r\n            instanceData,\r\n            itemDefinition,\r\n          }\r\n        })\r\n        .filter(i => i.instanceData && i.itemDefinition && [ITEM_TYPE_ARMOR, ITEM_TYPE_WEAPON].includes(i.itemDefinition.itemType))\r\n\r\n      const characterItems = mapAndFilterItems(\r\n        characterInventories[id].items\r\n          .concat(characterEquipments[id].items)\r\n          .concat(allCharacterWeapons)\r\n      )\r\n      const profileItems = mapAndFilterItems(profileInventories.items)\r\n        .filter(i => i.itemDefinition && (i.itemDefinition.classType === CLASS_TYPE_ALL || i.itemDefinition.classType === character.classType))\r\n\r\n      const combinedItems = characterItems.concat(profileItems)\r\n      const armor = combinedItems.filter(i => i.itemDefinition && i.itemDefinition.itemType === ITEM_TYPE_ARMOR)\r\n      const weapons = combinedItems.filter(i => i.itemDefinition && i.itemDefinition.itemType === ITEM_TYPE_WEAPON)\r\n\r\n      ;(window as any).weapons = weapons\r\n      ;(window as any).armor = armor\r\n\r\n      const itemsBySlot = Object.entries(ITEM_SLOT_BUCKET_HASHES)\r\n        .reduce((slots, [slotName, slotBucketHash]) => ({\r\n          ...slots,\r\n          [slotName]: combinedItems\r\n            .filter(i => i.itemDefinition && i.itemDefinition.inventory.bucketTypeHash === slotBucketHash)\r\n        }), {} as { [key: string]: JoinedItemDefinition[] })\r\n\r\n      const maxPowerBySlot = Object.entries(itemsBySlot)\r\n        .reduce((slots, [slotName, items]) => {\r\n          return {\r\n            ...slots,\r\n            [slotName]: Math.max(...items\r\n              .map(i => i.instanceData ? i.instanceData.primaryStat.value : 0))\r\n          }\r\n        }, {} as { [key: string]: number })\r\n\r\n      const getBestItemForSlot = (slotName: string) => {\r\n        const maxPowerForSlot = maxPowerBySlot[slotName]\r\n        const maxPowerItemsForSlot = itemsBySlot[slotName].filter(i => i.instanceData && i.instanceData.primaryStat.value === maxPowerForSlot)\r\n        if (maxPowerItemsForSlot.length === 1) return maxPowerItemsForSlot[0]\r\n        const equippedItems = maxPowerItemsForSlot.filter(i => characterEquipments[id].items.some(ci => ci.itemInstanceId === i.itemInstanceId))\r\n        if (equippedItems.length === 1) return equippedItems[0]\r\n        return maxPowerItemsForSlot[0]\r\n      }\r\n\r\n      const bestItemBySlot = Object.keys(ITEM_SLOT_BUCKET_HASHES)\r\n        .reduce((slots, slotName) => ({\r\n          ...slots,\r\n          [slotName]: getBestItemForSlot(slotName),\r\n        }), {} as { [key: string]: JoinedItemDefinition })\r\n\r\n      const overallPower = getOverallPower(maxPowerBySlot)\r\n\r\n      return {\r\n        character,\r\n        id,\r\n        className,\r\n        itemsBySlot,\r\n        maxPowerBySlot,\r\n        overallPower,\r\n        bestItemBySlot,\r\n      }\r\n    }\r\n\r\n    const characterIds = Object.keys(characters)\r\n    const characterData = characterIds.map(id => getDataForCharacterId(id))\r\n    shouldSetBasicCharacterData = false\r\n    setCharacterData(characterData)\r\n\r\n  } catch (e) {\r\n    console.error(`Error fetching manifest and character data`, e)\r\n    setIsFetchingCharacterData(false)\r\n    return\r\n  }\r\n\r\n}","import React from 'react'\r\nimport classnames from 'classnames'\r\n\r\nimport { CharacterData } from \"../types\";\r\n\r\nimport STYLES from './CharacterDisplay.module.scss'\r\n\r\ninterface CharacterDisplayProps {\r\n  data: CharacterData\r\n}\r\n\r\nconst titleCase = (text: string) => text.substr(0, 1).toUpperCase() + text.substr(1)\r\n\r\ninterface BarProps {\r\n  min: number\r\n  max: number\r\n  value: number\r\n  avgValue: number\r\n  label: string\r\n  icon?: string\r\n}\r\nconst Bar = ({ min, max, value, avgValue, label, icon }: BarProps) => {\r\n  const range = max - min\r\n  const perc = Math.floor(((value - min) / range) * 1000) / 10\r\n  const avgPerc = Math.floor(((avgValue - min) / range) * 1000) / 10\r\n  // const plusTwoPerc = Math.floor(((avgValue + 2 - min) / range) * 1000) / 10\r\n  // const plusFivePerc = Math.floor(((avgValue + 5 - min) / range) * 1000) / 10\r\n  return (\r\n    <div className={STYLES.barWrapper}>\r\n      <div className={STYLES.iconWrapper}>{\r\n        icon && <img className={STYLES.icon} src={`https://www.bungie.net${icon}`} alt={label} />\r\n      }</div>\r\n      <div className={STYLES.barContainer}>\r\n        <div className={STYLES.filledBar} style={{width: `${perc}%`}}><span>{label}</span></div>\r\n        <div className={STYLES.barLine} style={{left: `${avgPerc}%`}} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst CharacterDisplay = ({ data }: CharacterDisplayProps) => {\r\n\r\n  const classItemNames: { [key: string]: string } = {\r\n    warlock: 'Warlock Bond',\r\n    hunter: 'Hunter Cloak',\r\n    titan: 'Titan Mark',\r\n  }\r\n  const slotFullNames: { [key: string]: string } = {\r\n    kinetic: 'Kinetic Weapon',\r\n    energy: 'Energy Weapon',\r\n    power: 'Power Weapon',\r\n    head: 'Helmet',\r\n    gloves: 'Gauntlets',\r\n    chest: 'Chest Armor',\r\n    legs: 'Leg Armor',\r\n    classItem: classItemNames[data.className],\r\n  }\r\n\r\n  const rgbString = ({ red, green, blue }: {red:number, green: number, blue: number}) => `rgb(${red},${green},${blue})`\r\n\r\n  // Round to 50s\r\n  const minItemPower = Math.min(...Object.values(data.maxPowerBySlot))\r\n  const minPowerToDisplay = Math.max(Math.floor(minItemPower/50)*50 - 50, 0)\r\n  const maxItemPower = Math.max(...Object.values(data.maxPowerBySlot))\r\n  const maxPowerToDisplay = Math.min(Math.ceil(maxItemPower/50)*50, 750)\r\n\r\n  const roundedPower = Math.floor(data.overallPower)\r\n\r\n  const range = maxPowerToDisplay - minPowerToDisplay\r\n  const perc = Math.floor(((roundedPower - minPowerToDisplay) / range) * 1000) / 10\r\n\r\n  return (\r\n    <div className={classnames(STYLES.characterDisplay, STYLES[`class_${data.className}`])} style={{backgroundColor:rgbString(data.character.emblemColor)}}>\r\n      <div className={STYLES.header}>\r\n        <img className={STYLES.emblemBackground} src={`https://www.bungie.net${data.character.emblemBackgroundPath}`} alt='' />\r\n        <div className={STYLES.name}>{titleCase(data.className)}</div>\r\n        <div className={STYLES.power}>{roundedPower}</div>\r\n      </div>\r\n      <div className={STYLES.powerBars}>\r\n        <div className={STYLES.powerRange}>\r\n          <div className={STYLES.minPower}>{minPowerToDisplay}</div>\r\n          <div className={STYLES.rangeLine} />\r\n          <div className={STYLES.maxPower}>{maxPowerToDisplay}</div>\r\n        </div>\r\n        <div className={STYLES.bars}>\r\n          {Object.entries(data.maxPowerBySlot).map(([slotName, power]) => {\r\n            const bestItem = data.bestItemBySlot && data.bestItemBySlot[slotName]\r\n            return (\r\n              <Bar\r\n                key={`${data.id}_${slotName}`}\r\n                min={minPowerToDisplay}\r\n                max={maxPowerToDisplay}\r\n                value={power}\r\n                avgValue={roundedPower}\r\n                label={`${power} ${slotFullNames[slotName] || slotName}`}\r\n                icon={bestItem && bestItem.itemDefinition && bestItem.itemDefinition.displayProperties.icon}\r\n              />\r\n            )\r\n          })}\r\n        </div>\r\n        <div className={STYLES.powerLabel}>\r\n          <div className={STYLES.indicator} style={{left: `${perc}%`}}>{roundedPower}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default CharacterDisplay","import React from 'react'\nimport { UserInfoCard } from 'bungie-api-ts/user';\nimport classnames from 'classnames'\n\nimport STYLES from './MembershipSelect.module.scss'\nimport { getDestinyMemberships } from '../services/bungie-auth';\n\ninterface MembershipSelectProps {\n  onMembershipSelect: (membership: UserInfoCard) => any\n}\n\nconst MembershipSelect = ({ onMembershipSelect }: MembershipSelectProps) => {\n\n  const destinyMemberships = getDestinyMemberships()\n\n  if (!destinyMemberships) return null\n\n  if (destinyMemberships.length === 0) {\n    return <div>No destiny memberships!</div>\n  }\n\n  const PLATFORMS: { [key: number]: string } = {\n    1: 'xbox',\n    2: 'psn',\n    4: 'blizzard'\n  }\n\n  return (\n    <div className={STYLES.membershipSelect}>\n      {destinyMemberships.map(m => {\n        return (\n          <div\n            key={m.membershipId}\n            className={classnames(STYLES.membership, STYLES[`platform_${PLATFORMS[m.membershipType]}`])}\n            onClick={() => onMembershipSelect(m)}>\n            {m.displayName}\n          </div>\n        )\n      })}\n    </div>\n  )\n\n}\n\nexport default MembershipSelect","import React from 'react'\n\nimport STYLES from './LoadingSpinner.module.scss'\n\ninterface LoadingSpinnerProps {\n  status: string\n}\n\nconst LoadingSpinner = ({ status }: LoadingSpinnerProps) => {\n  return (\n    <div className={STYLES.loadingSpinnerContainer}>\n      <div className={STYLES.anchor}>\n        <div className={STYLES.spinnerLarge} />\n        <div className={STYLES.spinnerSmall} />\n        <div className={STYLES.status}>{status}</div>\n      </div>\n    </div>\n  )\n}\n\nexport default LoadingSpinner","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"anchor\":\"LoadingSpinner_anchor__78Pnm\",\"spinner\":\"LoadingSpinner_spinner__32tWn\",\"spin\":\"LoadingSpinner_spin__3FVoi\",\"loadingSpinnerContainer\":\"LoadingSpinner_loadingSpinnerContainer__2QV5S\",\"spinnerLarge\":\"LoadingSpinner_spinnerLarge__KooL0\",\"spinnerSmall\":\"LoadingSpinner_spinnerSmall__27lWl\",\"status\":\"LoadingSpinner_status__3sgCR\"};"],"sourceRoot":""}