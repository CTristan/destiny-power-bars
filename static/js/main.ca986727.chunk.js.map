{"version":3,"sources":["components/CharacterDisplay.module.scss","services/bungie-api.ts","services/bungie-auth.ts","constants.ts","services/utils.ts","components/CharacterDisplay.tsx","App.tsx","serviceWorker.ts","index.tsx","App.module.scss"],"names":["module","exports","characterDisplay","header","emblemBackground","name","power","powerBars","powerRange","rangeLine","powerLabel","indicator","barContainer","barLine","filledBar","cachedManifestData","bungieAuthedFetch","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","config","accessToken","headers","url","response","wrap","_context","prev","next","localStorage","getItem","ACCESS_TOKEN_STORAGE_KEY","x-api-key","BUNGIE_API_KEY","Authorization","concat","console","log","params","entries","map","_ref2","_ref3","slicedToArray","key","value","encodeURIComponent","fetch","sent","abrupt","json","t0","error","stop","_x","apply","this","arguments","manifestPropertyWhitelist","getCachedManifestData","_ref4","_callee2","manifestData","_context2","get","getRemoteManifestData","_ref5","_callee3","manifest","version","manifestDataResponse","_context3","jsonWorldContentPaths","en","keys","forEach","includes","set","setItem","_x2","getManifest","_ref6","_callee4","localStorageManifestVersion","freshManifestData","_context4","getDestinyManifest","Response","window","location","search","undefined","clearStorage","removeItem","handleTokenResponse","tokenResponse","data","tokenDuration","expiryTime","bungieMembershipId","destinyMemberships","destinyMembershipId","_args","length","status","access_token","expires_in","Date","now","membership_id","toString","getMembershipDataById","membershipId","membershipType","fetchAuthToken","authCode","method","cache","credentials","Content-Type","redirect","referrer","body","hasValidAuth","accessTokenExpiryTime","parseInt","auth","codeInQuery","exec","replace","ITEM_SLOT_BUCKET_HASHES","kinetic","energy","head","gloves","chest","legs","classItem","getOverallPower","powerBySlot","values","reduce","sum","getCharacterData","setCharacterData","setIsFetchingCharacterData","setIsFetchingManifest","manifestPromise","profile","characters","characterEquipments","characterInventories","profileInventories","itemInstances","classNames","ITEM_TYPE_ARMOR","ITEM_TYPE_WEAPON","mergeItems","allCharacterItems","allCharacterWeapons","_getCharacterData","characterIds","characterData","finally","getProfile","components","characterEquipment","profileInventory","itemComponents","instances","characterItemMap","allItems","characterItems","items","filter","i","itemDefinition","itemHash","DestinyInventoryItemDefinition","itemType","id","character","className","classType","mapAndFilterItems","item","instanceData","itemInstanceId","objectSpread","profileItems","combinedItems","armor","weapons","itemsBySlot","slots","slotName","slotBucketHash","defineProperty","inventory","bucketTypeHash","maxPowerBySlot","Math","max","toConsumableArray","primaryStat","overallPower","equipments","inventories","_x3","Bar","min","avgValue","label","range","perc","floor","avgPerc","react_default","createElement","STYLES","style","width","left","CharacterDisplay","text","slotFullNames","warlock","hunter","titan","minItemPower","minPowerToDisplay","maxItemPower","maxPowerToDisplay","ceil","roundedPower","classnames","backgroundColor","red","green","blue","rgbString","emblemColor","src","emblemBackgroundPath","alt","substr","toUpperCase","minPower","maxPower","bars","CharacterDisplay_Bar","App","_useState","useState","_useState2","isAuthed","setIsAuthed","useEffect","doAuth","_useState3","_useState4","isFetchingManifest","_useState5","_useState6","isFetchingCharacterData","_useState7","_useState8","doGetCharacterData","setInterval","charactersContainer","c","components_CharacterDisplay","loadingStatus","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ca986727.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"characterDisplay\":\"CharacterDisplay_characterDisplay__3LJ6S\",\"header\":\"CharacterDisplay_header__16L7B\",\"emblemBackground\":\"CharacterDisplay_emblemBackground__2jqgs\",\"name\":\"CharacterDisplay_name__3Aw12\",\"power\":\"CharacterDisplay_power__EMI5z\",\"powerBars\":\"CharacterDisplay_powerBars__1ncJP\",\"powerRange\":\"CharacterDisplay_powerRange__lEkeP\",\"rangeLine\":\"CharacterDisplay_rangeLine__14_WH\",\"powerLabel\":\"CharacterDisplay_powerLabel__36Pf6\",\"indicator\":\"CharacterDisplay_indicator__2jPQU\",\"barContainer\":\"CharacterDisplay_barContainer__btRVR\",\"barLine\":\"CharacterDisplay_barLine__V3SXF\",\"filledBar\":\"CharacterDisplay_filledBar__2r5Ry\"};","import { get, set } from 'idb-keyval'\n\nimport { BUNGIE_API_KEY, ACCESS_TOKEN_STORAGE_KEY } from './bungie-auth';\nimport { HttpClientConfig, getDestinyManifest, DestinyManifest, DestinyInventoryItemDefinition } from 'bungie-api-ts/destiny2'\n\nexport const bungieAuthedFetch = async (config: HttpClientConfig) => {\n  try {\n    const accessToken = localStorage.getItem(ACCESS_TOKEN_STORAGE_KEY)\n    const headers: { [key: string]: string } = { 'x-api-key': BUNGIE_API_KEY }\n    if (accessToken) headers.Authorization = `Bearer ${accessToken}`\n    console.log(config)\n    const url = `${config.url}${\n      config.params\n        ? '?' + Object.entries(config.params).map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value as string)}`)\n        : ''\n      }`\n    const response = await fetch(url, { headers })\n    return response.json()\n  } catch (e) {\n    console.error(e)\n    return {}\n  }\n}\n\nconst MANIFEST_VERSION_KEY = 'MANIFEST_VERSION'\nconst MANIFEST_IDB_KEY = 'MANIFEST_DATA'\ninterface ManifestData {\n  DestinyInventoryItemDefinition: { [key: string]: DestinyInventoryItemDefinition | undefined }\n}\nconst manifestPropertyWhitelist = ['DestinyInventoryItemDefinition']\n\nconst getCachedManifestData = async () => {\n  console.log('Loading manifest data from IDB')\n  const manifestData = await get(MANIFEST_IDB_KEY)\n  console.log('Finished loading manifest data from IDB')\n  return manifestData as ManifestData\n}\n\nconst getRemoteManifestData = async (manifest: DestinyManifest) => {\n  const version = manifest.version\n  console.log('Fetching fresh manifest data')\n  const manifestDataResponse = await fetch(`https://www.bungie.net${manifest.jsonWorldContentPaths.en}`)\n  const manifestData = await manifestDataResponse.json()\n  console.log('Pruning manifest data')\n  Object.keys(manifestData).forEach(key => {\n    if (!manifestPropertyWhitelist.includes(key)) delete manifestData[key]\n  })\n  console.log('Storing manifest data in IDB')\n  await set(MANIFEST_IDB_KEY, manifestData)\n  localStorage.setItem(MANIFEST_VERSION_KEY, version)\n  return manifestData\n}\n\nlet cachedManifestData: ManifestData | undefined\n\nexport const getManifest = async (): Promise<ManifestData> => {\n  const manifest = await getDestinyManifest(bungieAuthedFetch)\n  const localStorageManifestVersion = localStorage.getItem(MANIFEST_VERSION_KEY)\n  if (manifest\n    && manifest.Response\n    && manifest.Response.version === localStorageManifestVersion\n    && !window.location.search.includes('updateManifest')) {\n    try {\n      if (!cachedManifestData)\n        cachedManifestData = await getCachedManifestData()\n      return cachedManifestData\n    } catch (e) {\n      console.error(e)\n    }\n  }\n  cachedManifestData = undefined\n  const freshManifestData = await getRemoteManifestData(manifest.Response)\n  cachedManifestData = freshManifestData\n  return freshManifestData\n}","import { getMembershipDataById } from 'bungie-api-ts/user'\r\nimport { bungieAuthedFetch } from './bungie-api';\r\n\r\nconst isDev = process.env.NODE_ENV === 'development'\r\nexport const BUNGIE_API_KEY = isDev ? 'f7f184669f044a89b560fc5f71ed5d60' : 'd94be1e34632448fafdaf77c7afbb501'\r\nconst BUNGIE_OAUTH_AUTHORIZE_URL = 'https://www.bungie.net/en/OAuth/Authorize'\r\nconst BUNGIE_OAUTH_CLIENT_ID = isDev ? '26087' : '27213'\r\nconst BUNGIE_OAUTH_TOKEN_URL = 'https://www.bungie.net/platform/app/oauth/token/'\r\n\r\nexport const ACCESS_TOKEN_STORAGE_KEY = 'bungieAccessToken'\r\nexport const ACCESS_TOKEN_EXPIRY_STORAGE_KEY = 'bungieAccessTokenExpiryTime'\r\nexport const BUNGIE_MEMBERSHIP_ID_STORAGE_KEY = 'bungieMembershipId'\r\nexport const DESTINY_MEMBERSHIP_ID_STORAGE_KEY = 'destinyMembershipId'\r\n\r\nconst clearStorage = () => {\r\n  localStorage.removeItem(ACCESS_TOKEN_STORAGE_KEY);\r\n  localStorage.removeItem(ACCESS_TOKEN_EXPIRY_STORAGE_KEY);\r\n  localStorage.removeItem(BUNGIE_MEMBERSHIP_ID_STORAGE_KEY);\r\n  localStorage.removeItem(DESTINY_MEMBERSHIP_ID_STORAGE_KEY);\r\n}\r\n\r\nconst getAuthUrl = () => `${BUNGIE_OAUTH_AUTHORIZE_URL}?response_type=code&client_id=${BUNGIE_OAUTH_CLIENT_ID}`\r\n\r\nconst redirectToAuth = () => {\r\n  console.log('Redirect to auth')\r\n  clearStorage()\r\n  window.location.replace(getAuthUrl())\r\n}\r\n\r\nconst handleTokenResponse = async (tokenResponse: Response, redirect: boolean = false) => {\r\n  console.log('handleTokenResponse')\r\n  clearStorage()\r\n  if (tokenResponse.status === 200) {\r\n    const data = await tokenResponse.json()\r\n    console.log(data)\r\n    const accessToken = data.access_token as string\r\n    const tokenDuration = data.expires_in as number\r\n    const expiryTime = Date.now() + (tokenDuration * 1000)\r\n    const bungieMembershipId = data.membership_id as string\r\n\r\n    localStorage.setItem(ACCESS_TOKEN_STORAGE_KEY, accessToken)\r\n    localStorage.setItem(ACCESS_TOKEN_EXPIRY_STORAGE_KEY, expiryTime.toString())\r\n    localStorage.setItem(BUNGIE_MEMBERSHIP_ID_STORAGE_KEY, bungieMembershipId)\r\n\r\n    const destinyMemberships = await getMembershipDataById(bungieAuthedFetch, { membershipId: bungieMembershipId, membershipType: 254 })\r\n    const destinyMembershipId = destinyMemberships.Response.destinyMemberships[0].membershipId\r\n    localStorage.setItem(DESTINY_MEMBERSHIP_ID_STORAGE_KEY, destinyMembershipId)\r\n\r\n    return { accessToken, membershipId: destinyMembershipId }\r\n  } else {\r\n    //return redirectToAuth()\r\n  }\r\n}\r\n\r\nconst fetchAuthToken = async (authCode: string) => {\r\n  console.log('fetchAuthToken', authCode)\r\n  clearStorage()\r\n  const tokenResponse = await fetch(BUNGIE_OAUTH_TOKEN_URL, {\r\n    method: 'POST',\r\n    cache: 'no-cache',\r\n    credentials: 'include',\r\n    headers: {\r\n      'Content-Type': 'application/x-www-form-urlencoded'\r\n    },\r\n    redirect: 'follow',\r\n    referrer: 'no-referrer',\r\n    body: `grant_type=authorization_code&code=${authCode}&client_id=${BUNGIE_OAUTH_CLIENT_ID}`\r\n  })\r\n  return await handleTokenResponse(tokenResponse)\r\n}\r\n\r\nexport const hasValidAuth = () => {\r\n  const accessToken = localStorage.getItem(ACCESS_TOKEN_STORAGE_KEY)\r\n  const accessTokenExpiryTime = parseInt(localStorage.getItem(ACCESS_TOKEN_EXPIRY_STORAGE_KEY) || '-1', 10)\r\n  const bungieMembershipId = localStorage.getItem(BUNGIE_MEMBERSHIP_ID_STORAGE_KEY)\r\n  const destinyMembershipId = localStorage.getItem(DESTINY_MEMBERSHIP_ID_STORAGE_KEY)\r\n  if (!accessToken || Date.now() >= accessTokenExpiryTime || !bungieMembershipId || !destinyMembershipId) return false\r\n  return true\r\n}\r\n\r\nexport const auth = async () => {\r\n  const codeRegex = /code=([a-f0-9]+)/\r\n  const codeInQuery = codeRegex.exec(window.location.search)\r\n  let authCode = codeInQuery && codeInQuery[1]\r\n\r\n  if (authCode && !hasValidAuth()) {\r\n    console.log('Fetching access token with auth code')\r\n    await fetchAuthToken(authCode)\r\n  }\r\n\r\n  if (authCode) {\r\n    window.location.search = ''\r\n  }\r\n\r\n  if (!hasValidAuth()) {\r\n    console.log('Redirecting to fresh authentication for missing or expired access token')\r\n    clearStorage()\r\n    return redirectToAuth()\r\n  }\r\n\r\n  const accessToken = localStorage.getItem(ACCESS_TOKEN_STORAGE_KEY) as string\r\n  const membershipId = localStorage.getItem(DESTINY_MEMBERSHIP_ID_STORAGE_KEY) as string\r\n\r\n  return { accessToken, membershipId }\r\n}","export const ITEM_SLOT_BUCKET_HASHES = {\r\n  kinetic: 1498876634,\r\n  energy: 2465295065,\r\n  power: 953998645,\r\n  head: 3448274439,\r\n  gloves: 3551918588,\r\n  chest: 14239492,\r\n  legs: 20886954,\r\n  classItem: 1585787867,\r\n}","import { PowerBySlot, JoinedItemDefinition, CharacterData } from \"../types\";\r\nimport { ITEM_SLOT_BUCKET_HASHES } from \"../constants\";\r\nimport { getProfile, DestinyItemComponent } from \"bungie-api-ts/destiny2\";\r\nimport { getManifest, bungieAuthedFetch } from \"./bungie-api\";\r\nimport { DESTINY_MEMBERSHIP_ID_STORAGE_KEY } from \"./bungie-auth\";\r\n\r\nexport const getOverallPower = (powerBySlot: PowerBySlot) =>\r\n  Object.values(powerBySlot)\r\n    .reduce((sum, power) => sum + power, 0)\r\n  / Object.keys(ITEM_SLOT_BUCKET_HASHES).length\r\n\r\nexport const getDropEfficiency = (maxPowerBySlot: PowerBySlot, dropPowerIncrease: number = 0) => {\r\n  const base = getOverallPower(maxPowerBySlot)\r\n  const dropPower = Math.floor(base + dropPowerIncrease)\r\n  const overallPerSlotChanges = Object.keys(ITEM_SLOT_BUCKET_HASHES)\r\n    .reduce((changes, slotName) => ({\r\n      ...changes,\r\n      [slotName]: Math.max(0, getOverallPower({ ...maxPowerBySlot, [slotName]: dropPower }) - base),\r\n    }), {} as PowerBySlot)\r\n  return getOverallPower(overallPerSlotChanges)\r\n}\r\n\r\n\r\nexport const getCharacterData = async (\r\n  setCharacterData: (state: CharacterData[]) => any,\r\n  setIsFetchingCharacterData: (state: boolean) => any,\r\n  setIsFetchingManifest: (state: boolean) => any,\r\n) => {\r\n\r\n  setIsFetchingManifest(true)\r\n  const manifestPromise = getManifest()\r\n  manifestPromise.finally(() => setIsFetchingManifest(false))\r\n\r\n  setIsFetchingCharacterData(true)\r\n  const destinyMembershipId = localStorage.getItem(DESTINY_MEMBERSHIP_ID_STORAGE_KEY) as string\r\n  const profile = await getProfile(bungieAuthedFetch, {\r\n    membershipType: 4,\r\n    destinyMembershipId,\r\n    components: [\r\n      200, // DestinyComponentType.Characters,\r\n      205, // DestinyComponentType.CharacterEquipment,\r\n      201, // DestinyComponentType.CharacterInventories,\r\n      102, // DestinyComponentType.ProfileInventories,\r\n      300, // DestinyComponentType.ItemInstances,\r\n      307, // DestinyComponentType.ItemCommonData\r\n    ]\r\n  })\r\n  setIsFetchingCharacterData(false)\r\n\r\n  if (!profile || !profile.Response || !profile.Response.characters) return\r\n\r\n  const characters = profile.Response.characters.data\r\n  const characterEquipments = profile.Response.characterEquipment.data\r\n  const characterInventories = profile.Response.characterInventories.data\r\n  const profileInventories = profile.Response.profileInventory.data\r\n  const itemInstances = profile.Response.itemComponents.instances.data\r\n\r\n  const manifest = await manifestPromise\r\n\r\n  const CLASS_TYPE_ALL = 3\r\n  const classNames = ['titan', 'hunter', 'warlock']\r\n  const ITEM_TYPE_ARMOR = 2\r\n  const ITEM_TYPE_WEAPON = 3\r\n\r\n  if (characters && characterEquipments && characterInventories && profileInventories && itemInstances && manifest) {\r\n\r\n    const mergeItems = <T extends { [key: string]: { items: DestinyItemComponent[] } }>(characterItemMap: T) => {\r\n      return Object.values(characterItemMap)\r\n        .reduce((allItems, characterItems) => allItems.concat(characterItems.items), [] as DestinyItemComponent[])\r\n    }\r\n\r\n    const allCharacterItems = mergeItems(characterInventories).concat(mergeItems(characterEquipments))\r\n    const allCharacterWeapons = allCharacterItems.filter(i => {\r\n      const itemDefinition = i.itemHash && manifest.DestinyInventoryItemDefinition[i.itemHash]\r\n      return itemDefinition && itemDefinition.itemType === ITEM_TYPE_WEAPON\r\n    })\r\n\r\n    const getCharacterData = (id: string) => {\r\n      const character = characters[id]\r\n      const className = classNames[character.classType]\r\n\r\n      const mapAndFilterItems = (items: DestinyItemComponent[]) => items\r\n        .map(item => {\r\n          const instanceData = item.itemInstanceId ? itemInstances[item.itemInstanceId] : undefined\r\n          const itemDefinition = manifest.DestinyInventoryItemDefinition[item.itemHash]\r\n          return {\r\n            ...item,\r\n            instanceData,\r\n            itemDefinition,\r\n          }\r\n        })\r\n        .filter(i => i.instanceData && i.itemDefinition && [ITEM_TYPE_ARMOR, ITEM_TYPE_WEAPON].includes(i.itemDefinition.itemType))\r\n\r\n      const characterItems = mapAndFilterItems(\r\n        characterInventories[id].items\r\n          .concat(characterEquipments[id].items)\r\n          .concat(allCharacterWeapons)\r\n      )\r\n      const profileItems = mapAndFilterItems(profileInventories.items)\r\n        .filter(i => i.itemDefinition && (i.itemDefinition.classType === CLASS_TYPE_ALL || i.itemDefinition.classType === character.classType))\r\n\r\n      const combinedItems = characterItems.concat(profileItems)\r\n      const armor = combinedItems.filter(i => i.itemDefinition && i.itemDefinition.itemType === ITEM_TYPE_ARMOR)\r\n      const weapons = combinedItems.filter(i => i.itemDefinition && i.itemDefinition.itemType === ITEM_TYPE_WEAPON)\r\n\r\n      ;(window as any).weapons = weapons\r\n      ;(window as any).armor = armor\r\n\r\n      const itemsBySlot = Object.entries(ITEM_SLOT_BUCKET_HASHES)\r\n        .reduce((slots, [slotName, slotBucketHash]) => ({\r\n          ...slots,\r\n          [slotName]: combinedItems\r\n            .filter(i => i.itemDefinition && i.itemDefinition.inventory.bucketTypeHash === slotBucketHash)\r\n        }), {} as { [key: string]: JoinedItemDefinition[] })\r\n\r\n      const maxPowerBySlot = Object.entries(itemsBySlot)\r\n        .reduce((slots, [slotName, items]) => {\r\n          return {\r\n            ...slots,\r\n            [slotName]: Math.max(...items\r\n              .map(i => i.instanceData ? i.instanceData.primaryStat.value : 0))\r\n          }\r\n        }, {} as { [key: string]: number })\r\n\r\n      const overallPower = getOverallPower(maxPowerBySlot)\r\n\r\n      return {\r\n        character,\r\n        id,\r\n        className,\r\n        itemsBySlot,\r\n        maxPowerBySlot,\r\n        overallPower,\r\n      }\r\n    }\r\n\r\n    const characterIds = Object.keys(characters)\r\n    console.log({ characters, equipments: characterEquipments, inventories: characterInventories })\r\n    const characterData = characterIds.map(id => getCharacterData(id))\r\n    setCharacterData(characterData)\r\n\r\n    console.log(characterData)\r\n  }\r\n\r\n}","import React from 'react'\r\nimport classnames from 'classnames'\r\n\r\nimport { CharacterData } from \"../types\";\r\n\r\nimport STYLES from './CharacterDisplay.module.scss'\r\n\r\ninterface CharacterDisplayProps {\r\n  data: CharacterData\r\n}\r\n\r\nconst titleCase = (text: string) => text.substr(0, 1).toUpperCase() + text.substr(1)\r\n\r\ninterface BarProps {\r\n  min: number\r\n  max: number\r\n  value: number\r\n  avgValue: number\r\n  label: string\r\n}\r\nconst Bar = ({ min, max, value, avgValue, label }: BarProps) => {\r\n  const range = max - min\r\n  const perc = Math.floor(((value - min) / range) * 1000) / 10\r\n  const avgPerc = Math.floor(((avgValue - min) / range) * 1000) / 10\r\n  const plusTwoPerc = Math.floor(((avgValue + 2 - min) / range) * 1000) / 10\r\n  const plusFivePerc = Math.floor(((avgValue + 5 - min) / range) * 1000) / 10\r\n  return <div className={STYLES.barContainer}>\r\n    <div className={STYLES.filledBar} style={{width: `${perc}%`}}><span>{label}</span></div>\r\n    <div className={STYLES.barLine} style={{left: `${avgPerc}%`}} />\r\n  </div>\r\n}\r\n\r\nconst CharacterDisplay = ({ data }: CharacterDisplayProps) => {\r\n\r\n  const classItemNames: { [key: string]: string } = {\r\n    warlock: 'Warlock Bond',\r\n    hunter: 'Hunter Cloak',\r\n    titan: 'Titan Mark',\r\n  }\r\n  const slotFullNames: { [key: string]: string } = {\r\n    kinetic: 'Kinetic Weapon',\r\n    energy: 'Energy Weapon',\r\n    power: 'Power Weapon',\r\n    head: 'Helmet',\r\n    gloves: 'Gauntlets',\r\n    chest: 'Chest Armor',\r\n    legs: 'Leg Armor',\r\n    classItem: classItemNames[data.className],\r\n  }\r\n\r\n  const rgbString = ({ red, green, blue }: {red:number, green: number, blue: number}) => `rgb(${red},${green},${blue})`\r\n\r\n  // Round to 50s\r\n  const minItemPower = Math.min(...Object.values(data.maxPowerBySlot))\r\n  const minPowerToDisplay = Math.max(Math.floor(minItemPower/50)*50 - 50, 0)\r\n  const maxItemPower = Math.max(...Object.values(data.maxPowerBySlot))\r\n  const maxPowerToDisplay = Math.min(Math.ceil(maxItemPower/50)*50, 750)\r\n\r\n  const roundedPower = Math.floor(data.overallPower)\r\n\r\n  const range = maxPowerToDisplay - minPowerToDisplay\r\n  const perc = Math.floor(((roundedPower - minPowerToDisplay) / range) * 1000) / 10\r\n\r\n  return (\r\n    <div className={classnames(STYLES.characterDisplay, STYLES[`class_${data.className}`])} style={{backgroundColor:rgbString(data.character.emblemColor)}}>\r\n      <div className={STYLES.header}>\r\n        <img className={STYLES.emblemBackground} src={`https://www.bungie.net${data.character.emblemBackgroundPath}`} alt='' />\r\n        <div className={STYLES.name}>{titleCase(data.className)}</div>\r\n        <div className={STYLES.power}>{roundedPower}</div>\r\n      </div>\r\n      <div className={STYLES.powerBars}>\r\n        <div className={STYLES.powerRange}>\r\n          <div className={STYLES.minPower}>{minPowerToDisplay}</div>\r\n          <div className={STYLES.rangeLine} />\r\n          <div className={STYLES.maxPower}>{maxPowerToDisplay}</div>\r\n        </div>\r\n        <div className={STYLES.bars}>\r\n          {Object.entries(data.maxPowerBySlot).map(([slotName, power]) =>\r\n            <Bar key={`${data.id}_${slotName}`} min={minPowerToDisplay} max={maxPowerToDisplay} value={power} avgValue={roundedPower} label={`${power} ${slotFullNames[slotName] || slotName}`} />\r\n          )}\r\n        </div>\r\n        <div className={STYLES.powerLabel}>\r\n          <div className={STYLES.indicator} style={{left: `${perc}%`}}>{roundedPower}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default CharacterDisplay","import React, { useState, useEffect } from 'react';\n\nimport { auth, hasValidAuth } from './services/bungie-auth';\nimport { CharacterData } from './types';\n\nimport { getCharacterData } from './services/utils';\nimport CharacterDisplay from './components/CharacterDisplay';\n\nimport 'normalize.css'\nimport STYLES from './App.module.scss'\n\nconst App = () => {\n\n  const [isAuthed, setIsAuthed] = useState<boolean>(hasValidAuth())\n  useEffect(() => {\n    const doAuth = async () => {\n      const authResult = await auth()\n      if (authResult) setIsAuthed(true)\n    }\n    if (!isAuthed) doAuth()\n  })\n\n  const [isFetchingManifest, setIsFetchingManifest] = useState<boolean>(false)\n  const [isFetchingCharacterData, setIsFetchingCharacterData] = useState<boolean>(false)\n  const [characterData, setCharacterData] = useState<CharacterData[]>([])\n  useEffect(() => {\n    const doGetCharacterData = () => getCharacterData(setCharacterData, setIsFetchingCharacterData, setIsFetchingManifest)\n    if (isAuthed) {\n      setInterval(doGetCharacterData, 10000)\n      doGetCharacterData()\n    }\n  }, [isAuthed])\n\n  let characterDisplay: JSX.Element | null = null\n  if (characterData && characterData.length > 0) {\n    return <div className={STYLES.App}>\n      <div className={STYLES.charactersContainer}>\n        <div className={STYLES.characters}>\n          {characterData.map(c => <CharacterDisplay key={c.id} data={c} />)}\n        </div>\n      </div>\n    </div>\n  }\n\n  return (\n    <div className={STYLES.App}>\n      <div className={STYLES.loadingStatus}>\n        <ul>\n          <li>{isAuthed ? 'Authed' : 'Not authed'}</li>\n          <li>{isFetchingManifest && 'Fetching manifest...'}</li>\n          <li>{isFetchingCharacterData && 'Fetching character data...'}</li>\n          <li>{characterData && characterData.length > 0 ? `Has character data (${characterData.length})` : 'No character data' }</li>\n        </ul>\n      </div>\n    </div>\n  )\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__4Taua\",\"charactersContainer\":\"App_charactersContainer__ht0bh\",\"characters\":\"App_characters__1pRqJ\",\"loadingStatus\":\"App_loadingStatus__34OS9\"};"],"sourceRoot":""}