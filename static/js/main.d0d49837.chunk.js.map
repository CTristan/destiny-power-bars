{"version":3,"sources":["components/LoadingSpinner.module.scss","App.module.scss","services/bungie-api.ts","App.tsx","services/bungie-auth.ts","constants.ts","components/CharacterDisplay.tsx","components/LoadingSpinner.tsx","components/MembershipSelect.tsx","services/utils.ts","serviceWorker.ts","index.tsx","components/CharacterDisplay.module.scss","components/MembershipSelect.module.scss"],"names":["module","exports","anchor","spinner","spin","loadingSpinnerContainer","spinnerLarge","spinnerSmall","status","App","loadingContainer","charactersContainer","characters","loadingStatus","cachedManifestData","getManifestPromise","characterDataRefreshTimer","bungieAuthedFetch","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","config","accessToken","headers","url","response","wrap","_context","prev","next","getAccessToken","x-api-key","BUNGIE_API_KEY","Authorization","concat","params","entries","map","_ref2","_ref3","slicedToArray","key","value","encodeURIComponent","fetch","sent","json","abrupt","t0","console","error","stop","_x","apply","this","arguments","manifestPropertyWhitelist","getCachedManifestData","_ref4","_callee2","manifestData","_context2","log","get","getRemoteManifestData","_ref5","_callee3","manifest","version","manifestDataResponse","_context3","Error","jsonWorldContentPaths","en","keys","forEach","includes","set","localStorage","setItem","_x2","getManifest","_ref6","_callee5","_context5","_callee4","localStorageManifestVersion","freshManifestData","_context4","getDestinyManifest","getItem","Response","window","location","search","ErrorCode","undefined","getFullProfile","membershipType","membershipId","getProfile","components","destinyMembershipId","clearStorage","removeItem","handleTokenResponse","tokenResponse","data","tokenDuration","expiryTime","bungieMembershipId","destinyMembershipsResponse","destinyMemberships","_args","length","access_token","expires_in","Date","now","membership_id","toString","getMembershipDataById","ErrorStatus","authSuccess","JSON","stringify","setSelectedDestinyMembership","fetchAuthToken","authCode","body","cache","credentials","Content-Type","method","redirect","referrer","hasValidAuth","accessTokenExpiryTime","parseInt","getDestinyMemberships","destinyMembershipsString","parse","e","message","getSelectedDestinyMembership","destinyMembershipString","membership","auth","queryParams","authResponse","URLSearchParams","replace","origin","pathname","ITEM_SLOT_BUCKETS","_ITEM_SLOT_BUCKETS","defineProperty","ITEM_BUCKET_SLOTS","reduce","buckets","slot","bucket","objectSpread","ORDERED_ITEM_SLOTS","ITEM_TYPE_ARMOR","ITEM_TYPE_WEAPON","CLASS_NAMES","Bar","min","max","avgValue","label","icon","range","perc","Math","floor","avgPerc","fullLabelText","fullLabel","react_default","createElement","className","STYLES","classnames","power","slotName","barWrapper","iconWrapper","src","alt","barContainer","filledBar","style","width","barLine","left","CharacterDisplay","text","slotFullNames","chest","classItem","hunter","titan","warlock","energy","gloves","head","kinetic","legs","powerBySlot","slots","topItemBySlot","instanceData","primaryStat","overallPower","minItemPower","toConsumableArray","values","minPowerToDisplay","maxItemPower","maxPowerToDisplay","ceil","roundedPower","characterDisplay","backgroundColor","red","green","blue","rgbString","character","emblemColor","header","emblemBackground","emblemBackgroundPath","name","substr","toUpperCase","powerBars","powerRange","minPower","rangeLine","maxPower","bars","bestItem","CharacterDisplay_Bar","id","itemDefinition","displayProperties","powerLabel","indicator","LoadingSpinner","MembershipSelect","onMembershipSelect","PLATFORMS","1","2","3","4","membershipSelect","m","onClick","displayName","getPowerBySlot","itemsBySlot","mapValues","item","getOverallPower","sum","mergeItems","characterItemMap","allItems","characterItems","items","isItemEquippableByCharacter","canEquip","cannotEquipReason","equipRequiredLevel","baseCharacterLevel","classType","getBasicCharacterData","pendingBasicProfile","profile","getDataForCharacterId","characterIds","characterData","light","getCharacterData","setCharacterData","setIsFetchingCharacterData","returnBasicCharacterData","pendingManifest","destinyMembership","shouldSetBasicCharacterData","pendingBasicCharacterData","fullProfile","_characters","characterEquipments","characterInventories","profileInventories","itemInstances","allCharacterItems","allCharacterWeapons","_args3","catch","basicCharacterData","characterEquipment","profileInventory","itemComponents","instances","filter","i","itemHash","DestinyInventoryItemDefinition","itemType","mapAndFilterItems","itemInstanceId","inventory","bucketTypeHash","relevantProfileItems","getItemScore","score","isEquipped","getEquipLabel","equippingBlock","uniqueLabel","groupBy","maxBy","uniqueEquippedGroups","forIn","uniqueEquippedGroup","validItemCombinations","otherItems","otherItem","isCombinationValid","combination","nonExotics","push","bestCombination","sumBy","_x3","_useState","useState","_useState2","isAuthed","setIsAuthed","_useState3","_useState4","hasAuthError","setAuthError","_useState5","_useState6","hasMembership","setHasMembership","_useState7","_useState8","hasManifestData","setHasManifestData","_useState9","_useState10","hasManifestError","setManifestError","_useState11","_useState12","isFetchingCharacterData","_useState13","_useState14","useEffect","doAuth","doGetCharacterData","setInterval","onSelectMembership","components_MembershipSelect","c","components_CharacterDisplay","components_LoadingSpinner","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","platform_xbox","platform_psn","platform_steam","platform_blizzard"],"mappings":"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","file":"static/js/main.d0d49837.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"anchor\":\"LoadingSpinner_anchor__3S34b\",\"spinner\":\"LoadingSpinner_spinner__2W4P9\",\"spin\":\"LoadingSpinner_spin__1qIkq\",\"loadingSpinnerContainer\":\"LoadingSpinner_loadingSpinnerContainer__2OZbs\",\"spinnerLarge\":\"LoadingSpinner_spinnerLarge__3zeAT\",\"spinnerSmall\":\"LoadingSpinner_spinnerSmall__25yaq\",\"status\":\"LoadingSpinner_status__33FO4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__4Taua\",\"loadingContainer\":\"App_loadingContainer__1uaFP\",\"charactersContainer\":\"App_charactersContainer__ht0bh\",\"characters\":\"App_characters__1pRqJ\",\"loadingStatus\":\"App_loadingStatus__34OS9\"};","import { get, set } from \"idb-keyval\";\n\nimport {\n  DestinyInventoryItemDefinition,\n  DestinyManifest,\n  getDestinyManifest,\n  getProfile\n} from \"bungie-api-ts/destiny2\";\nimport { HttpClientConfig } from \"bungie-api-ts/http\";\nimport { BUNGIE_API_KEY, getAccessToken } from \"./bungie-auth\";\n\nexport const bungieAuthedFetch = async (config: HttpClientConfig) => {\n  try {\n    const accessToken = getAccessToken();\n    const headers: { [key: string]: string } = { \"x-api-key\": BUNGIE_API_KEY };\n    if (accessToken) {\n      headers.Authorization = `Bearer ${accessToken}`;\n    }\n    const url = `${config.url}${\n      config.params\n        ? \"?\" +\n          Object.entries(config.params).map(\n            ([key, value]) =>\n              `${encodeURIComponent(key)}=${encodeURIComponent(\n                value as string\n              )}`\n          )\n        : \"\"\n    }`;\n    const response = await fetch(url, { headers });\n    return await response.json();\n  } catch (e) {\n    console.error(e);\n    return {};\n  }\n};\n\nconst MANIFEST_VERSION_KEY = \"MANIFEST_VERSION\";\nconst MANIFEST_IDB_KEY = \"MANIFEST_DATA\";\ninterface ManifestData {\n  DestinyInventoryItemDefinition: {\n    [key: string]: DestinyInventoryItemDefinition | undefined;\n  };\n}\nconst manifestPropertyWhitelist = [\"DestinyInventoryItemDefinition\"];\n\nconst getCachedManifestData = async () => {\n  console.log(\"Loading manifest data from IDB\");\n  const manifestData = await get(MANIFEST_IDB_KEY);\n  console.log(\"Finished loading manifest data from IDB\");\n  return manifestData as ManifestData;\n};\n\nconst getRemoteManifestData = async (manifest: DestinyManifest) => {\n  if (!manifest) {\n    throw Error(\"No manifest!\");\n  }\n  const version = manifest.version;\n  console.log(\"Fetching fresh manifest data\");\n  const manifestDataResponse = await fetch(\n    `https://www.bungie.net${manifest.jsonWorldContentPaths.en}`\n  );\n  const manifestData = await manifestDataResponse.json();\n  console.log(\"Pruning manifest data\");\n  Object.keys(manifestData).forEach(key => {\n    if (!manifestPropertyWhitelist.includes(key)) {\n      delete manifestData[key];\n    }\n  });\n  console.log(\"Storing manifest data in IDB\");\n  await set(MANIFEST_IDB_KEY, manifestData);\n  localStorage.setItem(MANIFEST_VERSION_KEY, version);\n  return manifestData;\n};\n\nlet cachedManifestData: ManifestData | undefined;\nlet getManifestPromise: Promise<ManifestData> | undefined;\n\nexport const getManifest = async (): Promise<ManifestData> => {\n  if (!getManifestPromise) {\n    getManifestPromise = (async () => {\n      const manifest = await getDestinyManifest(bungieAuthedFetch);\n      const localStorageManifestVersion = localStorage.getItem(\n        MANIFEST_VERSION_KEY\n      );\n      if (\n        manifest &&\n        manifest.Response &&\n        manifest.Response.version === localStorageManifestVersion &&\n        !window.location.search.includes(\"updateManifest\")\n      ) {\n        if (!cachedManifestData) {\n          cachedManifestData = await getCachedManifestData();\n        }\n        return cachedManifestData;\n      }\n      if (manifest && manifest.ErrorCode) {\n        throw Error(\n          `Error code ${manifest.ErrorCode} returned from manifest request`\n        );\n      }\n      if (!manifest || !manifest.Response) {\n        throw Error(\"No manifest received!\");\n      }\n      cachedManifestData = undefined;\n      const freshManifestData = await getRemoteManifestData(manifest.Response);\n      cachedManifestData = freshManifestData;\n      return freshManifestData;\n    })();\n  }\n  return getManifestPromise;\n};\n\nexport const getBasicProfile = (membershipType: number, membershipId: string) =>\n  getProfile(bungieAuthedFetch, {\n    components: [\n      200, // DestinyComponentType.Characters,\n      205 // DestinyComponentType.CharacterEquipment,\n    ],\n    destinyMembershipId: membershipId,\n    membershipType\n  });\n\nexport const getFullProfile = (membershipType: number, membershipId: string) =>\n  getProfile(bungieAuthedFetch, {\n    components: [\n      200, // DestinyComponentType.Characters,\n      201, // DestinyComponentType.CharacterInventories,\n      205, // DestinyComponentType.CharacterEquipment,\n      102, // DestinyComponentType.ProfileInventories,\n      300 // DestinyComponentType.ItemInstances,\n    ],\n    destinyMembershipId: membershipId,\n    membershipType\n  });\n","import { UserInfoCard } from \"bungie-api-ts/user\";\nimport React, { useEffect, useState } from \"react\";\n\nimport {\n  auth,\n  hasSelectedDestinyMembership,\n  hasValidAuth,\n  setSelectedDestinyMembership\n} from \"./services/bungie-auth\";\nimport { CharacterData } from \"./types\";\n\nimport CharacterDisplay from \"./components/CharacterDisplay\";\nimport LoadingSpinner from \"./components/LoadingSpinner\";\nimport MembershipSelect from \"./components/MembershipSelect\";\nimport { getManifest } from \"./services/bungie-api\";\nimport { getCharacterData } from \"./services/utils\";\n\nimport \"normalize.css\";\nimport STYLES from \"./App.module.scss\";\n\nlet characterDataRefreshTimer: number | undefined;\n\nconst App = () => {\n  const [isAuthed, setIsAuthed] = useState<boolean>(hasValidAuth());\n  const [hasAuthError, setAuthError] = useState<boolean>(false);\n  const [hasMembership, setHasMembership] = useState<boolean>(\n    hasSelectedDestinyMembership()\n  );\n  const [hasManifestData, setHasManifestData] = useState<boolean>(false);\n  const [hasManifestError, setManifestError] = useState<boolean>(false);\n  const [isFetchingCharacterData, setIsFetchingCharacterData] = useState<\n    boolean\n  >(false);\n  const [characterData, setCharacterData] = useState<\n    CharacterData[] | undefined\n  >(undefined);\n\n  useEffect(() => {\n    const doAuth = async () => {\n      const authResult = await auth();\n      if (authResult) {\n        setIsAuthed(true);\n      } else {\n        setAuthError(true);\n      }\n    };\n    if (!isAuthed) {\n      doAuth();\n    }\n  });\n\n  useEffect(() => {\n    (async () => {\n      try {\n        await getManifest();\n        setHasManifestData(true);\n      } catch (e) {\n        console.error(e.message);\n        setManifestError(true);\n      }\n    })();\n  });\n\n  useEffect(() => {\n    const doGetCharacterData = (returnBasicCharacterData: boolean = false) =>\n      getCharacterData(\n        setCharacterData,\n        setIsFetchingCharacterData,\n        returnBasicCharacterData\n      );\n    if (isAuthed && hasMembership && !isFetchingCharacterData) {\n      if (!characterDataRefreshTimer) {\n        characterDataRefreshTimer = setInterval(doGetCharacterData, 10000);\n        doGetCharacterData(true);\n      }\n    }\n  }, [isAuthed, hasMembership, hasManifestData, isFetchingCharacterData]);\n\n  const onSelectMembership = (membership: UserInfoCard) => {\n    setSelectedDestinyMembership(membership);\n    setHasMembership(true);\n  };\n\n  let status = \"\";\n  if (hasAuthError) {\n    status = \"Authentication error, refresh page to try again!\";\n  } else if (hasManifestError) {\n    status = \"Error fetching manifest, refresh page to try again!\";\n  } else if (!isAuthed) {\n    status = \"Authenticating...\";\n  } else if (!hasMembership) {\n    status = \"Waiting for Destiny platform selection...\";\n  } else if (!hasManifestData) {\n    status = \"Fetching Destiny item manifest...\";\n  } else if (!characterData || characterData.length === 0) {\n    if (isFetchingCharacterData) {\n      status = \"Fetching character data...\";\n    } else {\n      status = \"No character data\";\n    }\n  }\n\n  (window as any).characterData = characterData;\n\n  if (characterData && characterData.length > 0) {\n    return (\n      <div className={STYLES.App}>\n        <MembershipSelect onMembershipSelect={onSelectMembership} />\n        <div className={STYLES.charactersContainer}>\n          <div className={STYLES.characters}>\n            {characterData.map(c => (\n              <CharacterDisplay key={c.id} data={c} />\n            ))}\n          </div>\n        </div>\n        {status && <LoadingSpinner status={status} />}\n      </div>\n    );\n  }\n\n  return (\n    <div className={STYLES.App}>\n      <LoadingSpinner status={status} />\n      <MembershipSelect onMembershipSelect={onSelectMembership} />\n    </div>\n  );\n};\n\nexport default App;\n","import { getMembershipDataById, UserInfoCard } from \"bungie-api-ts/user\";\r\nimport { bungieAuthedFetch } from \"./bungie-api\";\r\n\r\nconst isDev = process.env.NODE_ENV === \"development\";\r\nexport const BUNGIE_API_KEY = isDev\r\n  ? \"f7f184669f044a89b560fc5f71ed5d60\"\r\n  : \"d94be1e34632448fafdaf77c7afbb501\";\r\nconst BUNGIE_OAUTH_AUTHORIZE_URL = \"https://www.bungie.net/en/OAuth/Authorize\";\r\nconst BUNGIE_OAUTH_CLIENT_ID = isDev ? \"26087\" : \"27213\";\r\nconst BUNGIE_OAUTH_TOKEN_URL =\r\n  \"https://www.bungie.net/platform/app/oauth/token/\";\r\n\r\nconst ACCESS_TOKEN_STORAGE_KEY = \"bungieAccessToken\";\r\nconst ACCESS_TOKEN_EXPIRY_STORAGE_KEY = \"bungieAccessTokenExpiryTime\";\r\nconst BUNGIE_MEMBERSHIP_ID_STORAGE_KEY = \"bungieMembershipId\";\r\nconst DESTINY_MEMBERSHIPS_STORAGE_KEY = \"destinyMemberships\";\r\nconst DESTINY_MEMBERSHIP_STORAGE_KEY = \"destinyMembership\";\r\n\r\nconst clearStorage = () => {\r\n  localStorage.removeItem(ACCESS_TOKEN_STORAGE_KEY);\r\n  localStorage.removeItem(ACCESS_TOKEN_EXPIRY_STORAGE_KEY);\r\n  localStorage.removeItem(BUNGIE_MEMBERSHIP_ID_STORAGE_KEY);\r\n  localStorage.removeItem(DESTINY_MEMBERSHIPS_STORAGE_KEY);\r\n  localStorage.removeItem(DESTINY_MEMBERSHIP_STORAGE_KEY);\r\n};\r\n\r\nconst getAuthUrl = () =>\r\n  `${BUNGIE_OAUTH_AUTHORIZE_URL}?response_type=code&client_id=${BUNGIE_OAUTH_CLIENT_ID}`;\r\n\r\nconst redirectToAuth = () => {\r\n  console.log(\"Redirect to auth\");\r\n  clearStorage();\r\n  window.location.replace(getAuthUrl());\r\n};\r\n\r\nconst handleTokenResponse = async (\r\n  tokenResponse: Response,\r\n  redirect: boolean = false\r\n) => {\r\n  console.log(\"handleTokenResponse\");\r\n  clearStorage();\r\n  if (tokenResponse.status === 200) {\r\n    const data = await tokenResponse.json();\r\n    const accessToken = data.access_token as string;\r\n    const tokenDuration = data.expires_in as number;\r\n    const expiryTime = Date.now() + tokenDuration * 1000;\r\n    const bungieMembershipId = data.membership_id as string;\r\n\r\n    localStorage.setItem(ACCESS_TOKEN_STORAGE_KEY, accessToken);\r\n    localStorage.setItem(\r\n      ACCESS_TOKEN_EXPIRY_STORAGE_KEY,\r\n      expiryTime.toString()\r\n    );\r\n    localStorage.setItem(BUNGIE_MEMBERSHIP_ID_STORAGE_KEY, bungieMembershipId);\r\n\r\n    // 254 = all memberships\r\n    const destinyMembershipsResponse = await getMembershipDataById(\r\n      bungieAuthedFetch,\r\n      { membershipId: bungieMembershipId, membershipType: 254 }\r\n    );\r\n\r\n    if (\r\n      !destinyMembershipsResponse ||\r\n      !destinyMembershipsResponse.Response ||\r\n      destinyMembershipsResponse.ErrorStatus\r\n    ) {\r\n      return {\r\n        authSuccess: false,\r\n        error: `Status code ${destinyMembershipsResponse.ErrorStatus} from memberships endpoint`\r\n      };\r\n    }\r\n\r\n    const destinyMemberships =\r\n      destinyMembershipsResponse.Response.destinyMemberships;\r\n    localStorage.setItem(\r\n      DESTINY_MEMBERSHIPS_STORAGE_KEY,\r\n      JSON.stringify(destinyMemberships)\r\n    );\r\n\r\n    // If there is only one membership, select it automatically\r\n    if (destinyMemberships.length === 1) {\r\n      setSelectedDestinyMembership(destinyMemberships[0]);\r\n    }\r\n\r\n    return { accessToken, authSuccess: true };\r\n  } else {\r\n    if (tokenResponse.status !== 200) {\r\n      return {\r\n        authSuccess: false,\r\n        error: `Status code ${tokenResponse.status} from authentication request`\r\n      };\r\n    }\r\n    // return redirectToAuth()\r\n  }\r\n};\r\n\r\nconst fetchAuthToken = async (authCode: string) => {\r\n  console.log(\"fetchAuthToken\", authCode);\r\n  clearStorage();\r\n  const tokenResponse = await fetch(BUNGIE_OAUTH_TOKEN_URL, {\r\n    body: `grant_type=authorization_code&code=${authCode}&client_id=${BUNGIE_OAUTH_CLIENT_ID}`,\r\n    cache: \"no-cache\",\r\n    credentials: \"include\",\r\n    headers: {\r\n      \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n    },\r\n    method: \"POST\",\r\n    redirect: \"follow\",\r\n    referrer: \"no-referrer\"\r\n  });\r\n  return await handleTokenResponse(tokenResponse);\r\n};\r\n\r\nexport const getAccessToken = () => {\r\n  return localStorage.getItem(ACCESS_TOKEN_STORAGE_KEY);\r\n};\r\n\r\nexport const hasValidAuth = () => {\r\n  const accessToken = getAccessToken();\r\n  const accessTokenExpiryTime = parseInt(\r\n    localStorage.getItem(ACCESS_TOKEN_EXPIRY_STORAGE_KEY) || \"-1\",\r\n    10\r\n  );\r\n  const bungieMembershipId = localStorage.getItem(\r\n    BUNGIE_MEMBERSHIP_ID_STORAGE_KEY\r\n  );\r\n  if (\r\n    !accessToken ||\r\n    Date.now() >= accessTokenExpiryTime ||\r\n    !bungieMembershipId\r\n  ) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nexport const getDestinyMemberships = () => {\r\n  const destinyMembershipsString = localStorage.getItem(\r\n    DESTINY_MEMBERSHIPS_STORAGE_KEY\r\n  );\r\n  try {\r\n    if (destinyMembershipsString) {\r\n      return JSON.parse(destinyMembershipsString) as UserInfoCard[];\r\n    }\r\n  } catch (e) {\r\n    console.error(`Error loading destiny memberships`, e.message);\r\n  }\r\n  return undefined;\r\n};\r\n\r\nexport const hasDestinyMemberships = () => {\r\n  return !!getDestinyMemberships();\r\n};\r\n\r\nexport const getSelectedDestinyMembership = () => {\r\n  const destinyMembershipString = localStorage.getItem(\r\n    DESTINY_MEMBERSHIP_STORAGE_KEY\r\n  );\r\n  try {\r\n    if (destinyMembershipString) {\r\n      return JSON.parse(destinyMembershipString) as UserInfoCard;\r\n    }\r\n  } catch (e) {\r\n    console.error(\"Error loading destiny membership\", e.message);\r\n  }\r\n  return undefined;\r\n};\r\n\r\nexport const hasSelectedDestinyMembership = () => {\r\n  return !!getSelectedDestinyMembership();\r\n};\r\n\r\nexport const setSelectedDestinyMembership = (membership: UserInfoCard) => {\r\n  localStorage.setItem(\r\n    DESTINY_MEMBERSHIP_STORAGE_KEY,\r\n    JSON.stringify(membership)\r\n  );\r\n};\r\n\r\nexport const auth = async () => {\r\n  const queryParams = new URLSearchParams(window.location.search);\r\n  const authCode = queryParams.get(\"code\");\r\n\r\n  if (authCode && !hasValidAuth()) {\r\n    console.log(\"Fetching access token with auth code\");\r\n    const authResponse = await fetchAuthToken(authCode);\r\n    if (authResponse && authResponse.authSuccess === false) {\r\n      console.error(authResponse.error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  if (authCode) {\r\n    window.location.replace(\r\n      `${window.location.origin}${window.location.pathname}`\r\n    );\r\n  }\r\n\r\n  if (hasValidAuth() && hasDestinyMemberships()) {\r\n    return true;\r\n  }\r\n\r\n  console.log(\r\n    \"Redirecting to fresh authentication for missing or expired access token, or missing destiny memberships\"\r\n  );\r\n  clearStorage();\r\n  redirectToAuth();\r\n};\r\n","export const ITEM_SLOT_KINETIC = \"kinetic\";\r\nexport const ITEM_SLOT_ENERGY = \"energy\";\r\nexport const ITEM_SLOT_POWER = \"power\";\r\nexport const ITEM_SLOT_HEAD = \"head\";\r\nexport const ITEM_SLOT_GLOVES = \"gloves\";\r\nexport const ITEM_SLOT_CHEST = \"chest\";\r\nexport const ITEM_SLOT_LEGS = \"legs\";\r\nexport const ITEM_SLOT_CLASS_ITEM = \"classItem\";\r\n\r\nexport const ITEM_SLOT_BUCKETS = {\r\n  [ITEM_SLOT_KINETIC]: 1498876634,\r\n  [ITEM_SLOT_ENERGY]: 2465295065,\r\n  [ITEM_SLOT_POWER]: 953998645,\r\n  [ITEM_SLOT_HEAD]: 3448274439,\r\n  [ITEM_SLOT_GLOVES]: 3551918588,\r\n  [ITEM_SLOT_CHEST]: 14239492,\r\n  [ITEM_SLOT_LEGS]: 20886954,\r\n  [ITEM_SLOT_CLASS_ITEM]: 1585787867\r\n};\r\n\r\nexport const ITEM_BUCKET_SLOTS = Object.entries(ITEM_SLOT_BUCKETS).reduce(\r\n  (buckets, [slot, bucket]) => ({ ...buckets, [bucket]: slot }),\r\n  {} as { [bucket: number]: string }\r\n);\r\n\r\nexport const ITEM_SLOT_GROUP_WEAPONS = [\r\n  ITEM_SLOT_KINETIC,\r\n  ITEM_SLOT_ENERGY,\r\n  ITEM_SLOT_POWER\r\n];\r\nexport const ITEM_SLOT_GROUP_ARMOR = [\r\n  ITEM_SLOT_HEAD,\r\n  ITEM_SLOT_GLOVES,\r\n  ITEM_SLOT_CHEST,\r\n  ITEM_SLOT_LEGS,\r\n  ITEM_SLOT_CLASS_ITEM\r\n];\r\n\r\nexport const ORDERED_ITEM_SLOTS = [\r\n  ...ITEM_SLOT_GROUP_WEAPONS,\r\n  ...ITEM_SLOT_GROUP_ARMOR\r\n];\r\n\r\nexport const ITEM_TIER_TYPE_EXOTIC = 6;\r\n\r\nexport const ITEM_TYPE_ARMOR = 2;\r\nexport const ITEM_TYPE_WEAPON = 3;\r\n\r\nexport const CLASS_TYPE_ALL = 3;\r\n\r\nexport const CLASS_TITAN = \"titan\";\r\nexport const CLASS_HUNTER = \"hunter\";\r\nexport const CLASS_WARLOCK = \"warlock\";\r\n\r\nexport const CLASS_NAMES = [CLASS_TITAN, CLASS_HUNTER, CLASS_WARLOCK];\r\n","import classnames from \"classnames\";\r\nimport React from \"react\";\r\n\r\nimport { CharacterData } from \"../types\";\r\n\r\nimport { ORDERED_ITEM_SLOTS } from \"../constants\";\r\nimport STYLES from \"./CharacterDisplay.module.scss\";\r\n\r\ninterface CharacterDisplayProps {\r\n  data: CharacterData;\r\n}\r\n\r\nconst titleCase = (text: string) =>\r\n  text.substr(0, 1).toUpperCase() + text.substr(1);\r\n\r\ninterface BarProps {\r\n  min: number;\r\n  max: number;\r\n  value: number;\r\n  avgValue: number;\r\n  label: string;\r\n  icon?: string;\r\n}\r\nconst Bar = ({ min, max, value, avgValue, label, icon }: BarProps) => {\r\n  const range = max - min;\r\n  const perc = Math.floor(((value - min) / range) * 1000) / 10;\r\n  const avgPerc = Math.floor(((avgValue - min) / range) * 1000) / 10;\r\n  // const plusTwoPerc = Math.floor(((avgValue + 2 - min) / range) * 1000) / 10\r\n  // const plusFivePerc = Math.floor(((avgValue + 5 - min) / range) * 1000) / 10\r\n  const fullLabelText = `${value} ${label}`;\r\n  const fullLabel = (\r\n    <span className={STYLES.label}>\r\n      <span\r\n        className={classnames(STYLES.power, { [STYLES.max]: value >= max })}\r\n      >\r\n        {value}\r\n      </span>\r\n      <span className={STYLES.slotName}>{label}</span>\r\n    </span>\r\n  );\r\n  return (\r\n    <div className={STYLES.barWrapper}>\r\n      <div className={STYLES.iconWrapper}>\r\n        {icon && (\r\n          <img\r\n            className={STYLES.icon}\r\n            src={`https://www.bungie.net${icon}`}\r\n            alt={fullLabelText}\r\n          />\r\n        )}\r\n      </div>\r\n      <div className={STYLES.barContainer}>\r\n        <div className={STYLES.filledBar} style={{ width: `${perc}%` }}>\r\n          {fullLabel}\r\n        </div>\r\n        <div className={STYLES.barLine} style={{ left: `${avgPerc}%` }} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CharacterDisplay = ({ data }: CharacterDisplayProps) => {\r\n  const classItemNames: { [key: string]: string } = {\r\n    hunter: \"Hunter Cloak\",\r\n    titan: \"Titan Mark\",\r\n    warlock: \"Warlock Bond\"\r\n  };\r\n  const slotFullNames: { [key: string]: string } = {\r\n    chest: \"Chest Armor\",\r\n    classItem: classItemNames[data.className],\r\n    energy: \"Energy Weapon\",\r\n    gloves: \"Gauntlets\",\r\n    head: \"Helmet\",\r\n    kinetic: \"Kinetic Weapon\",\r\n    legs: \"Leg Armor\",\r\n    power: \"Power Weapon\"\r\n  };\r\n\r\n  const rgbString = ({\r\n    red,\r\n    green,\r\n    blue\r\n  }: {\r\n    red: number;\r\n    green: number;\r\n    blue: number;\r\n  }) => `rgb(${red},${green},${blue})`;\r\n\r\n  interface PowerBySlot {\r\n    [slotName: string]: number;\r\n  }\r\n\r\n  // Get power by slot, using overall power if slot data does not exist\r\n  const powerBySlot = ORDERED_ITEM_SLOTS.reduce(\r\n    (slots, slotName) => ({\r\n      ...slots,\r\n      [slotName]: data.topItemBySlot\r\n        ? data.topItemBySlot[slotName].instanceData.primaryStat.value\r\n        : data.overallPower\r\n    }),\r\n    {} as PowerBySlot\r\n  );\r\n\r\n  // Round to 50s\r\n  const minItemPower = Math.min(...Object.values(powerBySlot));\r\n  const minPowerToDisplay = Math.max(\r\n    Math.floor(minItemPower / 50) * 50 - 50,\r\n    0\r\n  );\r\n  const maxItemPower = Math.max(...Object.values(powerBySlot));\r\n  const maxPowerToDisplay =\r\n    data.maxItemPower || Math.ceil(maxItemPower / 50) * 50;\r\n\r\n  const roundedPower = Math.floor(data.overallPower);\r\n\r\n  const range = maxPowerToDisplay - minPowerToDisplay;\r\n  const perc =\r\n    Math.floor(((roundedPower - minPowerToDisplay) / range) * 1000) / 10;\r\n\r\n  return (\r\n    <div\r\n      className={classnames(\r\n        STYLES.characterDisplay,\r\n        STYLES[`class_${data.className}`]\r\n      )}\r\n      style={{ backgroundColor: rgbString(data.character.emblemColor) }}\r\n    >\r\n      <div className={STYLES.header}>\r\n        <img\r\n          className={STYLES.emblemBackground}\r\n          src={`https://www.bungie.net${data.character.emblemBackgroundPath}`}\r\n          alt=\"\"\r\n        />\r\n        <div className={STYLES.name}>{titleCase(data.className)}</div>\r\n        <div className={STYLES.power}>{roundedPower}</div>\r\n      </div>\r\n      <div className={STYLES.powerBars}>\r\n        <div className={STYLES.powerRange}>\r\n          <div className={STYLES.minPower}>{minPowerToDisplay}</div>\r\n          <div className={STYLES.rangeLine} />\r\n          <div className={STYLES.maxPower}>{maxPowerToDisplay}</div>\r\n        </div>\r\n        <div className={STYLES.bars}>\r\n          {Object.entries(powerBySlot).map(([slotName, power]) => {\r\n            const bestItem = data.topItemBySlot && data.topItemBySlot[slotName];\r\n            return (\r\n              <Bar\r\n                key={`${data.id}_${slotName}`}\r\n                min={minPowerToDisplay}\r\n                max={maxPowerToDisplay}\r\n                value={power}\r\n                avgValue={roundedPower}\r\n                label={slotFullNames[slotName] || slotName}\r\n                icon={\r\n                  bestItem &&\r\n                  bestItem.itemDefinition &&\r\n                  bestItem.itemDefinition.displayProperties.icon\r\n                }\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n        <div className={STYLES.powerLabel}>\r\n          <div className={STYLES.indicator} style={{ left: `${perc}%` }}>\r\n            {roundedPower}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterDisplay;\r\n","import React from \"react\";\n\nimport STYLES from \"./LoadingSpinner.module.scss\";\n\ninterface LoadingSpinnerProps {\n  status: string;\n}\n\nconst LoadingSpinner = ({ status }: LoadingSpinnerProps) => {\n  return (\n    <div className={STYLES.loadingSpinnerContainer}>\n      <div className={STYLES.anchor}>\n        <div className={STYLES.spinnerLarge} />\n        <div className={STYLES.spinnerSmall} />\n        <div className={STYLES.status}>{status}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import { UserInfoCard } from \"bungie-api-ts/user\";\nimport classnames from \"classnames\";\nimport React from \"react\";\n\nimport { getDestinyMemberships } from \"../services/bungie-auth\";\nimport STYLES from \"./MembershipSelect.module.scss\";\n\ninterface MembershipSelectProps {\n  onMembershipSelect: (membership: UserInfoCard) => any;\n}\n\nconst MembershipSelect = ({ onMembershipSelect }: MembershipSelectProps) => {\n  const destinyMemberships = getDestinyMemberships();\n\n  if (!destinyMemberships) {\n    return null;\n  }\n\n  if (destinyMemberships.length === 0) {\n    return <div>No destiny memberships!</div>;\n  }\n\n  const PLATFORMS: { [key: number]: string } = {\n    1: \"xbox\",\n    2: \"psn\",\n    3: \"steam\",\n    4: \"blizzard\"\n  };\n\n  return (\n    <div className={STYLES.membershipSelect}>\n      {destinyMemberships.map(m => {\n        return (\n          <div\n            key={m.membershipId}\n            className={classnames(\n              STYLES.membership,\n              STYLES[`platform_${PLATFORMS[m.membershipType]}`]\n            )}\n            onClick={() => onMembershipSelect(m)}\n          >\n            {m.displayName}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default MembershipSelect;\n","import {\r\n  DestinyCharacterComponent,\r\n  DestinyItemComponent\r\n} from \"bungie-api-ts/destiny2\";\r\n\r\nimport forIn from \"lodash/forIn\";\r\nimport groupBy from \"lodash/groupBy\";\r\nimport mapValues from \"lodash/mapValues\";\r\nimport maxBy from \"lodash/maxBy\";\r\nimport sumBy from \"lodash/sumBy\";\r\n\r\nimport {\r\n  CLASS_NAMES,\r\n  CLASS_TYPE_ALL,\r\n  ITEM_BUCKET_SLOTS,\r\n  ITEM_SLOT_BUCKETS,\r\n  ITEM_TYPE_ARMOR,\r\n  ITEM_TYPE_WEAPON\r\n} from \"../constants\";\r\nimport {\r\n  CharacterData,\r\n  ItemBySlot,\r\n  JoinedItemDefinition,\r\n  PowerBySlot\r\n} from \"../types\";\r\nimport { getBasicProfile, getFullProfile, getManifest } from \"./bungie-api\";\r\nimport { auth, getSelectedDestinyMembership } from \"./bungie-auth\";\r\n\r\nconst getPowerBySlot = (itemsBySlot: ItemBySlot): PowerBySlot =>\r\n  mapValues(itemsBySlot, item => item.instanceData.primaryStat.value);\r\n\r\nconst getOverallPower = (powerBySlot: PowerBySlot) =>\r\n  Object.values(powerBySlot).reduce((sum, power) => sum + power, 0) /\r\n  Object.keys(ITEM_SLOT_BUCKETS).length;\r\n\r\nconst mergeItems = <\r\n  T extends { [key: string]: { items: DestinyItemComponent[] } }\r\n>(\r\n  characterItemMap: T\r\n) => {\r\n  return Object.values(characterItemMap).reduce(\r\n    (allItems, characterItems) => allItems.concat(characterItems.items),\r\n    [] as DestinyItemComponent[]\r\n  );\r\n};\r\n\r\nconst isItemEquippableByCharacter = (\r\n  item: JoinedItemDefinition,\r\n  character: DestinyCharacterComponent\r\n) => {\r\n  if (item.instanceData.canEquip) {\r\n    return true;\r\n  } // If the game says we can equip it, let's believe it\r\n  if (item.instanceData.cannotEquipReason === 16) {\r\n    return true;\r\n  } // Only reason is that it's in your vault\r\n  if (item.instanceData.equipRequiredLevel > character.baseCharacterLevel) {\r\n    return false;\r\n  }\r\n  if (\r\n    item.itemDefinition.classType !== CLASS_TYPE_ALL &&\r\n    item.itemDefinition.classType !== character.classType\r\n  ) {\r\n    return false;\r\n  }\r\n  // Let's ignore the rest for now\r\n  return true;\r\n};\r\n\r\nconst getBasicCharacterData = async (\r\n  pendingBasicProfile: ReturnType<typeof getBasicProfile>\r\n) => {\r\n  const profile = await pendingBasicProfile;\r\n  if (!profile || !profile.Response || !profile.Response.characters) {\r\n    return;\r\n  }\r\n  const characters = profile.Response.characters.data;\r\n\r\n  if (characters) {\r\n    const getDataForCharacterId = (id: string): CharacterData => {\r\n      const character = characters[id];\r\n      const className = CLASS_NAMES[character.classType];\r\n      return {\r\n        character,\r\n        className,\r\n        id,\r\n        overallPower: character.light\r\n      };\r\n    };\r\n\r\n    const characterIds = Object.keys(characters);\r\n    const characterData = characterIds.map(id => getDataForCharacterId(id));\r\n    return characterData;\r\n  }\r\n};\r\n\r\nexport const getCharacterData = async (\r\n  setCharacterData: (state: CharacterData[]) => any,\r\n  setIsFetchingCharacterData: (state: boolean) => any,\r\n  returnBasicCharacterData: boolean = false\r\n) => {\r\n  try {\r\n    const isAuthed = await auth();\r\n    if (!isAuthed) {\r\n      return;\r\n    }\r\n\r\n    const pendingManifest = getManifest();\r\n\r\n    setIsFetchingCharacterData(true);\r\n\r\n    const destinyMembership = getSelectedDestinyMembership();\r\n    if (!destinyMembership) {\r\n      return;\r\n    }\r\n\r\n    let pendingBasicProfile: ReturnType<typeof getBasicProfile> | undefined;\r\n\r\n    // Flag lets this be disabled to prevent setting after full profile is returned\r\n    let shouldSetBasicCharacterData = true;\r\n    // Produce basic data if flag is set\r\n    if (returnBasicCharacterData) {\r\n      pendingBasicProfile = getBasicProfile(\r\n        destinyMembership.membershipType,\r\n        destinyMembership.membershipId\r\n      );\r\n      pendingBasicProfile.catch(() => {\r\n        /* Do nothing */\r\n      });\r\n      const pendingBasicCharacterData = getBasicCharacterData(\r\n        pendingBasicProfile\r\n      ).catch(e => {\r\n        /* Do nothing */\r\n      });\r\n      (async () => {\r\n        const basicCharacterData = await pendingBasicCharacterData;\r\n        if (basicCharacterData && shouldSetBasicCharacterData) {\r\n          setCharacterData(basicCharacterData);\r\n        }\r\n      })();\r\n    }\r\n\r\n    const fullProfile = await getFullProfile(\r\n      destinyMembership.membershipType,\r\n      destinyMembership.membershipId\r\n    );\r\n    setIsFetchingCharacterData(false);\r\n\r\n    if (\r\n      !fullProfile ||\r\n      !fullProfile.Response ||\r\n      !fullProfile.Response.characters ||\r\n      !fullProfile.Response.characters.data ||\r\n      !fullProfile.Response.characterEquipment ||\r\n      !fullProfile.Response.characterEquipment.data ||\r\n      !fullProfile.Response.characterInventories ||\r\n      !fullProfile.Response.characterInventories.data ||\r\n      !fullProfile.Response.profileInventory ||\r\n      !fullProfile.Response.profileInventory.data ||\r\n      !fullProfile.Response.itemComponents ||\r\n      !fullProfile.Response.itemComponents.instances ||\r\n      !fullProfile.Response.itemComponents.instances.data\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const characters = fullProfile.Response.characters.data;\r\n    const characterEquipments = fullProfile.Response.characterEquipment.data;\r\n    const characterInventories = fullProfile.Response.characterInventories.data;\r\n    const profileInventories = fullProfile.Response.profileInventory.data;\r\n    const itemInstances = fullProfile.Response.itemComponents.instances.data;\r\n\r\n    const manifest = await pendingManifest;\r\n\r\n    if (!manifest) {\r\n      return;\r\n    }\r\n\r\n    const allCharacterItems = mergeItems(characterInventories)\r\n      .concat(mergeItems(characterEquipments))\r\n      .concat(profileInventories.items);\r\n    const allCharacterWeapons = allCharacterItems.filter(i => {\r\n      const itemDefinition =\r\n        i.itemHash && manifest.DestinyInventoryItemDefinition[i.itemHash];\r\n      return itemDefinition && itemDefinition.itemType === ITEM_TYPE_WEAPON;\r\n    });\r\n\r\n    const getDataForCharacterId = (id: string): CharacterData => {\r\n      const character = characters[id];\r\n      const className = CLASS_NAMES[character.classType];\r\n\r\n      const mapAndFilterItems = (\r\n        items: DestinyItemComponent[]\r\n      ): JoinedItemDefinition[] =>\r\n        items\r\n          .map(item => {\r\n            const instanceData = item.itemInstanceId\r\n              ? itemInstances[item.itemInstanceId]\r\n              : undefined;\r\n            const itemDefinition =\r\n              manifest.DestinyInventoryItemDefinition[item.itemHash];\r\n            return {\r\n              ...item,\r\n              instanceData,\r\n              itemDefinition\r\n            };\r\n          })\r\n          .filter(\r\n            i =>\r\n              i.instanceData &&\r\n              i.itemDefinition &&\r\n              [ITEM_TYPE_ARMOR, ITEM_TYPE_WEAPON].includes(\r\n                i.itemDefinition.itemType\r\n              )\r\n          )\r\n          .map(i => ({\r\n            ...i,\r\n            instanceData: i.instanceData!,\r\n            itemDefinition: i.itemDefinition!\r\n          }))\r\n          .map(i => ({\r\n            ...i,\r\n            slotName:\r\n              ITEM_BUCKET_SLOTS[i.itemDefinition.inventory.bucketTypeHash]\r\n          }))\r\n          .filter(i => isItemEquippableByCharacter(i, character));\r\n\r\n      const characterItems = mapAndFilterItems(\r\n        characterInventories[id].items\r\n          .concat(characterEquipments[id].items)\r\n          .concat(allCharacterWeapons)\r\n      );\r\n      const relevantProfileItems = mapAndFilterItems(\r\n        profileInventories.items\r\n      ).filter(\r\n        i =>\r\n          i.itemDefinition.classType === CLASS_TYPE_ALL ||\r\n          i.itemDefinition.classType === character.classType\r\n      );\r\n\r\n      const allItems = characterItems.concat(relevantProfileItems);\r\n\r\n      const getItemScore = (item: JoinedItemDefinition) => {\r\n        let score = item.instanceData.primaryStat.value;\r\n        if (item.instanceData.isEquipped) {\r\n          score += 0.1;\r\n        }\r\n        if (item.location === 1) {\r\n          score += 0.05;\r\n        }\r\n        return score;\r\n      };\r\n\r\n      const getEquipLabel = (item: JoinedItemDefinition) =>\r\n        item.itemDefinition.equippingBlock.uniqueLabel;\r\n\r\n      // Group by slot\r\n      const itemsBySlot = groupBy(allItems, i => i.slotName);\r\n      // Get max power items per slot\r\n      let topItemBySlot = mapValues(\r\n        itemsBySlot,\r\n        items => maxBy(items, getItemScore)!\r\n      );\r\n      // Get overlaps by equip label\r\n      const uniqueEquippedGroups = groupBy(\r\n        Object.values(topItemBySlot).filter(getEquipLabel),\r\n        getEquipLabel\r\n      );\r\n      // For overlaps with more than one item, generate valid options where all-but-one item is swapped for the next best non-exotic\r\n      forIn(uniqueEquippedGroups, uniqueEquippedGroup => {\r\n        if (uniqueEquippedGroup.length <= 1) {\r\n          return;\r\n        }\r\n\r\n        const validItemCombinations: ItemBySlot[] = [];\r\n\r\n        uniqueEquippedGroup.forEach(item => {\r\n          const otherItems = uniqueEquippedGroup.filter(\r\n            otherItem => otherItem !== item\r\n          );\r\n          let isCombinationValid = true;\r\n          const combination = { ...topItemBySlot };\r\n          otherItems.forEach(otherItem => {\r\n            // Find non-exotics for this slot\r\n            const nonExotics = itemsBySlot[otherItem.slotName].filter(\r\n              i => !getEquipLabel(i)\r\n            );\r\n            if (nonExotics.length > 0) {\r\n              // Select max power from non-exotics\r\n              combination[otherItem.slotName] = maxBy(\r\n                nonExotics,\r\n                getItemScore\r\n              )!;\r\n            } else {\r\n              // No non-exotic options for this slot, so whole combination is invalidaa\r\n              isCombinationValid = false;\r\n            }\r\n          });\r\n          if (isCombinationValid) {\r\n            validItemCombinations.push(combination);\r\n          }\r\n        });\r\n\r\n        // Select highest total scoring valid combination, if alternative item combinations have been generated\r\n        if (validItemCombinations.length > 0) {\r\n          const bestCombination = maxBy(validItemCombinations, combination =>\r\n            sumBy(Object.values(combination), getItemScore)\r\n          )!;\r\n          topItemBySlot = bestCombination;\r\n        }\r\n      });\r\n\r\n      const powerBySlot = getPowerBySlot(topItemBySlot);\r\n      const overallPower = getOverallPower(powerBySlot);\r\n\r\n      return {\r\n        character,\r\n        className,\r\n        id,\r\n        overallPower,\r\n        topItemBySlot\r\n      };\r\n    };\r\n\r\n    const characterIds = Object.keys(characters);\r\n    const characterData = characterIds.map(id => getDataForCharacterId(id));\r\n    shouldSetBasicCharacterData = false;\r\n    setCharacterData(characterData);\r\n  } catch (e) {\r\n    console.error(`Error fetching manifest and character data`, e);\r\n    setIsFetchingCharacterData(false);\r\n    return;\r\n  }\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"characterDisplay\":\"CharacterDisplay_characterDisplay__3LJ6S\",\"header\":\"CharacterDisplay_header__16L7B\",\"emblemBackground\":\"CharacterDisplay_emblemBackground__2jqgs\",\"name\":\"CharacterDisplay_name__3Aw12\",\"power\":\"CharacterDisplay_power__EMI5z\",\"powerBars\":\"CharacterDisplay_powerBars__1ncJP\",\"powerRange\":\"CharacterDisplay_powerRange__lEkeP\",\"rangeLine\":\"CharacterDisplay_rangeLine__14_WH\",\"powerLabel\":\"CharacterDisplay_powerLabel__36Pf6\",\"indicator\":\"CharacterDisplay_indicator__2jPQU\",\"barWrapper\":\"CharacterDisplay_barWrapper__3qGoQ\",\"iconWrapper\":\"CharacterDisplay_iconWrapper__1CafS\",\"icon\":\"CharacterDisplay_icon__3v2oB\",\"barContainer\":\"CharacterDisplay_barContainer__btRVR\",\"barLine\":\"CharacterDisplay_barLine__V3SXF\",\"filledBar\":\"CharacterDisplay_filledBar__2r5Ry\",\"label\":\"CharacterDisplay_label__2J0W5\",\"max\":\"CharacterDisplay_max__1foXT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"membershipSelect\":\"MembershipSelect_membershipSelect__vf_ZG\",\"membership\":\"MembershipSelect_membership__RaveC\",\"platform_xbox\":\"MembershipSelect_platform_xbox__1ZAgU\",\"platform_psn\":\"MembershipSelect_platform_psn__WN9gB\",\"platform_steam\":\"MembershipSelect_platform_steam__1YUUA\",\"platform_blizzard\":\"MembershipSelect_platform_blizzard__1OiG6\"};"],"sourceRoot":""}