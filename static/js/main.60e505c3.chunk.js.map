{"version":3,"sources":["components/CharacterDisplay.module.scss","App.module.scss","services/bungie-api.ts","services/bungie-auth.ts","constants.ts","components/CharacterDisplay.tsx","components/LoadingSpinner.tsx","components/MembershipSelect.tsx","services/utils.ts","App.tsx","serviceWorker.ts","index.tsx","components/MembershipSelect.module.scss","components/LoadingSpinner.module.scss"],"names":["module","exports","characterDisplay","header","emblemBackground","name","power","details","detailsRow","detailsLabel","detailsInlineIcon","detailsValue","detailSeparator","powerBars","powerRange","rangeLine","powerLabel","indicator","barWrapper","iconWrapper","icon","barContainer","barLine","filledBar","label","max","belowAverage","App","loadingContainer","charactersContainer","characters","loadingStatus","cachedManifestData","getManifestPromise","bungieAuthedFetch","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","config","accessToken","headers","url","response","wrap","_context","prev","next","getAccessToken","x-api-key","BUNGIE_API_KEY","Authorization","concat","params","entries","map","_ref2","_ref3","slicedToArray","key","value","encodeURIComponent","fetch","sent","json","abrupt","t0","console","error","stop","_x","apply","this","arguments","manifestPropertyWhitelist","getCachedManifestData","_ref4","_callee2","manifestData","_context2","log","get","getRemoteManifestData","_ref5","_callee3","manifest","version","manifestDataResponse","_context3","Error","jsonWorldContentPaths","en","keys","forEach","includes","set","localStorage","setItem","_x2","getManifest","_ref6","_callee5","_context5","_callee4","localStorageManifestVersion","freshManifestData","_context4","getDestinyManifest","getItem","Response","window","location","search","ErrorStatus","undefined","getFullProfile","membershipType","membershipId","getProfile","components","destinyMembershipId","clearStorage","removeItem","handleTokenResponse","tokenResponse","data","tokenDuration","expiryTime","bungieMembershipId","destinyMembershipsResponse","destinyMemberships","_args","length","status","access_token","expires_in","Date","now","membership_id","toString","getMembershipDataById","authSuccess","JSON","stringify","setSelectedDestinyMembership","fetchAuthToken","authCode","body","cache","credentials","Content-Type","method","redirect","referrer","hasValidAuth","accessTokenExpiryTime","parseInt","getDestinyMemberships","destinyMembershipsString","parse","e","message","getSelectedDestinyMembership","destinyMembershipString","membership","auth","queryParams","authResponse","URLSearchParams","replace","origin","pathname","ITEM_SLOT_BUCKETS","_ITEM_SLOT_BUCKETS","defineProperty","ITEM_BUCKET_SLOTS","reduce","buckets","slot","bucket","_objectSpread","ORDERED_ITEM_SLOTS","ITEM_TYPE_ARMOR","ITEM_TYPE_WEAPON","CLASS_NAMES","Bar","_classnames","min","avgValue","range","perc","Math","floor","avgPerc","fullLabelText","fullLabel","react_default","createElement","className","STYLES","classnames","slotName","src","alt","style","width","left","CharacterDisplay","text","slotFullNames","chest","classItem","hunter","titan","warlock","energy","gloves","head","kinetic","legs","powerBySlot","slots","CharacterDisplay_objectSpread","topItemBySlot","instanceData","primaryStat","overallPower","minItemPower","toConsumableArray","values","minPowerToDisplay","maxItemPower","maxPowerToDisplay","ceil","roundedPower","summableArtifactBonusPower","artifactData","bonusPower","backgroundColor","red","green","blue","rgbString","character","emblemColor","emblemBackgroundPath","substr","toUpperCase","defailsValue","Fragment","iconPath","minPower","maxPower","bars","bestItem","CharacterDisplay_Bar","id","itemDefinition","displayProperties","potentialOverallPower","LoadingSpinner","loadingSpinnerContainer","anchor","spinnerLarge","spinnerSmall","MembershipSelect","onMembershipSelect","PLATFORMS","1","2","3","4","membershipSelect","m","onClick","displayName","characterDataRefreshTimer","getPowerBySlot","itemsBySlot","mapValues","item","getOverallPower","sum","mergeItems","characterItemMap","allItems","characterItems","items","isItemEquippableByCharacter","canEquip","cannotEquipReason","equipRequiredLevel","baseCharacterLevel","classType","getBasicCharacterData","pendingBasicProfile","profile","getDataForCharacterId","characterIds","characterData","light","getCharacterData","setCharacterData","setIsFetchingCharacterData","returnBasicCharacterData","pendingManifest","destinyMembership","shouldSetBasicCharacterData","pendingBasicCharacterData","fullProfile","_characters","characterEquipments","characterInventories","profileInventories","itemInstances","allCharacterItems","allCharacterWeapons","_args3","catch","basicCharacterData","characterEquipment","profileInventory","itemComponents","instances","filter","i","itemHash","DestinyInventoryItemDefinition","itemType","mapAndFilterItems","utils_objectSpread","itemInstanceId","inventory","bucketTypeHash","relevantProfileItems","getItemScore","score","isEquipped","getEquipLabel","equippingBlock","uniqueLabel","groupBy","maxBy","uniqueEquippedGroups","forIn","uniqueEquippedGroup","validItemCombinations","otherItems","otherItem","isCombinationValid","combination","nonExotics","push","bestCombination","sumBy","artifactItemComponent","flatMap","find","artifactDefinition","potentialPowerBySlot","_loop","tempPotentialOverallPower","some","_x3","_useState","useState","_useState2","isAuthed","setIsAuthed","_useState3","_useState4","hasAuthError","setAuthError","_useState5","_useState6","hasMembership","setHasMembership","_useState7","_useState8","hasManifestData","setHasManifestData","_useState9","_useState10","hasManifestError","setManifestError","_useState11","_useState12","isFetchingCharacterData","_useState13","_useState14","useEffect","doAuth","doGetCharacterData","setInterval","onSelectMembership","components_MembershipSelect","c","components_CharacterDisplay","components_LoadingSpinner","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","platform_xbox","platform_psn","platform_steam","platform_blizzard","spinner","spin"],"mappings":"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","file":"static/js/main.60e505c3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"characterDisplay\":\"CharacterDisplay_characterDisplay__3LJ6S\",\"header\":\"CharacterDisplay_header__16L7B\",\"emblemBackground\":\"CharacterDisplay_emblemBackground__2jqgs\",\"name\":\"CharacterDisplay_name__3Aw12\",\"power\":\"CharacterDisplay_power__EMI5z\",\"details\":\"CharacterDisplay_details__MVQ9j\",\"detailsRow\":\"CharacterDisplay_detailsRow__3ii9H\",\"detailsLabel\":\"CharacterDisplay_detailsLabel__XTgo_\",\"detailsInlineIcon\":\"CharacterDisplay_detailsInlineIcon__3xwt6\",\"detailsValue\":\"CharacterDisplay_detailsValue__339jn\",\"detailSeparator\":\"CharacterDisplay_detailSeparator__8dSLd\",\"powerBars\":\"CharacterDisplay_powerBars__1ncJP\",\"powerRange\":\"CharacterDisplay_powerRange__lEkeP\",\"rangeLine\":\"CharacterDisplay_rangeLine__14_WH\",\"powerLabel\":\"CharacterDisplay_powerLabel__36Pf6\",\"indicator\":\"CharacterDisplay_indicator__2jPQU\",\"barWrapper\":\"CharacterDisplay_barWrapper__3qGoQ\",\"iconWrapper\":\"CharacterDisplay_iconWrapper__1CafS\",\"icon\":\"CharacterDisplay_icon__3v2oB\",\"barContainer\":\"CharacterDisplay_barContainer__btRVR\",\"barLine\":\"CharacterDisplay_barLine__V3SXF\",\"filledBar\":\"CharacterDisplay_filledBar__2r5Ry\",\"label\":\"CharacterDisplay_label__2J0W5\",\"max\":\"CharacterDisplay_max__1foXT\",\"belowAverage\":\"CharacterDisplay_belowAverage__1jEj1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__4Taua\",\"loadingContainer\":\"App_loadingContainer__1uaFP\",\"charactersContainer\":\"App_charactersContainer__ht0bh\",\"characters\":\"App_characters__1pRqJ\",\"loadingStatus\":\"App_loadingStatus__34OS9\"};","import { get, set } from \"idb-keyval\";\n\nimport {\n  DestinyInventoryItemDefinition,\n  DestinyManifest,\n  getDestinyManifest,\n  getProfile\n} from \"bungie-api-ts/destiny2\";\nimport { HttpClientConfig } from \"bungie-api-ts/http\";\nimport { BUNGIE_API_KEY, getAccessToken } from \"./bungie-auth\";\n\nexport const bungieAuthedFetch = async (config: HttpClientConfig) => {\n  try {\n    const accessToken = getAccessToken();\n    const headers: { [key: string]: string } = { \"x-api-key\": BUNGIE_API_KEY };\n    if (accessToken) {\n      headers.Authorization = `Bearer ${accessToken}`;\n    }\n    const url = `${config.url}${\n      config.params\n        ? \"?\" +\n          Object.entries(config.params).map(\n            ([key, value]) =>\n              `${encodeURIComponent(key)}=${encodeURIComponent(\n                value as string\n              )}`\n          )\n        : \"\"\n    }`;\n    const response = await fetch(url, { headers });\n    return await response.json();\n  } catch (e) {\n    console.error(e);\n    return {};\n  }\n};\n\nconst MANIFEST_VERSION_KEY = \"MANIFEST_VERSION\";\nconst MANIFEST_IDB_KEY = \"MANIFEST_DATA\";\ninterface ManifestData {\n  DestinyInventoryItemDefinition: {\n    [key: string]: DestinyInventoryItemDefinition | undefined;\n  };\n}\nconst manifestPropertyWhitelist = [\"DestinyInventoryItemDefinition\"];\n\nconst getCachedManifestData = async () => {\n  console.log(\"Loading manifest data from IDB\");\n  const manifestData = await get(MANIFEST_IDB_KEY);\n  console.log(\"Finished loading manifest data from IDB\");\n  return manifestData as ManifestData;\n};\n\nconst getRemoteManifestData = async (manifest: DestinyManifest) => {\n  if (!manifest) {\n    throw Error(\"No manifest!\");\n  }\n  const version = manifest.version;\n  console.log(\"Fetching fresh manifest data\");\n  const manifestDataResponse = await fetch(\n    `https://www.bungie.net${manifest.jsonWorldContentPaths.en}`\n  );\n  const manifestData = await manifestDataResponse.json();\n  console.log(\"Pruning manifest data\");\n  Object.keys(manifestData).forEach(key => {\n    if (!manifestPropertyWhitelist.includes(key)) {\n      delete manifestData[key];\n    }\n  });\n  console.log(\"Storing manifest data in IDB\");\n  await set(MANIFEST_IDB_KEY, manifestData);\n  localStorage.setItem(MANIFEST_VERSION_KEY, version);\n  return manifestData;\n};\n\nlet cachedManifestData: ManifestData | undefined;\nlet getManifestPromise: Promise<ManifestData> | undefined;\n\nexport const getManifest = async (): Promise<ManifestData> => {\n  if (!getManifestPromise) {\n    getManifestPromise = (async () => {\n      const manifest = await getDestinyManifest(bungieAuthedFetch);\n      const localStorageManifestVersion = localStorage.getItem(\n        MANIFEST_VERSION_KEY\n      );\n      if (\n        manifest &&\n        manifest.Response &&\n        manifest.Response.version === localStorageManifestVersion &&\n        !window.location.search.includes(\"updateManifest\")\n      ) {\n        if (!cachedManifestData) {\n          cachedManifestData = await getCachedManifestData();\n        }\n        return cachedManifestData;\n      }\n      if (\n        manifest &&\n        manifest.ErrorStatus &&\n        manifest.ErrorStatus !== \"Success\"\n      ) {\n        throw Error(\n          `Error status \"${manifest.ErrorStatus}\" returned from manifest request`\n        );\n      }\n      if (!manifest || !manifest.Response) {\n        throw Error(\"No manifest received!\");\n      }\n      cachedManifestData = undefined;\n      const freshManifestData = await getRemoteManifestData(manifest.Response);\n      cachedManifestData = freshManifestData;\n      return freshManifestData;\n    })();\n  }\n  return getManifestPromise;\n};\n\nexport const getBasicProfile = (membershipType: number, membershipId: string) =>\n  getProfile(bungieAuthedFetch, {\n    components: [\n      200, // DestinyComponentType.Characters,\n      205 // DestinyComponentType.CharacterEquipment,\n    ],\n    destinyMembershipId: membershipId,\n    membershipType\n  });\n\nexport const getFullProfile = (membershipType: number, membershipId: string) =>\n  getProfile(bungieAuthedFetch, {\n    components: [\n      200, // DestinyComponentType.Characters,\n      201, // DestinyComponentType.CharacterInventories,\n      205, // DestinyComponentType.CharacterEquipment,\n      102, // DestinyComponentType.ProfileInventories,\n      300 // DestinyComponentType.ItemInstances,\n    ],\n    destinyMembershipId: membershipId,\n    membershipType\n  });\n","import { getMembershipDataById, UserInfoCard } from \"bungie-api-ts/user\";\r\nimport { bungieAuthedFetch } from \"./bungie-api\";\r\n\r\nconst isDev = process.env.NODE_ENV === \"development\";\r\nexport const BUNGIE_API_KEY = isDev\r\n  ? \"f7f184669f044a89b560fc5f71ed5d60\"\r\n  : \"d94be1e34632448fafdaf77c7afbb501\";\r\nconst BUNGIE_OAUTH_AUTHORIZE_URL = \"https://www.bungie.net/en/OAuth/Authorize\";\r\nconst BUNGIE_OAUTH_CLIENT_ID = isDev ? \"26087\" : \"27213\";\r\nconst BUNGIE_OAUTH_TOKEN_URL =\r\n  \"https://www.bungie.net/platform/app/oauth/token/\";\r\n\r\nconst ACCESS_TOKEN_STORAGE_KEY = \"bungieAccessToken\";\r\nconst ACCESS_TOKEN_EXPIRY_STORAGE_KEY = \"bungieAccessTokenExpiryTime\";\r\nconst BUNGIE_MEMBERSHIP_ID_STORAGE_KEY = \"bungieMembershipId\";\r\nconst DESTINY_MEMBERSHIPS_STORAGE_KEY = \"destinyMemberships\";\r\nconst DESTINY_MEMBERSHIP_STORAGE_KEY = \"destinyMembership\";\r\n\r\nconst clearStorage = () => {\r\n  localStorage.removeItem(ACCESS_TOKEN_STORAGE_KEY);\r\n  localStorage.removeItem(ACCESS_TOKEN_EXPIRY_STORAGE_KEY);\r\n  localStorage.removeItem(BUNGIE_MEMBERSHIP_ID_STORAGE_KEY);\r\n  localStorage.removeItem(DESTINY_MEMBERSHIPS_STORAGE_KEY);\r\n  localStorage.removeItem(DESTINY_MEMBERSHIP_STORAGE_KEY);\r\n};\r\n\r\nconst getAuthUrl = () =>\r\n  `${BUNGIE_OAUTH_AUTHORIZE_URL}?response_type=code&client_id=${BUNGIE_OAUTH_CLIENT_ID}`;\r\n\r\nconst redirectToAuth = () => {\r\n  console.log(\"Redirect to auth\");\r\n  clearStorage();\r\n  window.location.replace(getAuthUrl());\r\n};\r\n\r\nconst handleTokenResponse = async (\r\n  tokenResponse: Response,\r\n  redirect: boolean = false\r\n) => {\r\n  console.log(\"handleTokenResponse\");\r\n  clearStorage();\r\n  if (tokenResponse.status === 200) {\r\n    const data = await tokenResponse.json();\r\n    const accessToken = data.access_token as string;\r\n    const tokenDuration = data.expires_in as number;\r\n    const expiryTime = Date.now() + tokenDuration * 1000;\r\n    const bungieMembershipId = data.membership_id as string;\r\n\r\n    localStorage.setItem(ACCESS_TOKEN_STORAGE_KEY, accessToken);\r\n    localStorage.setItem(\r\n      ACCESS_TOKEN_EXPIRY_STORAGE_KEY,\r\n      expiryTime.toString()\r\n    );\r\n    localStorage.setItem(BUNGIE_MEMBERSHIP_ID_STORAGE_KEY, bungieMembershipId);\r\n\r\n    // 254 = all memberships\r\n    const destinyMembershipsResponse = await getMembershipDataById(\r\n      bungieAuthedFetch,\r\n      { membershipId: bungieMembershipId, membershipType: 254 }\r\n    );\r\n\r\n    if (\r\n      !destinyMembershipsResponse ||\r\n      !destinyMembershipsResponse.Response ||\r\n      (destinyMembershipsResponse.ErrorStatus &&\r\n        destinyMembershipsResponse.ErrorStatus !== \"Success\")\r\n    ) {\r\n      return {\r\n        authSuccess: false,\r\n        error: `Status code ${destinyMembershipsResponse.ErrorStatus} from memberships endpoint`\r\n      };\r\n    }\r\n\r\n    const destinyMemberships =\r\n      destinyMembershipsResponse.Response.destinyMemberships;\r\n    localStorage.setItem(\r\n      DESTINY_MEMBERSHIPS_STORAGE_KEY,\r\n      JSON.stringify(destinyMemberships)\r\n    );\r\n\r\n    // If there is only one membership, select it automatically\r\n    if (destinyMemberships.length === 1) {\r\n      setSelectedDestinyMembership(destinyMemberships[0]);\r\n    }\r\n\r\n    return { accessToken, authSuccess: true };\r\n  } else {\r\n    if (tokenResponse.status !== 200) {\r\n      return {\r\n        authSuccess: false,\r\n        error: `Status code ${tokenResponse.status} from authentication request`\r\n      };\r\n    }\r\n    // return redirectToAuth()\r\n  }\r\n};\r\n\r\nconst fetchAuthToken = async (authCode: string) => {\r\n  console.log(\"fetchAuthToken\", authCode);\r\n  clearStorage();\r\n  const tokenResponse = await fetch(BUNGIE_OAUTH_TOKEN_URL, {\r\n    body: `grant_type=authorization_code&code=${authCode}&client_id=${BUNGIE_OAUTH_CLIENT_ID}`,\r\n    cache: \"no-cache\",\r\n    credentials: \"include\",\r\n    headers: {\r\n      \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n    },\r\n    method: \"POST\",\r\n    redirect: \"follow\",\r\n    referrer: \"no-referrer\"\r\n  });\r\n  return await handleTokenResponse(tokenResponse);\r\n};\r\n\r\nexport const getAccessToken = () => {\r\n  return localStorage.getItem(ACCESS_TOKEN_STORAGE_KEY);\r\n};\r\n\r\nexport const hasValidAuth = () => {\r\n  const accessToken = getAccessToken();\r\n  const accessTokenExpiryTime = parseInt(\r\n    localStorage.getItem(ACCESS_TOKEN_EXPIRY_STORAGE_KEY) || \"-1\",\r\n    10\r\n  );\r\n  const bungieMembershipId = localStorage.getItem(\r\n    BUNGIE_MEMBERSHIP_ID_STORAGE_KEY\r\n  );\r\n  if (\r\n    !accessToken ||\r\n    Date.now() >= accessTokenExpiryTime ||\r\n    !bungieMembershipId\r\n  ) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nexport const getDestinyMemberships = () => {\r\n  const destinyMembershipsString = localStorage.getItem(\r\n    DESTINY_MEMBERSHIPS_STORAGE_KEY\r\n  );\r\n  try {\r\n    if (destinyMembershipsString) {\r\n      return JSON.parse(destinyMembershipsString) as UserInfoCard[];\r\n    }\r\n  } catch (e) {\r\n    console.error(`Error loading destiny memberships`, e.message);\r\n  }\r\n  return undefined;\r\n};\r\n\r\nexport const hasDestinyMemberships = () => {\r\n  return !!getDestinyMemberships();\r\n};\r\n\r\nexport const getSelectedDestinyMembership = () => {\r\n  const destinyMembershipString = localStorage.getItem(\r\n    DESTINY_MEMBERSHIP_STORAGE_KEY\r\n  );\r\n  try {\r\n    if (destinyMembershipString) {\r\n      return JSON.parse(destinyMembershipString) as UserInfoCard;\r\n    }\r\n  } catch (e) {\r\n    console.error(\"Error loading destiny membership\", e.message);\r\n  }\r\n  return undefined;\r\n};\r\n\r\nexport const hasSelectedDestinyMembership = () => {\r\n  return !!getSelectedDestinyMembership();\r\n};\r\n\r\nexport const setSelectedDestinyMembership = (membership: UserInfoCard) => {\r\n  localStorage.setItem(\r\n    DESTINY_MEMBERSHIP_STORAGE_KEY,\r\n    JSON.stringify(membership)\r\n  );\r\n};\r\n\r\nexport const auth = async () => {\r\n  const queryParams = new URLSearchParams(window.location.search);\r\n  const authCode = queryParams.get(\"code\");\r\n\r\n  if (authCode && !hasValidAuth()) {\r\n    console.log(\"Fetching access token with auth code\");\r\n    const authResponse = await fetchAuthToken(authCode);\r\n    if (authResponse && authResponse.authSuccess === false) {\r\n      console.error(authResponse.error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  if (authCode) {\r\n    window.location.replace(\r\n      `${window.location.origin}${window.location.pathname}`\r\n    );\r\n  }\r\n\r\n  if (hasValidAuth() && hasDestinyMemberships()) {\r\n    return true;\r\n  }\r\n\r\n  console.log(\r\n    \"Redirecting to fresh authentication for missing or expired access token, or missing destiny memberships\"\r\n  );\r\n  clearStorage();\r\n  redirectToAuth();\r\n};\r\n","export const ITEM_SLOT_KINETIC = \"kinetic\";\r\nexport const ITEM_SLOT_ENERGY = \"energy\";\r\nexport const ITEM_SLOT_POWER = \"power\";\r\nexport const ITEM_SLOT_HEAD = \"head\";\r\nexport const ITEM_SLOT_GLOVES = \"gloves\";\r\nexport const ITEM_SLOT_CHEST = \"chest\";\r\nexport const ITEM_SLOT_LEGS = \"legs\";\r\nexport const ITEM_SLOT_CLASS_ITEM = \"classItem\";\r\n\r\nexport const ITEM_SLOT_BUCKETS = {\r\n  [ITEM_SLOT_KINETIC]: 1498876634,\r\n  [ITEM_SLOT_ENERGY]: 2465295065,\r\n  [ITEM_SLOT_POWER]: 953998645,\r\n  [ITEM_SLOT_HEAD]: 3448274439,\r\n  [ITEM_SLOT_GLOVES]: 3551918588,\r\n  [ITEM_SLOT_CHEST]: 14239492,\r\n  [ITEM_SLOT_LEGS]: 20886954,\r\n  [ITEM_SLOT_CLASS_ITEM]: 1585787867\r\n};\r\n\r\nexport const ITEM_BUCKET_SLOTS = Object.entries(ITEM_SLOT_BUCKETS).reduce(\r\n  (buckets, [slot, bucket]) => ({ ...buckets, [bucket]: slot }),\r\n  {} as { [bucket: number]: string }\r\n);\r\n\r\nexport const ITEM_SLOT_GROUP_WEAPONS = [\r\n  ITEM_SLOT_KINETIC,\r\n  ITEM_SLOT_ENERGY,\r\n  ITEM_SLOT_POWER\r\n];\r\nexport const ITEM_SLOT_GROUP_ARMOR = [\r\n  ITEM_SLOT_HEAD,\r\n  ITEM_SLOT_GLOVES,\r\n  ITEM_SLOT_CHEST,\r\n  ITEM_SLOT_LEGS,\r\n  ITEM_SLOT_CLASS_ITEM\r\n];\r\n\r\nexport const ORDERED_ITEM_SLOTS = [\r\n  ...ITEM_SLOT_GROUP_WEAPONS,\r\n  ...ITEM_SLOT_GROUP_ARMOR\r\n];\r\n\r\nexport const ITEM_TIER_TYPE_EXOTIC = 6;\r\n\r\nexport const ITEM_TYPE_ARMOR = 2;\r\nexport const ITEM_TYPE_WEAPON = 3;\r\n\r\nexport const CLASS_TYPE_ALL = 3;\r\n\r\nexport const CLASS_TITAN = \"titan\";\r\nexport const CLASS_HUNTER = \"hunter\";\r\nexport const CLASS_WARLOCK = \"warlock\";\r\n\r\nexport const CLASS_NAMES = [CLASS_TITAN, CLASS_HUNTER, CLASS_WARLOCK];\r\n\r\nexport const ITEM_TYPE_ARTIFACT = 28;\r\nexport const UNDYING_ARTIFACT_ITEM_HASH = 1387688628;\r\n","import classnames from \"classnames\";\r\nimport React from \"react\";\r\n\r\nimport { CharacterData } from \"../types\";\r\n\r\nimport { ORDERED_ITEM_SLOTS } from \"../constants\";\r\nimport STYLES from \"./CharacterDisplay.module.scss\";\r\n\r\ninterface CharacterDisplayProps {\r\n  data: CharacterData;\r\n}\r\n\r\nconst titleCase = (text: string) =>\r\n  text.substr(0, 1).toUpperCase() + text.substr(1);\r\n\r\ninterface BarProps {\r\n  min: number;\r\n  max: number;\r\n  value: number;\r\n  avgValue: number;\r\n  label: string;\r\n  icon?: string;\r\n}\r\nconst Bar = ({ min, max, value, avgValue, label, icon }: BarProps) => {\r\n  const range = max - min;\r\n  const perc = Math.floor(((value - min) / range) * 1000) / 10;\r\n  const avgPerc = Math.floor(((avgValue - min) / range) * 1000) / 10;\r\n  // const plusTwoPerc = Math.floor(((avgValue + 2 - min) / range) * 1000) / 10\r\n  // const plusFivePerc = Math.floor(((avgValue + 5 - min) / range) * 1000) / 10\r\n  const fullLabelText = `${value} ${label}`;\r\n  const fullLabel = (\r\n    <span className={STYLES.label}>\r\n      <span\r\n        className={classnames(STYLES.power, {\r\n          [STYLES.max]: value >= max,\r\n          [STYLES.belowAverage]: value < avgValue\r\n        })}\r\n      >\r\n        {value}\r\n      </span>\r\n      <span className={STYLES.slotName}>{label}</span>\r\n    </span>\r\n  );\r\n  return (\r\n    <div className={STYLES.barWrapper}>\r\n      <div className={STYLES.iconWrapper}>\r\n        {icon && (\r\n          <img\r\n            className={STYLES.icon}\r\n            src={`https://www.bungie.net${icon}`}\r\n            alt={fullLabelText}\r\n          />\r\n        )}\r\n      </div>\r\n      <div className={STYLES.barContainer}>\r\n        <div className={STYLES.filledBar} style={{ width: `${perc}%` }}>\r\n          {fullLabel}\r\n        </div>\r\n        <div className={STYLES.barLine} style={{ left: `${avgPerc}%` }} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CharacterDisplay = ({ data }: CharacterDisplayProps) => {\r\n  const classItemNames: { [key: string]: string } = {\r\n    hunter: \"Hunter Cloak\",\r\n    titan: \"Titan Mark\",\r\n    warlock: \"Warlock Bond\"\r\n  };\r\n  const slotFullNames: { [key: string]: string } = {\r\n    chest: \"Chest Armor\",\r\n    classItem: classItemNames[data.className],\r\n    energy: \"Energy Weapon\",\r\n    gloves: \"Gauntlets\",\r\n    head: \"Helmet\",\r\n    kinetic: \"Kinetic Weapon\",\r\n    legs: \"Leg Armor\",\r\n    power: \"Power Weapon\"\r\n  };\r\n\r\n  const rgbString = ({\r\n    red,\r\n    green,\r\n    blue\r\n  }: {\r\n    red: number;\r\n    green: number;\r\n    blue: number;\r\n  }) => `rgb(${red},${green},${blue})`;\r\n\r\n  interface PowerBySlot {\r\n    [slotName: string]: number;\r\n  }\r\n\r\n  // Get power by slot, using overall power if slot data does not exist\r\n  const powerBySlot = ORDERED_ITEM_SLOTS.reduce(\r\n    (slots, slotName) => ({\r\n      ...slots,\r\n      [slotName]: data.topItemBySlot\r\n        ? data.topItemBySlot[slotName].instanceData.primaryStat.value\r\n        : data.overallPower\r\n    }),\r\n    {} as PowerBySlot\r\n  );\r\n\r\n  // Round to 50s\r\n  const minItemPower = Math.min(...Object.values(powerBySlot));\r\n  const minPowerToDisplay = Math.max(\r\n    Math.floor(minItemPower / 50) * 50 - 50,\r\n    0\r\n  );\r\n  const maxItemPower = Math.max(...Object.values(powerBySlot));\r\n  const maxPowerToDisplay =\r\n    data.maxItemPower || Math.ceil(maxItemPower / 50) * 50;\r\n\r\n  const roundedPower = Math.floor(data.overallPower);\r\n\r\n  const range = maxPowerToDisplay - minPowerToDisplay;\r\n  const perc =\r\n    Math.floor(((roundedPower - minPowerToDisplay) / range) * 1000) / 10;\r\n\r\n  const withSign = (value: number) => {\r\n    if (value >= 0) {\r\n      return `+${value}`;\r\n    }\r\n    return `${value}`;\r\n  };\r\n\r\n  const summableArtifactBonusPower = data.artifactData\r\n    ? data.artifactData.bonusPower\r\n    : 0;\r\n\r\n  return (\r\n    <div\r\n      className={classnames(\r\n        STYLES.characterDisplay,\r\n        STYLES[`class_${data.className}`]\r\n      )}\r\n      style={{ backgroundColor: rgbString(data.character.emblemColor) }}\r\n    >\r\n      <div className={STYLES.header}>\r\n        <img\r\n          className={STYLES.emblemBackground}\r\n          src={`https://www.bungie.net${data.character.emblemBackgroundPath}`}\r\n          alt=\"\"\r\n        />\r\n        <div className={STYLES.name}>{titleCase(data.className)}</div>\r\n        <div className={STYLES.power}>\r\n          {roundedPower + summableArtifactBonusPower}\r\n        </div>\r\n      </div>\r\n      <div className={STYLES.details}>\r\n        <div className={STYLES.detailsRow}>\r\n          <div className={STYLES.detailsLabel}>Max equippable gear power:</div>\r\n          <div className={STYLES.defailsValue}>{roundedPower}</div>\r\n        </div>\r\n        {data.artifactData ? (\r\n          <>\r\n            <div className={STYLES.detailsRow}>\r\n              <div className={STYLES.detailsLabel}>\r\n                <img\r\n                  className={STYLES.detailsInlineIcon}\r\n                  src={`https://www.bungie.net${data.artifactData.iconPath}`}\r\n                  alt=\"\"\r\n                />\r\n                {data.artifactData.name} bonus power:\r\n              </div>\r\n              <div className={STYLES.detailsValue}>\r\n                {withSign(data.artifactData.bonusPower)}\r\n              </div>\r\n            </div>\r\n\r\n            <div className={STYLES.detailsRow}>\r\n              <div className={STYLES.detailsLabel}>Total combined power:</div>\r\n              <div className={STYLES.detailsValue}>\r\n                {roundedPower + summableArtifactBonusPower}\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : null}\r\n      </div>\r\n      <div className={STYLES.powerBars}>\r\n        <div className={STYLES.powerRange}>\r\n          <div className={STYLES.minPower}>{minPowerToDisplay}</div>\r\n          <div className={STYLES.rangeLine} />\r\n          <div className={STYLES.maxPower}>{maxPowerToDisplay}</div>\r\n        </div>\r\n        <div className={STYLES.bars}>\r\n          {Object.entries(powerBySlot).map(([slotName, power]) => {\r\n            const bestItem = data.topItemBySlot && data.topItemBySlot[slotName];\r\n            return (\r\n              <Bar\r\n                key={`${data.id}_${slotName}`}\r\n                min={minPowerToDisplay}\r\n                max={maxPowerToDisplay}\r\n                value={power}\r\n                avgValue={roundedPower}\r\n                label={slotFullNames[slotName] || slotName}\r\n                icon={\r\n                  bestItem &&\r\n                  bestItem.itemDefinition &&\r\n                  bestItem.itemDefinition.displayProperties.icon\r\n                }\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n        <div className={STYLES.powerLabel}>\r\n          <div className={STYLES.indicator} style={{ left: `${perc}%` }}>\r\n            {roundedPower}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={STYLES.details}>\r\n        {data.potentialOverallPower &&\r\n        data.potentialOverallPower > data.overallPower &&\r\n        data.potentialOverallPower > 900 ? (\r\n          <>\r\n            <div className={STYLES.detailsRow}>\r\n              <div className={STYLES.detailsLabel}>\r\n                World drops can increase your gear power to:\r\n              </div>\r\n              <div className={STYLES.detailsValue}>\r\n                {data.potentialOverallPower}\r\n              </div>\r\n            </div>\r\n            <div className={STYLES.detailSeparator} />\r\n          </>\r\n        ) : null}\r\n\r\n        {data.overallPower < 900 ? (\r\n          <div className={STYLES.detailsRow}>\r\n            Any rewards throughout the game can increase your gear power level\r\n            up to 900\r\n          </div>\r\n        ) : null}\r\n\r\n        {data.potentialOverallPower === data.overallPower &&\r\n        data.overallPower >= 900 &&\r\n        data.overallPower < 950 ? (\r\n          <div className={STYLES.detailsRow}>\r\n            Powerful rewards can increase your gear power level up to 950\r\n          </div>\r\n        ) : null}\r\n\r\n        {data.potentialOverallPower === data.overallPower &&\r\n        data.overallPower >= 950 &&\r\n        data.overallPower < 960 ? (\r\n          <div className={STYLES.detailsRow}>\r\n            Pinnacle rewards can increase your gear power level up to 960\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterDisplay;\r\n","import React from \"react\";\n\nimport STYLES from \"./LoadingSpinner.module.scss\";\n\ninterface LoadingSpinnerProps {\n  status: string;\n}\n\nconst LoadingSpinner = ({ status }: LoadingSpinnerProps) => {\n  return (\n    <div className={STYLES.loadingSpinnerContainer}>\n      <div className={STYLES.anchor}>\n        <div className={STYLES.spinnerLarge} />\n        <div className={STYLES.spinnerSmall} />\n        <div className={STYLES.status}>{status}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import { UserInfoCard } from \"bungie-api-ts/user\";\nimport classnames from \"classnames\";\nimport React from \"react\";\n\nimport { getDestinyMemberships } from \"../services/bungie-auth\";\nimport STYLES from \"./MembershipSelect.module.scss\";\n\ninterface MembershipSelectProps {\n  onMembershipSelect: (membership: UserInfoCard) => any;\n}\n\nconst MembershipSelect = ({ onMembershipSelect }: MembershipSelectProps) => {\n  const destinyMemberships = getDestinyMemberships();\n\n  if (!destinyMemberships) {\n    return null;\n  }\n\n  if (destinyMemberships.length === 0) {\n    return <div>No destiny memberships!</div>;\n  }\n\n  const PLATFORMS: { [key: number]: string } = {\n    1: \"xbox\",\n    2: \"psn\",\n    3: \"steam\",\n    4: \"blizzard\"\n  };\n\n  return (\n    <div className={STYLES.membershipSelect}>\n      {destinyMemberships.map(m => {\n        return (\n          <div\n            key={m.membershipId}\n            className={classnames(\n              STYLES.membership,\n              STYLES[`platform_${PLATFORMS[m.membershipType]}`]\n            )}\n            onClick={() => onMembershipSelect(m)}\n          >\n            {m.displayName}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default MembershipSelect;\n","import {\r\n  DestinyCharacterComponent,\r\n  DestinyItemComponent\r\n} from \"bungie-api-ts/destiny2\";\r\n\r\nimport forIn from \"lodash/forIn\";\r\nimport groupBy from \"lodash/groupBy\";\r\nimport mapValues from \"lodash/mapValues\";\r\nimport maxBy from \"lodash/maxBy\";\r\nimport sumBy from \"lodash/sumBy\";\r\n\r\nimport {\r\n  CLASS_NAMES,\r\n  CLASS_TYPE_ALL,\r\n  ITEM_BUCKET_SLOTS,\r\n  ITEM_SLOT_BUCKETS,\r\n  ITEM_TYPE_ARMOR,\r\n  ITEM_TYPE_WEAPON,\r\n  UNDYING_ARTIFACT_ITEM_HASH\r\n} from \"../constants\";\r\nimport {\r\n  CharacterData,\r\n  ItemBySlot,\r\n  JoinedItemDefinition,\r\n  PowerBySlot,\r\n  SeasonalArtifactData\r\n} from \"../types\";\r\nimport { getBasicProfile, getFullProfile, getManifest } from \"./bungie-api\";\r\nimport { auth, getSelectedDestinyMembership } from \"./bungie-auth\";\r\n\r\nconst getPowerBySlot = (itemsBySlot: ItemBySlot): PowerBySlot =>\r\n  mapValues(itemsBySlot, item => item.instanceData.primaryStat.value);\r\n\r\nconst getOverallPower = (powerBySlot: PowerBySlot) =>\r\n  Math.floor(\r\n    Object.values(powerBySlot).reduce((sum, power) => sum + power, 0) /\r\n      Object.keys(ITEM_SLOT_BUCKETS).length\r\n  );\r\n\r\nconst mergeItems = <\r\n  T extends { [key: string]: { items: DestinyItemComponent[] } }\r\n>(\r\n  characterItemMap: T\r\n) => {\r\n  return Object.values(characterItemMap).reduce(\r\n    (allItems, characterItems) => allItems.concat(characterItems.items),\r\n    [] as DestinyItemComponent[]\r\n  );\r\n};\r\n\r\nconst isItemEquippableByCharacter = (\r\n  item: JoinedItemDefinition,\r\n  character: DestinyCharacterComponent\r\n) => {\r\n  if (item.instanceData.canEquip) {\r\n    return true;\r\n  } // If the game says we can equip it, let's believe it\r\n  if (item.instanceData.cannotEquipReason === 16) {\r\n    return true;\r\n  } // Only reason is that it's in your vault\r\n  if (item.instanceData.equipRequiredLevel > character.baseCharacterLevel) {\r\n    return false;\r\n  }\r\n  if (\r\n    item.itemDefinition.classType !== CLASS_TYPE_ALL &&\r\n    item.itemDefinition.classType !== character.classType\r\n  ) {\r\n    return false;\r\n  }\r\n  // Let's ignore the rest for now\r\n  return true;\r\n};\r\n\r\nconst getBasicCharacterData = async (\r\n  pendingBasicProfile: ReturnType<typeof getBasicProfile>\r\n) => {\r\n  const profile = await pendingBasicProfile;\r\n  if (!profile || !profile.Response || !profile.Response.characters) {\r\n    return;\r\n  }\r\n  const characters = profile.Response.characters.data;\r\n\r\n  if (characters) {\r\n    const getDataForCharacterId = (id: string): CharacterData => {\r\n      const character = characters[id];\r\n      const className = CLASS_NAMES[character.classType];\r\n      return {\r\n        character,\r\n        className,\r\n        id,\r\n        overallPower: character.light\r\n      };\r\n    };\r\n\r\n    const characterIds = Object.keys(characters);\r\n    const characterData = characterIds.map(id => getDataForCharacterId(id));\r\n    return characterData;\r\n  }\r\n};\r\n\r\nexport const getCharacterData = async (\r\n  setCharacterData: (state: CharacterData[]) => any,\r\n  setIsFetchingCharacterData: (state: boolean) => any,\r\n  returnBasicCharacterData: boolean = false\r\n) => {\r\n  try {\r\n    const isAuthed = await auth();\r\n    if (!isAuthed) {\r\n      return;\r\n    }\r\n\r\n    const pendingManifest = getManifest();\r\n\r\n    setIsFetchingCharacterData(true);\r\n\r\n    const destinyMembership = getSelectedDestinyMembership();\r\n    if (!destinyMembership) {\r\n      return;\r\n    }\r\n\r\n    let pendingBasicProfile: ReturnType<typeof getBasicProfile> | undefined;\r\n\r\n    // Flag lets this be disabled to prevent setting after full profile is returned\r\n    let shouldSetBasicCharacterData = true;\r\n    // Produce basic data if flag is set\r\n    if (returnBasicCharacterData) {\r\n      pendingBasicProfile = getBasicProfile(\r\n        destinyMembership.membershipType,\r\n        destinyMembership.membershipId\r\n      );\r\n      pendingBasicProfile.catch(() => {\r\n        /* Do nothing */\r\n      });\r\n      const pendingBasicCharacterData = getBasicCharacterData(\r\n        pendingBasicProfile\r\n      ).catch(e => {\r\n        /* Do nothing */\r\n      });\r\n      (async () => {\r\n        const basicCharacterData = await pendingBasicCharacterData;\r\n        if (basicCharacterData && shouldSetBasicCharacterData) {\r\n          setCharacterData(basicCharacterData);\r\n        }\r\n      })();\r\n    }\r\n\r\n    const fullProfile = await getFullProfile(\r\n      destinyMembership.membershipType,\r\n      destinyMembership.membershipId\r\n    );\r\n    setIsFetchingCharacterData(false);\r\n\r\n    if (\r\n      !fullProfile ||\r\n      !fullProfile.Response ||\r\n      !fullProfile.Response.characters ||\r\n      !fullProfile.Response.characters.data ||\r\n      !fullProfile.Response.characterEquipment ||\r\n      !fullProfile.Response.characterEquipment.data ||\r\n      !fullProfile.Response.characterInventories ||\r\n      !fullProfile.Response.characterInventories.data ||\r\n      !fullProfile.Response.profileInventory ||\r\n      !fullProfile.Response.profileInventory.data ||\r\n      !fullProfile.Response.itemComponents ||\r\n      !fullProfile.Response.itemComponents.instances ||\r\n      !fullProfile.Response.itemComponents.instances.data\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const characters = fullProfile.Response.characters.data;\r\n    const characterEquipments = fullProfile.Response.characterEquipment.data;\r\n    const characterInventories = fullProfile.Response.characterInventories.data;\r\n    const profileInventories = fullProfile.Response.profileInventory.data;\r\n    const itemInstances = fullProfile.Response.itemComponents.instances.data;\r\n\r\n    const manifest = await pendingManifest;\r\n\r\n    if (!manifest) {\r\n      return;\r\n    }\r\n\r\n    const allCharacterItems = mergeItems(characterInventories)\r\n      .concat(mergeItems(characterEquipments))\r\n      .concat(profileInventories.items);\r\n    const allCharacterWeapons = allCharacterItems.filter(i => {\r\n      const itemDefinition =\r\n        i.itemHash && manifest.DestinyInventoryItemDefinition[i.itemHash];\r\n      return itemDefinition && itemDefinition.itemType === ITEM_TYPE_WEAPON;\r\n    });\r\n\r\n    const getDataForCharacterId = (id: string): CharacterData => {\r\n      const character = characters[id];\r\n      const className = CLASS_NAMES[character.classType];\r\n\r\n      const mapAndFilterItems = (\r\n        items: DestinyItemComponent[]\r\n      ): JoinedItemDefinition[] =>\r\n        items\r\n          .map(item => {\r\n            const instanceData = item.itemInstanceId\r\n              ? itemInstances[item.itemInstanceId]\r\n              : undefined;\r\n            const itemDefinition =\r\n              manifest.DestinyInventoryItemDefinition[item.itemHash];\r\n            return {\r\n              ...item,\r\n              instanceData,\r\n              itemDefinition\r\n            };\r\n          })\r\n          .filter(\r\n            i =>\r\n              i.instanceData &&\r\n              i.itemDefinition &&\r\n              [ITEM_TYPE_ARMOR, ITEM_TYPE_WEAPON].includes(\r\n                i.itemDefinition.itemType\r\n              )\r\n          )\r\n          .map(i => ({\r\n            ...i,\r\n            instanceData: i.instanceData!,\r\n            itemDefinition: i.itemDefinition!\r\n          }))\r\n          .map(i => ({\r\n            ...i,\r\n            slotName:\r\n              ITEM_BUCKET_SLOTS[i.itemDefinition.inventory.bucketTypeHash]\r\n          }))\r\n          .filter(i => isItemEquippableByCharacter(i, character));\r\n\r\n      const characterItems = mapAndFilterItems(\r\n        characterInventories[id].items\r\n          .concat(characterEquipments[id].items)\r\n          .concat(allCharacterWeapons)\r\n      );\r\n      const relevantProfileItems = mapAndFilterItems(\r\n        profileInventories.items\r\n      ).filter(\r\n        i =>\r\n          i.itemDefinition.classType === CLASS_TYPE_ALL ||\r\n          i.itemDefinition.classType === character.classType\r\n      );\r\n\r\n      const allItems = characterItems.concat(relevantProfileItems);\r\n\r\n      const getItemScore = (item: JoinedItemDefinition) => {\r\n        let score = item.instanceData.primaryStat.value;\r\n        if (item.instanceData.isEquipped) {\r\n          score += 0.1;\r\n        }\r\n        if (item.location === 1) {\r\n          score += 0.05;\r\n        }\r\n        return score;\r\n      };\r\n\r\n      const getEquipLabel = (item: JoinedItemDefinition) =>\r\n        item.itemDefinition.equippingBlock.uniqueLabel;\r\n\r\n      // Group by slot\r\n      const itemsBySlot = groupBy(allItems, i => i.slotName);\r\n      // Get max power items per slot\r\n      let topItemBySlot = mapValues(\r\n        itemsBySlot,\r\n        items => maxBy(items, getItemScore)!\r\n      );\r\n      // Get overlaps by equip label\r\n      const uniqueEquippedGroups = groupBy(\r\n        Object.values(topItemBySlot).filter(getEquipLabel),\r\n        getEquipLabel\r\n      );\r\n      // For overlaps with more than one item, generate valid options where all-but-one item is swapped for the next best non-exotic\r\n      forIn(uniqueEquippedGroups, uniqueEquippedGroup => {\r\n        if (uniqueEquippedGroup.length <= 1) {\r\n          return;\r\n        }\r\n\r\n        const validItemCombinations: ItemBySlot[] = [];\r\n\r\n        uniqueEquippedGroup.forEach(item => {\r\n          const otherItems = uniqueEquippedGroup.filter(\r\n            otherItem => otherItem !== item\r\n          );\r\n          let isCombinationValid = true;\r\n          const combination = { ...topItemBySlot };\r\n          otherItems.forEach(otherItem => {\r\n            // Find non-exotics for this slot\r\n            const nonExotics = itemsBySlot[otherItem.slotName].filter(\r\n              i => !getEquipLabel(i)\r\n            );\r\n            if (nonExotics.length > 0) {\r\n              // Select max power from non-exotics\r\n              combination[otherItem.slotName] = maxBy(\r\n                nonExotics,\r\n                getItemScore\r\n              )!;\r\n            } else {\r\n              // No non-exotic options for this slot, so whole combination is invalidaa\r\n              isCombinationValid = false;\r\n            }\r\n          });\r\n          if (isCombinationValid) {\r\n            validItemCombinations.push(combination);\r\n          }\r\n        });\r\n\r\n        // Select highest total scoring valid combination, if alternative item combinations have been generated\r\n        if (validItemCombinations.length > 0) {\r\n          const bestCombination = maxBy(validItemCombinations, combination =>\r\n            sumBy(Object.values(combination), getItemScore)\r\n          )!;\r\n          topItemBySlot = bestCombination;\r\n        }\r\n      });\r\n\r\n      const powerBySlot = getPowerBySlot(topItemBySlot);\r\n      const overallPower = getOverallPower(powerBySlot);\r\n\r\n      const artifactItemComponent = Object.values(characterEquipments)\r\n        .flatMap(i => i.items)\r\n        .find(i => i.itemHash === UNDYING_ARTIFACT_ITEM_HASH);\r\n\r\n      let artifactData: SeasonalArtifactData | undefined;\r\n      if (artifactItemComponent && artifactItemComponent.itemInstanceId) {\r\n        const artifactDefinition = manifest.DestinyInventoryItemDefinition[\r\n          artifactItemComponent.itemHash\r\n        ]!;\r\n        const artifactInstance = itemInstances[\r\n          artifactItemComponent.itemInstanceId\r\n        ]!;\r\n        artifactData = {\r\n          bonusPower: artifactInstance.primaryStat.value,\r\n          iconPath: artifactDefinition.displayProperties.icon,\r\n          name: artifactDefinition.displayProperties.name\r\n        };\r\n      }\r\n\r\n      const potentialPowerBySlot = { ...powerBySlot };\r\n      while (\r\n        Object.values(potentialPowerBySlot).some(\r\n          power => power < getOverallPower(potentialPowerBySlot)\r\n        )\r\n      ) {\r\n        const tempPotentialOverallPower = getOverallPower(potentialPowerBySlot);\r\n        Object.keys(potentialPowerBySlot).forEach(\r\n          slot =>\r\n            (potentialPowerBySlot[slot] = Math.max(\r\n              tempPotentialOverallPower,\r\n              potentialPowerBySlot[slot]\r\n            ))\r\n        );\r\n      }\r\n      const potentialOverallPower = getOverallPower(potentialPowerBySlot);\r\n\r\n      return {\r\n        artifactData,\r\n        character,\r\n        className,\r\n        id,\r\n        overallPower,\r\n        potentialOverallPower,\r\n        potentialPowerBySlot,\r\n        topItemBySlot\r\n      };\r\n    };\r\n\r\n    const characterIds = Object.keys(characters);\r\n    const characterData = characterIds.map(id => getDataForCharacterId(id));\r\n    shouldSetBasicCharacterData = false;\r\n    setCharacterData(characterData);\r\n  } catch (e) {\r\n    console.error(`Error fetching manifest and character data`, e);\r\n    setIsFetchingCharacterData(false);\r\n    return;\r\n  }\r\n};\r\n","import { UserInfoCard } from \"bungie-api-ts/user\";\nimport React, { useEffect, useState } from \"react\";\n\nimport {\n  auth,\n  hasSelectedDestinyMembership,\n  hasValidAuth,\n  setSelectedDestinyMembership\n} from \"./services/bungie-auth\";\nimport { CharacterData } from \"./types\";\n\nimport CharacterDisplay from \"./components/CharacterDisplay\";\nimport LoadingSpinner from \"./components/LoadingSpinner\";\nimport MembershipSelect from \"./components/MembershipSelect\";\nimport { getManifest } from \"./services/bungie-api\";\nimport { getCharacterData } from \"./services/utils\";\n\nimport \"normalize.css\";\nimport STYLES from \"./App.module.scss\";\n\nlet characterDataRefreshTimer: number | undefined;\n\nconst App = () => {\n  const [isAuthed, setIsAuthed] = useState<boolean>(hasValidAuth());\n  const [hasAuthError, setAuthError] = useState<boolean>(false);\n  const [hasMembership, setHasMembership] = useState<boolean>(\n    hasSelectedDestinyMembership()\n  );\n  const [hasManifestData, setHasManifestData] = useState<boolean>(false);\n  const [hasManifestError, setManifestError] = useState<boolean>(false);\n  const [isFetchingCharacterData, setIsFetchingCharacterData] = useState<\n    boolean\n  >(false);\n  const [characterData, setCharacterData] = useState<\n    CharacterData[] | undefined\n  >(undefined);\n\n  useEffect(() => {\n    const doAuth = async () => {\n      const authResult = await auth();\n      if (authResult) {\n        setIsAuthed(true);\n      } else {\n        setAuthError(true);\n      }\n    };\n    if (!isAuthed) {\n      doAuth();\n    }\n  });\n\n  useEffect(() => {\n    (async () => {\n      try {\n        await getManifest();\n        setHasManifestData(true);\n      } catch (e) {\n        console.error(e.message);\n        setManifestError(true);\n      }\n    })();\n  });\n\n  useEffect(() => {\n    const doGetCharacterData = (returnBasicCharacterData: boolean = false) =>\n      getCharacterData(\n        setCharacterData,\n        setIsFetchingCharacterData,\n        returnBasicCharacterData\n      );\n    if (isAuthed && hasMembership && !isFetchingCharacterData) {\n      if (!characterDataRefreshTimer) {\n        characterDataRefreshTimer = setInterval(doGetCharacterData, 10000);\n        doGetCharacterData(true);\n      }\n    }\n  }, [isAuthed, hasMembership, hasManifestData, isFetchingCharacterData]);\n\n  const onSelectMembership = (membership: UserInfoCard) => {\n    setSelectedDestinyMembership(membership);\n    setHasMembership(true);\n  };\n\n  let status = \"\";\n  if (hasAuthError) {\n    status = \"Authentication error, refresh page to try again!\";\n  } else if (hasManifestError) {\n    status = \"Error fetching manifest, refresh page to try again!\";\n  } else if (!isAuthed) {\n    status = \"Authenticating...\";\n  } else if (!hasMembership) {\n    status = \"Waiting for Destiny platform selection...\";\n  } else if (!hasManifestData) {\n    status = \"Fetching Destiny item manifest...\";\n  } else if (!characterData || characterData.length === 0) {\n    if (isFetchingCharacterData) {\n      status = \"Fetching character data...\";\n    } else {\n      status = \"No character data\";\n    }\n  }\n\n  (window as any).characterData = characterData;\n\n  if (characterData && characterData.length > 0) {\n    return (\n      <div className={STYLES.App}>\n        <MembershipSelect onMembershipSelect={onSelectMembership} />\n        <div className={STYLES.charactersContainer}>\n          <div className={STYLES.characters}>\n            {characterData.map(c => (\n              <CharacterDisplay key={c.id} data={c} />\n            ))}\n          </div>\n        </div>\n        {status && <LoadingSpinner status={status} />}\n      </div>\n    );\n  }\n\n  return (\n    <div className={STYLES.App}>\n      <LoadingSpinner status={status} />\n      <MembershipSelect onMembershipSelect={onSelectMembership} />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"membershipSelect\":\"MembershipSelect_membershipSelect__vf_ZG\",\"membership\":\"MembershipSelect_membership__RaveC\",\"platform_xbox\":\"MembershipSelect_platform_xbox__1ZAgU\",\"platform_psn\":\"MembershipSelect_platform_psn__WN9gB\",\"platform_steam\":\"MembershipSelect_platform_steam__1YUUA\",\"platform_blizzard\":\"MembershipSelect_platform_blizzard__1OiG6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"anchor\":\"LoadingSpinner_anchor__3S34b\",\"spinner\":\"LoadingSpinner_spinner__2W4P9\",\"spin\":\"LoadingSpinner_spin__1qIkq\",\"loadingSpinnerContainer\":\"LoadingSpinner_loadingSpinnerContainer__2OZbs\",\"spinnerLarge\":\"LoadingSpinner_spinnerLarge__3zeAT\",\"spinnerSmall\":\"LoadingSpinner_spinnerSmall__25yaq\",\"status\":\"LoadingSpinner_status__33FO4\"};"],"sourceRoot":""}