{"version":3,"sources":["App.module.scss","components/MembershipSelect.module.scss","components/CharacterDisplay.module.scss","services/bungie-api.ts","App.tsx","services/bungie-auth.ts","constants.ts","services/utils.ts","components/CharacterDisplay.tsx","components/MembershipSelect.tsx","components/LoadingSpinner.tsx","serviceWorker.ts","index.tsx","components/LoadingSpinner.module.scss"],"names":["module","exports","App","loadingContainer","charactersContainer","characters","loadingStatus","membershipSelect","membership","platform_blizzard","platform_psn","platform_xbox","characterDisplay","header","emblemBackground","name","power","powerBars","powerRange","rangeLine","powerLabel","indicator","barWrapper","iconWrapper","icon","barContainer","barLine","filledBar","cachedManifestData","getManifestPromise","characterDataRefreshTimer","bungieAuthedFetch","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","config","accessToken","headers","url","response","wrap","_context","prev","next","getAccessToken","x-api-key","BUNGIE_API_KEY","Authorization","concat","params","entries","map","_ref2","_ref3","slicedToArray","key","value","encodeURIComponent","fetch","sent","json","abrupt","t0","console","error","stop","_x","apply","this","arguments","manifestPropertyWhitelist","getCachedManifestData","_ref4","_callee2","manifestData","_context2","log","get","getRemoteManifestData","_ref5","_callee3","manifest","version","manifestDataResponse","_context3","jsonWorldContentPaths","en","keys","forEach","includes","set","localStorage","setItem","_x2","getManifest","_ref6","_callee5","_context5","_callee4","localStorageManifestVersion","freshManifestData","_context4","getDestinyManifest","getItem","Response","window","location","search","undefined","clearStorage","removeItem","handleTokenResponse","tokenResponse","data","tokenDuration","expiryTime","bungieMembershipId","destinyMembershipsResponse","destinyMemberships","_args","length","status","access_token","expires_in","Date","now","membership_id","toString","getMembershipDataById","membershipId","membershipType","JSON","stringify","setSelectedDestinyMembership","fetchAuthToken","authCode","method","cache","credentials","Content-Type","redirect","referrer","body","hasValidAuth","accessTokenExpiryTime","parseInt","getDestinyMemberships","destinyMembershipsString","parse","e","message","getSelectedDestinyMembership","destinyMembershipString","auth","queryParams","URLSearchParams","replace","origin","pathname","ITEM_SLOT_BUCKETS","_ITEM_SLOT_BUCKETS","defineProperty","ITEM_BUCKET_SLOTS","reduce","buckets","slot","bucket","objectSpread","ITEM_SLOT_GROUP_WEAPONS","ITEM_SLOT_GROUP_ARMOR","CLASS_NAMES","ITEM_TYPE_ARMOR","ITEM_TYPE_WEAPON","getOverallPower","powerBySlot","values","sum","getFullProfile","getProfile","destinyMembershipId","components","getBasicCharacterData","pendingBasicProfile","profile","getDataForCharacterId","characterIds","characterData","id","character","className","classType","overallPower","light","maxPowerBySlot","slots","slotName","isItemEquippableByCharacter","item","instanceData","canEquip","cannotEquipReason","equipRequiredLevel","baseCharacterLevel","getCharacterData","setCharacterData","setIsFetchingCharacterData","returnBasicCharacterData","pendingManifest","destinyMembership","shouldSetBasicCharacterData","pendingBasicCharacterData","fullProfile","_characters","characterEquipments","characterInventories","profileInventories","itemInstances","mergeItems","allCharacterItems","allCharacterWeapons","_args3","catch","basicCharacterData","characterEquipment","profileInventory","itemComponents","instances","characterItemMap","allItems","characterItems","items","filter","i","itemInstanceId","primaryStat","DestinyInventoryItemDefinition","itemHash","itemDefinition","itemType","itemsBySlot","mapAndFilterItems","profileItems","equippableItems","getItemsBySlot","itemFilter","slotBucketHash","inventory","bucketTypeHash","equippableItemsBySlot","exoticItemsBySlot","tierType","nonExoticItemsBySlot","maxItemPower","Math","max","toConsumableArray","nonExoticMaxPowerItemsBySlot","maxPower","maxPowerItems","exoticMaxPowerItemsBySlot","groupedMaxPowerItems","weapons","exoticWeapons","armor","exoticArmor","findBestExotic","exoticItems","bestExotic","bestExoticSlot","itemSlot","itemInstance","totalPowerWithItem","totalPower","_ref7","maxPowerEquippableWeaponsBySlot","maxPowerEquippableArmorBySlot","maxPowerEquippableItems","_ref8","_ref9","bestItemBySlot","maxPowerForSlot","maxPowerItemsForSlot","equippedItems","some","ci","getBestItemForSlot","_x3","Bar","min","avgValue","label","range","perc","floor","avgPerc","react_default","createElement","STYLES","src","alt","style","width","left","CharacterDisplay","text","slotFullNames","kinetic","energy","head","gloves","chest","legs","classItem","warlock","hunter","titan","minItemPower","minPowerToDisplay","maxPowerToDisplay","ceil","roundedPower","classnames","backgroundColor","red","green","blue","rgbString","emblemColor","emblemBackgroundPath","substr","toUpperCase","minPower","bars","bestItem","CharacterDisplay_Bar","displayProperties","MembershipSelect","onMembershipSelect","PLATFORMS","1","2","4","m","onClick","displayName","LoadingSpinner","loadingSpinnerContainer","anchor","spinnerLarge","spinnerSmall","_useState","useState","_useState2","isAuthed","setIsAuthed","useEffect","doAuth","_useState3","_useState4","hasMembership","setHasMembership","_useState5","_useState6","hasManifestData","setHasManifestData","_useState7","_useState8","isFetchingCharacterData","_useState9","_useState10","doGetCharacterData","returnEarlyResults","setInterval","onSelectMembership","components_MembershipSelect","c","components_CharacterDisplay","components_LoadingSpinner","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","spinner","spin"],"mappings":"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","file":"static/js/main.ae796279.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__4Taua\",\"loadingContainer\":\"App_loadingContainer__1uaFP\",\"charactersContainer\":\"App_charactersContainer__ht0bh\",\"characters\":\"App_characters__1pRqJ\",\"loadingStatus\":\"App_loadingStatus__34OS9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"membershipSelect\":\"MembershipSelect_membershipSelect__vf_ZG\",\"membership\":\"MembershipSelect_membership__RaveC\",\"platform_blizzard\":\"MembershipSelect_platform_blizzard__1OiG6\",\"platform_psn\":\"MembershipSelect_platform_psn__WN9gB\",\"platform_xbox\":\"MembershipSelect_platform_xbox__1ZAgU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"characterDisplay\":\"CharacterDisplay_characterDisplay__3LJ6S\",\"header\":\"CharacterDisplay_header__16L7B\",\"emblemBackground\":\"CharacterDisplay_emblemBackground__2jqgs\",\"name\":\"CharacterDisplay_name__3Aw12\",\"power\":\"CharacterDisplay_power__EMI5z\",\"powerBars\":\"CharacterDisplay_powerBars__1ncJP\",\"powerRange\":\"CharacterDisplay_powerRange__lEkeP\",\"rangeLine\":\"CharacterDisplay_rangeLine__14_WH\",\"powerLabel\":\"CharacterDisplay_powerLabel__36Pf6\",\"indicator\":\"CharacterDisplay_indicator__2jPQU\",\"barWrapper\":\"CharacterDisplay_barWrapper__3qGoQ\",\"iconWrapper\":\"CharacterDisplay_iconWrapper__1CafS\",\"icon\":\"CharacterDisplay_icon__3v2oB\",\"barContainer\":\"CharacterDisplay_barContainer__btRVR\",\"barLine\":\"CharacterDisplay_barLine__V3SXF\",\"filledBar\":\"CharacterDisplay_filledBar__2r5Ry\"};","import { get, set } from 'idb-keyval'\n\nimport { BUNGIE_API_KEY, getAccessToken } from './bungie-auth';\nimport { HttpClientConfig, getDestinyManifest, DestinyManifest, DestinyInventoryItemDefinition } from 'bungie-api-ts/destiny2'\n\nexport const bungieAuthedFetch = async (config: HttpClientConfig) => {\n  try {\n    const accessToken = getAccessToken()\n    const headers: { [key: string]: string } = { 'x-api-key': BUNGIE_API_KEY }\n    if (accessToken) headers.Authorization = `Bearer ${accessToken}`\n    const url = `${config.url}${\n      config.params\n        ? '?' + Object.entries(config.params).map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value as string)}`)\n        : ''\n      }`\n    const response = await fetch(url, { headers })\n    return await response.json()\n  } catch (e) {\n    console.error(e)\n    return {}\n  }\n}\n\nconst MANIFEST_VERSION_KEY = 'MANIFEST_VERSION'\nconst MANIFEST_IDB_KEY = 'MANIFEST_DATA'\ninterface ManifestData {\n  DestinyInventoryItemDefinition: { [key: string]: DestinyInventoryItemDefinition | undefined }\n}\nconst manifestPropertyWhitelist = ['DestinyInventoryItemDefinition']\n\nconst getCachedManifestData = async () => {\n  console.log('Loading manifest data from IDB')\n  const manifestData = await get(MANIFEST_IDB_KEY)\n  console.log('Finished loading manifest data from IDB')\n  return manifestData as ManifestData\n}\n\nconst getRemoteManifestData = async (manifest: DestinyManifest) => {\n  const version = manifest.version\n  console.log('Fetching fresh manifest data')\n  const manifestDataResponse = await fetch(`https://www.bungie.net${manifest.jsonWorldContentPaths.en}`)\n  const manifestData = await manifestDataResponse.json()\n  console.log('Pruning manifest data')\n  Object.keys(manifestData).forEach(key => {\n    if (!manifestPropertyWhitelist.includes(key)) delete manifestData[key]\n  })\n  console.log('Storing manifest data in IDB')\n  await set(MANIFEST_IDB_KEY, manifestData)\n  localStorage.setItem(MANIFEST_VERSION_KEY, version)\n  return manifestData\n}\n\nlet cachedManifestData: ManifestData | undefined\nlet getManifestPromise: Promise<ManifestData> | undefined\n\nexport const getManifest = async (): Promise<ManifestData> => {\n  if (!getManifestPromise) {\n    getManifestPromise = (async () => {\n      const manifest = await getDestinyManifest(bungieAuthedFetch)\n      const localStorageManifestVersion = localStorage.getItem(MANIFEST_VERSION_KEY)\n      if (manifest\n        && manifest.Response\n        && manifest.Response.version === localStorageManifestVersion\n        && !window.location.search.includes('updateManifest')) {\n          if (!cachedManifestData)\n            cachedManifestData = await getCachedManifestData()\n          return cachedManifestData\n      }\n      cachedManifestData = undefined\n      const freshManifestData = await getRemoteManifestData(manifest.Response)\n      cachedManifestData = freshManifestData\n      return freshManifestData\n    })();\n  }\n  return getManifestPromise\n}","import React, { useState, useEffect } from 'react'\nimport { UserInfoCard } from 'bungie-api-ts/user';\n\nimport { auth, hasValidAuth, hasSelectedDestinyMembership, setSelectedDestinyMembership } from './services/bungie-auth'\nimport { CharacterData } from './types'\n\nimport { getCharacterData } from './services/utils'\nimport CharacterDisplay from './components/CharacterDisplay'\nimport MembershipSelect from './components/MembershipSelect'\nimport LoadingSpinner from './components/LoadingSpinner';\nimport { getManifest } from './services/bungie-api';\n\nimport 'normalize.css'\nimport STYLES from './App.module.scss'\n\nlet characterDataRefreshTimer: number | undefined\n\nconst App = () => {\n\n  const [isAuthed, setIsAuthed] = useState<boolean>(hasValidAuth())\n  useEffect(() => {\n    const doAuth = async () => {\n      const authResult = await auth()\n      if (authResult) setIsAuthed(true)\n    }\n    if (!isAuthed) doAuth()\n  })\n\n  const [hasMembership, setHasMembership] = useState<boolean>(hasSelectedDestinyMembership())\n\n  const [hasManifestData, setHasManifestData] = useState<boolean>(false)\n  useEffect(() => {\n    (async () => {\n      await getManifest()\n      setHasManifestData(true)\n    })();\n  })\n\n  const [isFetchingCharacterData, setIsFetchingCharacterData] = useState<boolean>(false)\n  const [characterData, setCharacterData] = useState<CharacterData[] | undefined>(undefined)\n  useEffect(() => {\n    const doGetCharacterData = (returnEarlyResults: boolean = false) => getCharacterData(setCharacterData, setIsFetchingCharacterData, returnEarlyResults)\n    if (isAuthed && hasMembership && !isFetchingCharacterData) {\n      if (!characterDataRefreshTimer) {\n        characterDataRefreshTimer = setInterval(doGetCharacterData, 10000)\n        doGetCharacterData(true)\n      }\n    }\n  }, [isAuthed, hasMembership, hasManifestData, isFetchingCharacterData])\n\n  const onSelectMembership = (membership: UserInfoCard) => {\n    setSelectedDestinyMembership(membership)\n    setHasMembership(true)\n  }\n\n  let status = ''\n  if (!isAuthed) {\n    status = 'Authenticating...'\n  } else if (!hasMembership) {\n    status = 'Waiting for Destiny platform selection...'\n  } else if (!hasManifestData) {\n    status = 'Fetching Destiny item manifest...'\n  } else if (!characterData || characterData.length === 0) {\n    if (isFetchingCharacterData) {\n      status = 'Fetching character data...'\n    } else {\n      status = 'No character data'\n    }\n  }\n\n  (window as any).characterData = characterData\n\n  if (characterData && characterData.length > 0) {\n    return (\n      <div className={STYLES.App}>\n        <MembershipSelect onMembershipSelect={onSelectMembership} />\n        <div className={STYLES.charactersContainer}>\n          <div className={STYLES.characters}>\n            {characterData.map(c => <CharacterDisplay key={c.id} data={c} />)}\n          </div>\n        </div>\n        {status && <LoadingSpinner status={status} /> }\n      </div>\n    )\n  }\n\n  return (\n    <div className={STYLES.App}>\n      <LoadingSpinner status={status} />\n      <MembershipSelect onMembershipSelect={onSelectMembership} />\n    </div>\n  )\n\n}\n\nexport default App;\n","import { getMembershipDataById, UserInfoCard } from 'bungie-api-ts/user'\r\nimport { bungieAuthedFetch } from './bungie-api';\r\n\r\nconst isDev = process.env.NODE_ENV === 'development'\r\nexport const BUNGIE_API_KEY = isDev ? 'f7f184669f044a89b560fc5f71ed5d60' : 'd94be1e34632448fafdaf77c7afbb501'\r\nconst BUNGIE_OAUTH_AUTHORIZE_URL = 'https://www.bungie.net/en/OAuth/Authorize'\r\nconst BUNGIE_OAUTH_CLIENT_ID = isDev ? '26087' : '27213'\r\nconst BUNGIE_OAUTH_TOKEN_URL = 'https://www.bungie.net/platform/app/oauth/token/'\r\n\r\nconst ACCESS_TOKEN_STORAGE_KEY = 'bungieAccessToken'\r\nconst ACCESS_TOKEN_EXPIRY_STORAGE_KEY = 'bungieAccessTokenExpiryTime'\r\nconst BUNGIE_MEMBERSHIP_ID_STORAGE_KEY = 'bungieMembershipId'\r\nconst DESTINY_MEMBERSHIPS_STORAGE_KEY = 'destinyMemberships'\r\nconst DESTINY_MEMBERSHIP_STORAGE_KEY = 'destinyMembership'\r\n\r\nconst clearStorage = () => {\r\n  localStorage.removeItem(ACCESS_TOKEN_STORAGE_KEY);\r\n  localStorage.removeItem(ACCESS_TOKEN_EXPIRY_STORAGE_KEY);\r\n  localStorage.removeItem(BUNGIE_MEMBERSHIP_ID_STORAGE_KEY);\r\n  localStorage.removeItem(DESTINY_MEMBERSHIPS_STORAGE_KEY);\r\n  localStorage.removeItem(DESTINY_MEMBERSHIP_STORAGE_KEY);\r\n}\r\n\r\nconst getAuthUrl = () => `${BUNGIE_OAUTH_AUTHORIZE_URL}?response_type=code&client_id=${BUNGIE_OAUTH_CLIENT_ID}`\r\n\r\nconst redirectToAuth = () => {\r\n  console.log('Redirect to auth')\r\n  clearStorage()\r\n  window.location.replace(getAuthUrl())\r\n}\r\n\r\nconst handleTokenResponse = async (tokenResponse: Response, redirect: boolean = false) => {\r\n  console.log('handleTokenResponse')\r\n  clearStorage()\r\n  if (tokenResponse.status === 200) {\r\n    const data = await tokenResponse.json()\r\n    const accessToken = data.access_token as string\r\n    const tokenDuration = data.expires_in as number\r\n    const expiryTime = Date.now() + (tokenDuration * 1000)\r\n    const bungieMembershipId = data.membership_id as string\r\n\r\n    localStorage.setItem(ACCESS_TOKEN_STORAGE_KEY, accessToken)\r\n    localStorage.setItem(ACCESS_TOKEN_EXPIRY_STORAGE_KEY, expiryTime.toString())\r\n    localStorage.setItem(BUNGIE_MEMBERSHIP_ID_STORAGE_KEY, bungieMembershipId)\r\n\r\n    // 254 = all memberships\r\n    const destinyMembershipsResponse = await getMembershipDataById(bungieAuthedFetch, { membershipId: bungieMembershipId, membershipType: 254 })\r\n    const destinyMemberships = destinyMembershipsResponse.Response.destinyMemberships\r\n    localStorage.setItem(DESTINY_MEMBERSHIPS_STORAGE_KEY, JSON.stringify(destinyMemberships))\r\n\r\n    // If there is only one membership, select it automatically\r\n    if (destinyMemberships.length === 1) {\r\n      setSelectedDestinyMembership(destinyMemberships[0])\r\n    }\r\n\r\n    return { accessToken }\r\n  } else {\r\n    //return redirectToAuth()\r\n  }\r\n}\r\n\r\nconst fetchAuthToken = async (authCode: string) => {\r\n  console.log('fetchAuthToken', authCode)\r\n  clearStorage()\r\n  const tokenResponse = await fetch(BUNGIE_OAUTH_TOKEN_URL, {\r\n    method: 'POST',\r\n    cache: 'no-cache',\r\n    credentials: 'include',\r\n    headers: {\r\n      'Content-Type': 'application/x-www-form-urlencoded'\r\n    },\r\n    redirect: 'follow',\r\n    referrer: 'no-referrer',\r\n    body: `grant_type=authorization_code&code=${authCode}&client_id=${BUNGIE_OAUTH_CLIENT_ID}`\r\n  })\r\n  return await handleTokenResponse(tokenResponse)\r\n}\r\n\r\nexport const getAccessToken = () => {\r\n  return localStorage.getItem(ACCESS_TOKEN_STORAGE_KEY)\r\n}\r\n\r\nexport const hasValidAuth = () => {\r\n  const accessToken = getAccessToken()\r\n  const accessTokenExpiryTime = parseInt(localStorage.getItem(ACCESS_TOKEN_EXPIRY_STORAGE_KEY) || '-1', 10)\r\n  const bungieMembershipId = localStorage.getItem(BUNGIE_MEMBERSHIP_ID_STORAGE_KEY)\r\n  if (!accessToken || Date.now() >= accessTokenExpiryTime || !bungieMembershipId) return false\r\n  return true\r\n}\r\n\r\nexport const getDestinyMemberships = () => {\r\n  const destinyMembershipsString = localStorage.getItem(DESTINY_MEMBERSHIPS_STORAGE_KEY)\r\n  try {\r\n    if (destinyMembershipsString)\r\n      return JSON.parse(destinyMembershipsString) as UserInfoCard[]\r\n  } catch (e) {\r\n    console.error(`Error loading destiny memberships`, e.message)\r\n  }\r\n  return undefined\r\n}\r\n\r\nexport const hasDestinyMemberships = () => {\r\n  return !!getDestinyMemberships()\r\n}\r\n\r\nexport const getSelectedDestinyMembership = () => {\r\n  const destinyMembershipString = localStorage.getItem(DESTINY_MEMBERSHIP_STORAGE_KEY)\r\n  try {\r\n    if (destinyMembershipString)\r\n      return JSON.parse(destinyMembershipString) as UserInfoCard\r\n  } catch (e) {\r\n    console.error('Error loading destiny membership', e.message)\r\n  }\r\n  return undefined\r\n}\r\n\r\nexport const hasSelectedDestinyMembership = () => {\r\n  return !!getSelectedDestinyMembership()\r\n}\r\n\r\nexport const setSelectedDestinyMembership = (membership: UserInfoCard) => {\r\n  localStorage.setItem(DESTINY_MEMBERSHIP_STORAGE_KEY, JSON.stringify(membership))\r\n}\r\n\r\nexport const auth = async () => {\r\n\r\n  const queryParams = new URLSearchParams(window.location.search)\r\n  const authCode = queryParams.get('code')\r\n\r\n  if (authCode && !hasValidAuth()) {\r\n    console.log('Fetching access token with auth code')\r\n    await fetchAuthToken(authCode)\r\n  }\r\n\r\n  if (authCode) {\r\n    window.location.replace(`${window.location.origin}${window.location.pathname}`)\r\n  }\r\n\r\n  if (hasValidAuth() && hasDestinyMemberships()) {\r\n    return true\r\n  }\r\n\r\n  console.log('Redirecting to fresh authentication for missing or expired access token, or missing destiny memberships')\r\n  clearStorage()\r\n  redirectToAuth()\r\n}","export const ITEM_SLOT_KINETIC = 'kinetic'\r\nexport const ITEM_SLOT_ENERGY = 'energy'\r\nexport const ITEM_SLOT_POWER = 'power'\r\nexport const ITEM_SLOT_HEAD = 'head'\r\nexport const ITEM_SLOT_GLOVES = 'gloves'\r\nexport const ITEM_SLOT_CHEST = 'chest'\r\nexport const ITEM_SLOT_LEGS = 'legs'\r\nexport const ITEM_SLOT_CLASS_ITEM = 'classItem'\r\n\r\nexport const ITEM_SLOT_BUCKETS = {\r\n  [ITEM_SLOT_KINETIC]: 1498876634,\r\n  [ITEM_SLOT_ENERGY]: 2465295065,\r\n  [ITEM_SLOT_POWER]: 953998645,\r\n  [ITEM_SLOT_HEAD]: 3448274439,\r\n  [ITEM_SLOT_GLOVES]: 3551918588,\r\n  [ITEM_SLOT_CHEST]: 14239492,\r\n  [ITEM_SLOT_LEGS]: 20886954,\r\n  [ITEM_SLOT_CLASS_ITEM]: 1585787867,\r\n}\r\n\r\nexport const ITEM_BUCKET_SLOTS = Object.entries(ITEM_SLOT_BUCKETS)\r\n  .reduce((buckets, [slot, bucket]) => ({ ...buckets, [bucket]: slot }), {} as { [bucket: number]: string })\r\n\r\nexport const ITEM_SLOT_GROUP_WEAPONS = [ITEM_SLOT_KINETIC, ITEM_SLOT_ENERGY, ITEM_SLOT_POWER]\r\nexport const ITEM_SLOT_GROUP_ARMOR = [ITEM_SLOT_HEAD, ITEM_SLOT_GLOVES, ITEM_SLOT_CHEST, ITEM_SLOT_LEGS, ITEM_SLOT_CLASS_ITEM]\r\n\r\nexport const ITEM_TIER_TYPE_EXOTIC = 6\r\n\r\nexport const CLASS_TYPE_ALL = 3\r\n\r\nexport const CLASS_TITAN = 'titan'\r\nexport const CLASS_HUNTER = 'hunter'\r\nexport const CLASS_WARLOCK = 'warlock'\r\n\r\nexport const CLASS_NAMES = [CLASS_TITAN, CLASS_HUNTER, CLASS_WARLOCK]\r\nexport const ITEM_TYPE_ARMOR = 2\r\nexport const ITEM_TYPE_WEAPON = 3","import { PowerBySlot, JoinedItemDefinition, CharacterData } from \"../types\";\r\nimport { ITEM_SLOT_BUCKETS, ITEM_TYPE_WEAPON, CLASS_NAMES, ITEM_TYPE_ARMOR, CLASS_TYPE_ALL, ITEM_TIER_TYPE_EXOTIC, ITEM_SLOT_GROUP_WEAPONS, ITEM_SLOT_GROUP_ARMOR, ITEM_BUCKET_SLOTS } from \"../constants\";\r\nimport { getProfile, DestinyItemComponent, DestinyCharacterComponent } from \"bungie-api-ts/destiny2\";\r\nimport { bungieAuthedFetch, getManifest } from \"./bungie-api\";\r\nimport { getSelectedDestinyMembership, auth } from \"./bungie-auth\";\r\n\r\nexport const getOverallPower = (powerBySlot: PowerBySlot) =>\r\n  Object.values(powerBySlot)\r\n    .reduce((sum, power) => sum + power, 0)\r\n  / Object.keys(ITEM_SLOT_BUCKETS).length\r\n\r\nexport const getDropEfficiency = (maxPowerBySlot: PowerBySlot, dropPowerIncrease: number = 0) => {\r\n  const base = getOverallPower(maxPowerBySlot)\r\n  const dropPower = Math.floor(base + dropPowerIncrease)\r\n  const overallPerSlotChanges = Object.keys(ITEM_SLOT_BUCKETS)\r\n    .reduce((changes, slotName) => ({\r\n      ...changes,\r\n      [slotName]: Math.max(0, getOverallPower({ ...maxPowerBySlot, [slotName]: dropPower }) - base),\r\n    }), {} as PowerBySlot)\r\n  return getOverallPower(overallPerSlotChanges)\r\n}\r\n\r\nconst getBasicProfile = (membershipType: number, membershipId: string) => getProfile(bungieAuthedFetch, {\r\n  membershipType: membershipType,\r\n  destinyMembershipId: membershipId,\r\n  components: [\r\n    200, // DestinyComponentType.Characters,\r\n    205, // DestinyComponentType.CharacterEquipment,\r\n  ]\r\n})\r\n\r\nconst getFullProfile = (membershipType: number, membershipId: string) => getProfile(bungieAuthedFetch, {\r\n  membershipType: membershipType,\r\n  destinyMembershipId: membershipId,\r\n  components: [\r\n    200, // DestinyComponentType.Characters,\r\n    201, // DestinyComponentType.CharacterInventories,\r\n    205, // DestinyComponentType.CharacterEquipment,\r\n    102, // DestinyComponentType.ProfileInventories,\r\n    300, // DestinyComponentType.ItemInstances,\r\n  ]\r\n})\r\n\r\nexport const getBasicCharacterData = async (pendingBasicProfile: ReturnType<typeof getBasicProfile>) => {\r\n  const profile = await pendingBasicProfile\r\n  if (!profile || !profile.Response || !profile.Response.characters) return\r\n  const characters = profile.Response.characters.data\r\n\r\n  if (characters) {\r\n    const getDataForCharacterId = (id: string): CharacterData => {\r\n      const character = characters[id]\r\n      const className = CLASS_NAMES[character.classType]\r\n      return {\r\n        character,\r\n        id,\r\n        className,\r\n        overallPower: character.light,\r\n        maxPowerBySlot: Object.keys(ITEM_SLOT_BUCKETS)\r\n          .reduce((slots, slotName) => ({ ...slots, [slotName]: character.light }), {} as { [key: string]: number })\r\n      }\r\n    }\r\n\r\n    const characterIds = Object.keys(characters)\r\n    const characterData = characterIds.map(id => getDataForCharacterId(id))\r\n    return characterData\r\n  }\r\n};\r\n\r\nconst isItemEquippableByCharacter = (item: JoinedItemDefinition, character: DestinyCharacterComponent) => {\r\n  if (!item.instanceData) return false\r\n  if (item.instanceData.canEquip) return true // If the game says we can equip it, let's believe it\r\n  if (item.instanceData.cannotEquipReason === 16) return true // Only reason is that it's in your vault\r\n  if (item.instanceData.equipRequiredLevel > character.baseCharacterLevel) return false\r\n  // Let's ignore the rest for now\r\n  return true\r\n}\r\n\r\nexport const getCharacterData = async (\r\n  setCharacterData: (state: CharacterData[]) => any,\r\n  setIsFetchingCharacterData: (state: boolean) => any,\r\n  returnBasicCharacterData: boolean = false\r\n) => {\r\n  try {\r\n\r\n    const isAuthed = await auth()\r\n    if (!isAuthed) return\r\n\r\n    const pendingManifest = getManifest()\r\n\r\n    setIsFetchingCharacterData(true)\r\n\r\n    const destinyMembership = getSelectedDestinyMembership()\r\n    if (!destinyMembership) return\r\n\r\n    const pendingBasicProfile = getBasicProfile(destinyMembership.membershipType, destinyMembership.membershipId)\r\n    pendingBasicProfile.catch(() => {})\r\n\r\n    // Flag lets this be disabled to prevent setting after full profile is returned\r\n    let shouldSetBasicCharacterData = true\r\n    // Produce basic data if flag is set\r\n    if (returnBasicCharacterData) {\r\n      const pendingBasicCharacterData = getBasicCharacterData(pendingBasicProfile)\r\n        .catch(e => {});\r\n      (async () => {\r\n        const basicCharacterData = await pendingBasicCharacterData\r\n        if (basicCharacterData && shouldSetBasicCharacterData) { setCharacterData(basicCharacterData) }\r\n      })();\r\n    }\r\n\r\n    const fullProfile = await getFullProfile(\r\n      destinyMembership.membershipType,\r\n      destinyMembership.membershipId,\r\n    )\r\n    setIsFetchingCharacterData(false)\r\n\r\n    if (!fullProfile\r\n      || !fullProfile.Response\r\n      || !fullProfile.Response.characters || !fullProfile.Response.characters.data\r\n      || !fullProfile.Response.characterEquipment || !fullProfile.Response.characterEquipment.data\r\n      || !fullProfile.Response.characterInventories || !fullProfile.Response.characterInventories.data\r\n      || !fullProfile.Response.profileInventory || !fullProfile.Response.profileInventory.data\r\n      || !fullProfile.Response.itemComponents || !fullProfile.Response.itemComponents.instances || !fullProfile.Response.itemComponents.instances.data) return\r\n\r\n    const characters = fullProfile.Response.characters.data\r\n    const characterEquipments = fullProfile.Response.characterEquipment.data\r\n    const characterInventories = fullProfile.Response.characterInventories.data\r\n    const profileInventories = fullProfile.Response.profileInventory.data\r\n    const itemInstances = fullProfile.Response.itemComponents.instances.data\r\n\r\n    const manifest = await pendingManifest\r\n\r\n    if (!manifest) return\r\n\r\n    const mergeItems = <T extends { [key: string]: { items: DestinyItemComponent[] } }>(characterItemMap: T) => {\r\n      return Object.values(characterItemMap)\r\n        .reduce((allItems, characterItems) => allItems.concat(characterItems.items), [] as DestinyItemComponent[])\r\n    }\r\n\r\n    const allCharacterItems = mergeItems(characterInventories)\r\n      .concat(mergeItems(characterEquipments))\r\n      .concat(profileInventories.items)\r\n    console.log(\r\n      allCharacterItems\r\n        .filter(i => i.itemInstanceId && itemInstances[i.itemInstanceId] && itemInstances[i.itemInstanceId].primaryStat && itemInstances[i.itemInstanceId].primaryStat.value === 750)\r\n        .map(i => manifest.DestinyInventoryItemDefinition[i.itemHash])\r\n    )\r\n    const allCharacterWeapons = allCharacterItems.filter(i => {\r\n      const itemDefinition = i.itemHash && manifest.DestinyInventoryItemDefinition[i.itemHash]\r\n      return itemDefinition && itemDefinition.itemType === ITEM_TYPE_WEAPON\r\n    })\r\n\r\n    const getDataForCharacterId = (id: string): CharacterData => {\r\n      const character = characters[id]\r\n      const className = CLASS_NAMES[character.classType]\r\n\r\n      const mapAndFilterItems = (items: DestinyItemComponent[]) => items\r\n        .map(item => {\r\n          const instanceData = item.itemInstanceId ? itemInstances[item.itemInstanceId] : undefined\r\n          const itemDefinition = manifest.DestinyInventoryItemDefinition[item.itemHash]\r\n          return {\r\n            ...item,\r\n            instanceData,\r\n            itemDefinition,\r\n          }\r\n        })\r\n        .filter(i => i.instanceData && i.itemDefinition && [ITEM_TYPE_ARMOR, ITEM_TYPE_WEAPON].includes(i.itemDefinition.itemType))\r\n\r\n      const characterItems = mapAndFilterItems(\r\n        characterInventories[id].items\r\n          .concat(characterEquipments[id].items)\r\n          .concat(allCharacterWeapons)\r\n      )\r\n      const profileItems = mapAndFilterItems(profileInventories.items)\r\n        .filter(i => i.itemDefinition && (i.itemDefinition.classType === CLASS_TYPE_ALL || i.itemDefinition.classType === character.classType))\r\n\r\n      const combinedItems = characterItems.concat(profileItems)\r\n      const equippableItems = combinedItems.filter(i => isItemEquippableByCharacter(i, character))\r\n\r\n      interface ItemBySlot { [slotName: string]: JoinedItemDefinition }\r\n      interface ItemsBySlot { [slotName: string]: JoinedItemDefinition[] }\r\n      interface PowerBySlot { [slotName: string]: number }\r\n\r\n      const getItemsBySlot = (items: JoinedItemDefinition[], itemFilter?: (item: JoinedItemDefinition) => boolean) => {\r\n        return Object.entries(ITEM_SLOT_BUCKETS)\r\n          .reduce((slots, [slotName, slotBucketHash]) => ({\r\n            ...slots,\r\n            [slotName]: items\r\n              .filter(item => item.itemDefinition && item.itemDefinition.inventory.bucketTypeHash === slotBucketHash)\r\n              .filter(item => !itemFilter || itemFilter(item))\r\n          }), {} as ItemsBySlot)\r\n      }\r\n      const equippableItemsBySlot = getItemsBySlot(equippableItems)\r\n\r\n      const exoticItemsBySlot = getItemsBySlot(equippableItems, item => !!(item.itemDefinition && item.itemDefinition.inventory.tierType === ITEM_TIER_TYPE_EXOTIC))\r\n      const nonExoticItemsBySlot = getItemsBySlot(equippableItems, item => !!(item.itemDefinition && item.itemDefinition.inventory.tierType !== ITEM_TIER_TYPE_EXOTIC))\r\n\r\n      const maxItemPower = (items: JoinedItemDefinition[] = []) =>\r\n        Math.max(...items.map(i => i.instanceData ? i.instanceData.primaryStat.value : 0))\r\n\r\n      const nonExoticMaxPowerItemsBySlot = Object.keys(ITEM_SLOT_BUCKETS)\r\n        .reduce((slots, slotName) => {\r\n          const maxPower = maxItemPower(nonExoticItemsBySlot[slotName])\r\n          const maxPowerItems = nonExoticItemsBySlot[slotName].filter(i => i.instanceData && i.instanceData.primaryStat.value === maxPower)\r\n          return {\r\n            ...slots,\r\n            [slotName]: maxPowerItems\r\n          }\r\n        }, {} as ItemsBySlot)\r\n\r\n      const exoticMaxPowerItemsBySlot = Object.keys(ITEM_SLOT_BUCKETS)\r\n        .reduce((slots, slotName) => {\r\n          const maxPower = maxItemPower(exoticItemsBySlot[slotName])\r\n          if (maxPower < maxItemPower(nonExoticMaxPowerItemsBySlot[slotName])) return slots\r\n          const maxPowerItems = exoticItemsBySlot[slotName].filter(i => i.instanceData && i.instanceData.primaryStat.value === maxPower)\r\n          return {\r\n            ...slots,\r\n            [slotName]: maxPowerItems\r\n          }\r\n        }, {} as ItemsBySlot)\r\n\r\n      const groupedMaxPowerItems = {\r\n        weapons: ITEM_SLOT_GROUP_WEAPONS.reduce((slots, slotName) => ({ ...slots, [slotName]: nonExoticMaxPowerItemsBySlot[slotName] }), {} as ItemsBySlot),\r\n        exoticWeapons: ITEM_SLOT_GROUP_WEAPONS.reduce((allItems, slotName) => allItems.concat(exoticMaxPowerItemsBySlot[slotName]), [] as JoinedItemDefinition[]),\r\n        armor: ITEM_SLOT_GROUP_ARMOR.reduce((slots, slotName) => ({ ...slots, [slotName]: nonExoticMaxPowerItemsBySlot[slotName] }), {} as ItemsBySlot),\r\n        exoticArmor: ITEM_SLOT_GROUP_ARMOR.reduce((allItems, slotName) => allItems.concat(exoticMaxPowerItemsBySlot[slotName]), [] as JoinedItemDefinition[]),\r\n      }\r\n\r\n      const findBestExotic = (nonExoticItemsBySlot: ItemsBySlot, exoticItems: JoinedItemDefinition[]): ItemsBySlot => {\r\n        let maxPower = 0\r\n        let bestExotic: JoinedItemDefinition | undefined\r\n        let bestExoticSlot: string | undefined\r\n        // Try every exotic\r\n        exoticItems.forEach(item => {\r\n          const itemSlot = item && item.itemDefinition &&  ITEM_BUCKET_SLOTS[item.itemDefinition.inventory.bucketTypeHash]\r\n          const itemInstance = item && item.instanceData\r\n          if (!itemSlot || !itemInstance) return\r\n          const totalPowerWithItem = Object.entries(nonExoticItemsBySlot)\r\n            .reduce((totalPower, [slotName, items]) => {\r\n              if (slotName === itemSlot) return totalPower + itemInstance.primaryStat.value\r\n              return totalPower + maxItemPower(items)\r\n            }, 0)\r\n          if (totalPowerWithItem > maxPower) {\r\n            maxPower = totalPowerWithItem\r\n            bestExotic = item\r\n            bestExoticSlot = itemSlot\r\n          }\r\n        })\r\n\r\n        if (!bestExotic || !bestExoticSlot) return nonExoticItemsBySlot\r\n\r\n        return { ...nonExoticItemsBySlot, [bestExoticSlot]: [bestExotic] }\r\n      }\r\n\r\n      const maxPowerEquippableWeaponsBySlot = findBestExotic(groupedMaxPowerItems.weapons, groupedMaxPowerItems.exoticWeapons)\r\n      const maxPowerEquippableArmorBySlot = findBestExotic(groupedMaxPowerItems.armor, groupedMaxPowerItems.exoticArmor)\r\n\r\n      const maxPowerEquippableItems = {\r\n        ...maxPowerEquippableWeaponsBySlot,\r\n        ...maxPowerEquippableArmorBySlot,\r\n      }\r\n\r\n      const getMaxPowerBySlot = (itemsBySlot: ItemsBySlot) => {\r\n        return Object.entries(itemsBySlot)\r\n          .reduce((slots, [slotName, items]) => {\r\n            return {\r\n              ...slots,\r\n              [slotName]: maxItemPower(items)\r\n            }\r\n          }, {} as PowerBySlot)\r\n      }\r\n\r\n      const maxPowerBySlot = getMaxPowerBySlot(maxPowerEquippableItems)\r\n\r\n      const getBestItemForSlot = (slotName: string) => {\r\n        const maxPowerForSlot = maxPowerBySlot[slotName]\r\n        const maxPowerItemsForSlot = equippableItemsBySlot[slotName].filter(i => i.instanceData && i.instanceData.primaryStat.value === maxPowerForSlot)\r\n        if (maxPowerItemsForSlot.length === 1) return maxPowerItemsForSlot[0]\r\n        const equippedItems = maxPowerItemsForSlot.filter(i => characterEquipments[id].items.some(ci => ci.itemInstanceId === i.itemInstanceId))\r\n        if (equippedItems.length === 1) return equippedItems[0]\r\n        return maxPowerItemsForSlot[0]\r\n      }\r\n\r\n      const bestItemBySlot = Object.keys(ITEM_SLOT_BUCKETS)\r\n        .reduce((slots, slotName) => ({\r\n          ...slots,\r\n          [slotName]: getBestItemForSlot(slotName),\r\n        }), {} as ItemBySlot)\r\n\r\n      const overallPower = getOverallPower(maxPowerBySlot)\r\n\r\n      return {\r\n        character,\r\n        id,\r\n        className,\r\n        equippableItemsBySlot,\r\n        maxPowerBySlot,\r\n        overallPower,\r\n        bestItemBySlot,\r\n      }\r\n    }\r\n\r\n    const characterIds = Object.keys(characters)\r\n    const characterData = characterIds.map(id => getDataForCharacterId(id))\r\n    shouldSetBasicCharacterData = false\r\n    setCharacterData(characterData)\r\n\r\n  } catch (e) {\r\n    console.error(`Error fetching manifest and character data`, e)\r\n    setIsFetchingCharacterData(false)\r\n    return\r\n  }\r\n\r\n}","import React from 'react'\r\nimport classnames from 'classnames'\r\n\r\nimport { CharacterData } from \"../types\";\r\n\r\nimport STYLES from './CharacterDisplay.module.scss'\r\n\r\ninterface CharacterDisplayProps {\r\n  data: CharacterData\r\n}\r\n\r\nconst titleCase = (text: string) => text.substr(0, 1).toUpperCase() + text.substr(1)\r\n\r\ninterface BarProps {\r\n  min: number\r\n  max: number\r\n  value: number\r\n  avgValue: number\r\n  label: string\r\n  icon?: string\r\n}\r\nconst Bar = ({ min, max, value, avgValue, label, icon }: BarProps) => {\r\n  const range = max - min\r\n  const perc = Math.floor(((value - min) / range) * 1000) / 10\r\n  const avgPerc = Math.floor(((avgValue - min) / range) * 1000) / 10\r\n  // const plusTwoPerc = Math.floor(((avgValue + 2 - min) / range) * 1000) / 10\r\n  // const plusFivePerc = Math.floor(((avgValue + 5 - min) / range) * 1000) / 10\r\n  return (\r\n    <div className={STYLES.barWrapper}>\r\n      <div className={STYLES.iconWrapper}>{\r\n        icon && <img className={STYLES.icon} src={`https://www.bungie.net${icon}`} alt={label} />\r\n      }</div>\r\n      <div className={STYLES.barContainer}>\r\n        <div className={STYLES.filledBar} style={{width: `${perc}%`}}><span>{label}</span></div>\r\n        <div className={STYLES.barLine} style={{left: `${avgPerc}%`}} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst CharacterDisplay = ({ data }: CharacterDisplayProps) => {\r\n\r\n  const classItemNames: { [key: string]: string } = {\r\n    warlock: 'Warlock Bond',\r\n    hunter: 'Hunter Cloak',\r\n    titan: 'Titan Mark',\r\n  }\r\n  const slotFullNames: { [key: string]: string } = {\r\n    kinetic: 'Kinetic Weapon',\r\n    energy: 'Energy Weapon',\r\n    power: 'Power Weapon',\r\n    head: 'Helmet',\r\n    gloves: 'Gauntlets',\r\n    chest: 'Chest Armor',\r\n    legs: 'Leg Armor',\r\n    classItem: classItemNames[data.className],\r\n  }\r\n\r\n  const rgbString = ({ red, green, blue }: {red:number, green: number, blue: number}) => `rgb(${red},${green},${blue})`\r\n\r\n  // Round to 50s\r\n  const minItemPower = Math.min(...Object.values(data.maxPowerBySlot))\r\n  const minPowerToDisplay = Math.max(Math.floor(minItemPower/50)*50 - 50, 0)\r\n  const maxItemPower = Math.max(...Object.values(data.maxPowerBySlot))\r\n  const maxPowerToDisplay = Math.min(Math.ceil(maxItemPower/50)*50, 750)\r\n\r\n  const roundedPower = Math.floor(data.overallPower)\r\n\r\n  const range = maxPowerToDisplay - minPowerToDisplay\r\n  const perc = Math.floor(((roundedPower - minPowerToDisplay) / range) * 1000) / 10\r\n\r\n  return (\r\n    <div className={classnames(STYLES.characterDisplay, STYLES[`class_${data.className}`])} style={{backgroundColor:rgbString(data.character.emblemColor)}}>\r\n      <div className={STYLES.header}>\r\n        <img className={STYLES.emblemBackground} src={`https://www.bungie.net${data.character.emblemBackgroundPath}`} alt='' />\r\n        <div className={STYLES.name}>{titleCase(data.className)}</div>\r\n        <div className={STYLES.power}>{roundedPower}</div>\r\n      </div>\r\n      <div className={STYLES.powerBars}>\r\n        <div className={STYLES.powerRange}>\r\n          <div className={STYLES.minPower}>{minPowerToDisplay}</div>\r\n          <div className={STYLES.rangeLine} />\r\n          <div className={STYLES.maxPower}>{maxPowerToDisplay}</div>\r\n        </div>\r\n        <div className={STYLES.bars}>\r\n          {Object.entries(data.maxPowerBySlot).map(([slotName, power]) => {\r\n            const bestItem = data.bestItemBySlot && data.bestItemBySlot[slotName]\r\n            return (\r\n              <Bar\r\n                key={`${data.id}_${slotName}`}\r\n                min={minPowerToDisplay}\r\n                max={maxPowerToDisplay}\r\n                value={power}\r\n                avgValue={roundedPower}\r\n                label={`${power} ${slotFullNames[slotName] || slotName}`}\r\n                icon={bestItem && bestItem.itemDefinition && bestItem.itemDefinition.displayProperties.icon}\r\n              />\r\n            )\r\n          })}\r\n        </div>\r\n        <div className={STYLES.powerLabel}>\r\n          <div className={STYLES.indicator} style={{left: `${perc}%`}}>{roundedPower}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default CharacterDisplay","import React from 'react'\nimport { UserInfoCard } from 'bungie-api-ts/user';\nimport classnames from 'classnames'\n\nimport STYLES from './MembershipSelect.module.scss'\nimport { getDestinyMemberships } from '../services/bungie-auth';\n\ninterface MembershipSelectProps {\n  onMembershipSelect: (membership: UserInfoCard) => any\n}\n\nconst MembershipSelect = ({ onMembershipSelect }: MembershipSelectProps) => {\n\n  const destinyMemberships = getDestinyMemberships()\n\n  if (!destinyMemberships) return null\n\n  if (destinyMemberships.length === 0) {\n    return <div>No destiny memberships!</div>\n  }\n\n  const PLATFORMS: { [key: number]: string } = {\n    1: 'xbox',\n    2: 'psn',\n    4: 'blizzard'\n  }\n\n  return (\n    <div className={STYLES.membershipSelect}>\n      {destinyMemberships.map(m => {\n        return (\n          <div\n            key={m.membershipId}\n            className={classnames(STYLES.membership, STYLES[`platform_${PLATFORMS[m.membershipType]}`])}\n            onClick={() => onMembershipSelect(m)}>\n            {m.displayName}\n          </div>\n        )\n      })}\n    </div>\n  )\n\n}\n\nexport default MembershipSelect","import React from 'react'\n\nimport STYLES from './LoadingSpinner.module.scss'\n\ninterface LoadingSpinnerProps {\n  status: string\n}\n\nconst LoadingSpinner = ({ status }: LoadingSpinnerProps) => {\n  return (\n    <div className={STYLES.loadingSpinnerContainer}>\n      <div className={STYLES.anchor}>\n        <div className={STYLES.spinnerLarge} />\n        <div className={STYLES.spinnerSmall} />\n        <div className={STYLES.status}>{status}</div>\n      </div>\n    </div>\n  )\n}\n\nexport default LoadingSpinner","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"anchor\":\"LoadingSpinner_anchor__3S34b\",\"spinner\":\"LoadingSpinner_spinner__2W4P9\",\"spin\":\"LoadingSpinner_spin__1qIkq\",\"loadingSpinnerContainer\":\"LoadingSpinner_loadingSpinnerContainer__2OZbs\",\"spinnerLarge\":\"LoadingSpinner_spinnerLarge__3zeAT\",\"spinnerSmall\":\"LoadingSpinner_spinnerSmall__25yaq\",\"status\":\"LoadingSpinner_status__33FO4\"};"],"sourceRoot":""}